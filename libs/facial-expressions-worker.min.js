(()=>{var e={741:e=>{function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=()=>[],t.resolve=t,t.id=741,e.exports=t},898:()=>{function e(){}function t(){}self.OffscreenCanvas||(self.OffscreenCanvas=class{constructor(){}}),self.OffscreenCanvasRenderingContext2D||(self.OffscreenCanvasRenderingContext2D=class{constructor(){}}),self.Canvas=self.HTMLCanvasElement=OffscreenCanvas,self.CanvasRenderingContext2D=OffscreenCanvasRenderingContext2D,self.Image=e,self.Video=t;class n extends EventTarget{}if(self.document=new n,self.window=self.Window=self,self.localStorage=new function(){let e={};this.clear=function(){return e={}},this.getItem=function(t){return e.hasOwnProperty(t)?e[t]:void 0},this.removeItem=function(t){return delete e[t]},this.setItem=function(t,n){return e[t]=String(n)}},document.createElement=function(e){if("canvas"===e){let e=new Canvas(1,1);return e.localName="canvas",e.nodeName="CANVAS",e.tagName="CANVAS",e.nodeType=1,e.innerHTML="",e.remove=()=>{console.log("nope")},e}console.log("arg",e)},document.location=self.location,"undefined"==typeof document&&console.warn("Check failed: document"),"undefined"==typeof HTMLCanvasElement&&console.warn("Check failed: HTMLCanvasElement"),"undefined"==typeof ImageData&&console.warn("Check failed: ImageData"),"undefined"==typeof CanvasRenderingContext2D&&console.warn("Check failed: CanvasRenderingContext2D"),self.window=window,self.document=document,self.HTMLImageElement=e,self.HTMLVideoElement=t,"object"!=typeof window||"undefined"==typeof document||"undefined"==typeof HTMLCanvasElement||"undefined"==typeof ImageData||"undefined"==typeof CanvasRenderingContext2D)throw new Error("Failed to monkey patch for face-api, face-api will fail")}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var s=t[r]={exports:{}};return e[r](s,s.exports,n),s.exports}n.amdO={},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{"use strict";n(898);var e="node_modules/@vladmandic/face-api/dist/face-api.esm.js",t=Object.defineProperty,r=(e=>n(741))(),a=(e,n)=>{for(var r in n)t(e,r,{get:n[r],enumerable:!0})},s={};a(s,{Abs:()=>Ke,Acos:()=>Xe,Acosh:()=>Ye,AdadeltaOptimizer:()=>Vp,AdagradOptimizer:()=>Up,AdamOptimizer:()=>Gp,AdamaxOptimizer:()=>Hp,Add:()=>Ze,AddN:()=>Je,All:()=>Qe,Any:()=>et,ArgMax:()=>tt,ArgMin:()=>nt,Asin:()=>rt,Asinh:()=>at,Atan:()=>st,Atan2:()=>ot,Atanh:()=>it,AvgPool:()=>ut,AvgPool3D:()=>ct,AvgPool3DGrad:()=>ht,AvgPoolGrad:()=>lt,BackendWasm:()=>YG,BatchMatMul:()=>dt,BatchToSpaceND:()=>pt,Bincount:()=>ft,BroadcastArgs:()=>gt,BroadcastTo:()=>mt,Callback:()=>tS,CallbackList:()=>jb,Cast:()=>yt,Ceil:()=>bt,ClipByValue:()=>xt,Complex:()=>vt,ComplexAbs:()=>wt,Concat:()=>kt,Conv2D:()=>It,Conv2DBackpropFilter:()=>St,Conv2DBackpropInput:()=>Nt,Conv3D:()=>Tt,Conv3DBackpropFilterV2:()=>Et,Conv3DBackpropInputV2:()=>Ct,Cos:()=>_t,Cosh:()=>$t,CropAndResize:()=>Ft,Cumsum:()=>At,CustomCallback:()=>Xb,DataStorage:()=>U,DenseBincount:()=>Rt,DepthToSpace:()=>Dt,DepthwiseConv2dNative:()=>Mt,DepthwiseConv2dNativeBackpropFilter:()=>Ot,DepthwiseConv2dNativeBackpropInput:()=>Lt,Diag:()=>zt,Dilation2D:()=>Pt,Dilation2DBackpropFilter:()=>Wt,Dilation2DBackpropInput:()=>Bt,ENV:()=>He,EarlyStopping:()=>oS,Einsum:()=>Ut,Elu:()=>Gt,EluGrad:()=>Ht,Environment:()=>Be,Equal:()=>qt,Erf:()=>jt,Exp:()=>Kt,ExpandDims:()=>Xt,Expm1:()=>Yt,FFT:()=>Zt,Fill:()=>Jt,FlipLeftRight:()=>Qt,Floor:()=>en,FloorDiv:()=>tn,FromPixels:()=>Xr,FusedBatchNorm:()=>nn,FusedConv2D:()=>Jr,FusedDepthwiseConv2D:()=>Qr,GPGPUContext:()=>cM,GatherNd:()=>an,GatherV2:()=>rn,GraphModel:()=>zN,Greater:()=>sn,GreaterEqual:()=>on,History:()=>Kb,IFFT:()=>ln,Identity:()=>un,Imag:()=>cn,InputSpec:()=>Fb,IsFinite:()=>hn,IsInf:()=>dn,IsNan:()=>pn,KernelBackend:()=>G,LRN:()=>Sn,LRNGrad:()=>Nn,LayerVariable:()=>_b,LayersModel:()=>av,LeakyRelu:()=>fn,Less:()=>mn,LessEqual:()=>gn,LinSpace:()=>yn,Log:()=>bn,Log1p:()=>xn,LogSoftmax:()=>In,LogicalAnd:()=>vn,LogicalNot:()=>wn,LogicalOr:()=>kn,MathBackendWebGL:()=>IO,Max:()=>Tn,MaxPool:()=>Cn,MaxPool3D:()=>$n,MaxPool3DGrad:()=>An,MaxPoolGrad:()=>_n,MaxPoolWithArgmax:()=>Fn,Maximum:()=>En,Mean:()=>Rn,Min:()=>Dn,Minimum:()=>Mn,MirrorPad:()=>On,Mod:()=>Ln,MomentumOptimizer:()=>qp,Multinomial:()=>zn,Multiply:()=>Pn,Neg:()=>Bn,NonMaxSuppressionV3:()=>Vn,NonMaxSuppressionV4:()=>Un,NonMaxSuppressionV5:()=>Gn,NotEqual:()=>Wn,OP_SCOPE_SUFFIX:()=>As,OneHot:()=>jn,OnesLike:()=>Hn,Optimizer:()=>Wp,OptimizerConstructors:()=>Xp,Pack:()=>qn,PadV2:()=>Kn,Pool:()=>Xn,Pow:()=>Yn,Prelu:()=>Zn,Prod:()=>Jn,RMSPropOptimizer:()=>Kp,RNN:()=>cw,Range:()=>Qn,Rank:()=>Xa,Real:()=>er,RealDiv:()=>Vt,Reciprocal:()=>tr,Reduction:()=>pp,Relu:()=>nr,Relu6:()=>ur,Reshape:()=>rr,ResizeBilinear:()=>ir,ResizeBilinearGrad:()=>or,ResizeNearestNeighbor:()=>ar,ResizeNearestNeighborGrad:()=>sr,Reverse:()=>lr,RotateWithOffset:()=>Yr,Round:()=>cr,Rsqrt:()=>hr,SGDOptimizer:()=>jp,ScatterNd:()=>dr,Select:()=>pr,Selu:()=>fr,Sequential:()=>ov,Sigmoid:()=>xr,Sign:()=>br,Sin:()=>gr,Sinh:()=>yr,Slice:()=>mr,Softmax:()=>Nr,Softplus:()=>vr,SpaceToBatchND:()=>Ir,SparseFillEmptyRows:()=>Tr,SparseReshape:()=>Er,SparseSegmentMean:()=>Cr,SparseSegmentSum:()=>_r,SparseToDense:()=>$r,SplitV:()=>Sr,Sqrt:()=>wr,Square:()=>Fr,SquaredDifference:()=>Ar,Step:()=>Kr,StridedSlice:()=>Rr,StringNGrams:()=>Dr,StringSplit:()=>Mr,StringToHashBucketFast:()=>Or,Sub:()=>Lr,Sum:()=>kr,SymbolicTensor:()=>Rb,Tan:()=>zr,Tanh:()=>Pr,Tensor:()=>ja,TensorBuffer:()=>Ua,Tile:()=>Br,TopK:()=>Wr,Transform:()=>Vr,Transpose:()=>Ur,Unique:()=>Gr,Unpack:()=>Hr,UnsortedSegmentSum:()=>jr,Variable:()=>Ka,ZerosLike:()=>qr,_FusedMatMul:()=>Zr,abs:()=>Iu,acos:()=>Su,acosh:()=>Nu,add:()=>xu,addN:()=>Tu,all:()=>Eu,any:()=>Cu,argMax:()=>_u,argMin:()=>$u,asin:()=>Au,asinh:()=>Fu,atan:()=>Ru,atan2:()=>Du,atanh:()=>Mu,avgPool:()=>Qu,avgPool3d:()=>el,backend:()=>yu,backend_util:()=>Qp,basicLSTMCell:()=>sl,batchNorm:()=>ol,batchNorm2d:()=>ul,batchNorm3d:()=>ll,batchNorm4d:()=>cl,batchToSpaceND:()=>il,bincount:()=>hl,booleanMaskAsync:()=>md,broadcastArgs:()=>dl,broadcastTo:()=>pl,broadcast_util:()=>Ji,browser:()=>ro,buffer:()=>Ei,callbacks:()=>uS,cast:()=>Ci,ceil:()=>fl,clipByValue:()=>ml,clone:()=>_i,complex:()=>Rs,concat:()=>tl,concat1d:()=>gl,concat2d:()=>yl,concat3d:()=>bl,concat4d:()=>xl,constraints:()=>dg,conv1d:()=>wl,conv2d:()=>vl,conv2dTranspose:()=>Il,conv3d:()=>Sl,conv3dTranspose:()=>Tl,copyRegisteredKernels:()=>ha,cos:()=>El,cosh:()=>Cl,cosineWindow:()=>Nd,cumsum:()=>_l,customGrad:()=>mc,data:()=>WN,denseBincount:()=>$l,deprecationWarn:()=>tu,depthToSpace:()=>Al,depthwiseConv2d:()=>Fl,deregisterOp:()=>dS,device_util:()=>ws,diag:()=>Rl,dilation2d:()=>Dl,disableDeprecationWarnings:()=>eu,dispose:()=>ou,disposeVariables:()=>nu,div:()=>wu,divNoNan:()=>zl,dot:()=>Pl,dropout:()=>Id,einsum:()=>Bl,elu:()=>Wl,enableDebugMode:()=>Qo,enableProdMode:()=>Jo,enclosingPowerOfTwo:()=>Sd,engine:()=>ru,env:()=>Ue,equal:()=>Ml,erf:()=>Vl,exp:()=>Ul,expandDims:()=>Gl,expm1:()=>Hl,eye:()=>ql,fft:()=>Gh,fill:()=>Kl,findBackend:()=>fu,findBackendFactory:()=>mu,floor:()=>Xl,floorDiv:()=>vu,forceHalfFloat:()=>NO,fused:()=>Ed,gather:()=>Yl,gatherND:()=>kd,gather_util:()=>co,getBackend:()=>du,getGradient:()=>sa,getKernel:()=>aa,getKernelsForBackend:()=>ia,getThreadsCount:()=>lH,gpgpu_util:()=>WD,grad:()=>cc,grads:()=>hc,greater:()=>Zl,greaterEqual:()=>Jl,ifft:()=>Hh,imag:()=>Ql,image:()=>Op,inTopKAsync:()=>Td,initializers:()=>Jg,input:()=>hv,io:()=>Ai,irfft:()=>jh,isFinite:()=>ec,isInf:()=>tc,isNaN:()=>nc,keep:()=>uu,kernel_impls:()=>Qf,layers:()=>bb,leakyRelu:()=>rc,less:()=>ac,lessEqual:()=>sc,linalg:()=>Lp,linspace:()=>ic,loadGraphModel:()=>PN,loadLayersModel:()=>cv,localResponseNormalization:()=>oc,log:()=>uc,log1p:()=>lc,logSigmoid:()=>xc,logSoftmax:()=>Ic,logSumExp:()=>Fc,logicalAnd:()=>Rc,logicalNot:()=>Dc,logicalOr:()=>Mc,logicalXor:()=>Oc,losses:()=>zp,matMul:()=>Ki,math:()=>qi,max:()=>vc,maxPool:()=>Lc,maxPool3d:()=>zc,maxPoolWithArgmax:()=>Pc,maximum:()=>Bc,mean:()=>Wc,memory:()=>au,meshgrid:()=>Gc,metrics:()=>DI,min:()=>Hc,minimum:()=>jc,mirrorPad:()=>qc,mod:()=>Kc,model:()=>uv,models:()=>YI,moments:()=>Yc,movingAverage:()=>bd,mul:()=>ku,multiRNNCell:()=>Zc,multinomial:()=>Jc,neg:()=>yc,nextFrame:()=>Jp,norm:()=>yd,notEqual:()=>Qc,oneHot:()=>Xi,ones:()=>Uc,onesLike:()=>eh,op:()=>Fs,outerProduct:()=>th,pad:()=>nh,pad1d:()=>rh,pad2d:()=>ah,pad3d:()=>sh,pad4d:()=>ih,pool:()=>uh,pow:()=>lh,prelu:()=>ch,print:()=>$i,prod:()=>hh,profile:()=>su,rand:()=>dh,randomGamma:()=>yh,randomNormal:()=>bh,randomUniform:()=>xh,range:()=>vh,ready:()=>hu,real:()=>wh,reciprocal:()=>kh,registerBackend:()=>gu,registerCallbackConstructor:()=>dv,registerGradient:()=>ua,registerKernel:()=>oa,registerOp:()=>cS,regularizers:()=>ZI,relu:()=>Ih,relu6:()=>Sh,removeBackend:()=>pu,reshape:()=>Ju,reverse:()=>Nh,reverse1d:()=>Th,reverse2d:()=>Eh,reverse3d:()=>Ch,reverse4d:()=>_h,rfft:()=>Kh,round:()=>$h,rsqrt:()=>Ah,scalar:()=>Fh,scatterND:()=>xd,scatter_util:()=>po,selu:()=>Rh,separableConv2d:()=>Dh,sequential:()=>lv,serialization:()=>Mo,setBackend:()=>cu,setPlatform:()=>bu,setThreadsCount:()=>uH,setWasmPath:()=>aH,setWasmPaths:()=>sH,setWebGLContext:()=>lR,setdiff1dAsync:()=>Mh,sigmoid:()=>nl,sign:()=>Oh,signal:()=>Mp,sin:()=>Lh,sinh:()=>zh,slice:()=>rl,slice1d:()=>Ph,slice2d:()=>Bh,slice3d:()=>Wh,slice4d:()=>Vh,slice_util:()=>yo,softmax:()=>Uh,softplus:()=>bc,spaceToBatchND:()=>oh,sparse:()=>Pp,sparseToDense:()=>wd,spectral:()=>Dp,split:()=>qh,sqrt:()=>Xh,square:()=>Xc,squaredDifference:()=>Yh,squeeze:()=>Zh,stack:()=>Jh,step:()=>Qh,stridedSlice:()=>ed,string:()=>Bp,sub:()=>wc,sum:()=>kc,sumOutType:()=>us,tan:()=>td,tanh:()=>al,tensor:()=>Ms,tensor1d:()=>nd,tensor2d:()=>rd,tensor3d:()=>ao,tensor4d:()=>ad,tensor5d:()=>sd,tensor6d:()=>id,tensor_util:()=>ss,test_util:()=>Po,tidy:()=>iu,tile:()=>jl,time:()=>lu,topk:()=>od,train:()=>Yp,transpose:()=>Yi,truncatedNormal:()=>ud,unique:()=>ld,unregisterGradient:()=>ca,unregisterKernel:()=>la,unsortedSegmentSum:()=>cd,unstack:()=>hd,upcastType:()=>os,util:()=>pa,valueAndGrad:()=>dc,valueAndGrads:()=>pc,variable:()=>dd,variableGrads:()=>fc,version:()=>hH,version_converter:()=>BN,version_core:()=>Zo,version_layers:()=>Fx,version_wasm:()=>cH,version_webgl:()=>SO,webgl:()=>TO,webgl_util:()=>eR,where:()=>Ol,whereAsync:()=>fd,zeros:()=>Vc,zerosLike:()=>Ll});var i=Object.create,o=Object.defineProperty,u=Object.getOwnPropertyDescriptor,l=Object.getOwnPropertyNames,c=Object.getPrototypeOf,h=Object.prototype.hasOwnProperty,d=(e,t)=>function(){return t||(0,e[l(e)[0]])((t={exports:{}}).exports,t),t.exports},p=(e,t)=>{for(var n in t)o(e,n,{get:t[n],enumerable:!0})},f=(e,t)=>{return((e,t,n,r)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let n of l(t))h.call(e,n)||"default"===n||o(e,n,{get:()=>t[n],enumerable:!(r=u(t,n))||r.enumerable});return e})((n=o(null!=e?i(c(e)):{},"default",!t&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0}),o(n,"__esModule",{value:!0})),e);var n},m=d({"node_modules/.pnpm/long@4.0.0/node_modules/long/src/long.js"(e,t){t.exports=r;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function r(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function a(e){return!0===(e&&e.__isLong__)}r.prototype.__isLong__,Object.defineProperty(r.prototype,"__isLong__",{value:!0}),r.isLong=a;var s={},i={};function o(e,t){var n,r,a;return t?(a=0<=(e>>>=0)&&e<256)&&(r=i[e])?r:(n=l(e,(0|e)<0?-1:0,!0),a&&(i[e]=n),n):(a=-128<=(e|=0)&&e<128)&&(r=s[e])?r:(n=l(e,e<0?-1:0,!1),a&&(s[e]=n),n)}function u(e,t){if(isNaN(e))return t?b:y;if(t){if(e<0)return b;if(e>=f)return I}else{if(e<=-m)return S;if(e+1>=m)return k}return e<0?u(-e,t).neg():l(e%p|0,e/p|0,t)}function l(e,t,n){return new r(e,t,n)}r.fromInt=o,r.fromNumber=u,r.fromBits=l;var c=Math.pow;function h(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return y;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return h(e.substring(1),t,n).neg();for(var a=u(c(n,8)),s=y,i=0;i<e.length;i+=8){var o=Math.min(8,e.length-i),l=parseInt(e.substring(i,i+o),n);if(o<8){var d=u(c(n,o));s=s.mul(d).add(u(l))}else s=(s=s.mul(a)).add(u(l))}return s.unsigned=t,s}function d(e,t){return"number"==typeof e?u(e,t):"string"==typeof e?h(e,t):l(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}r.fromString=h,r.fromValue=d;var p=4294967296,f=p*p,m=f/2,g=o(1<<24),y=o(0);r.ZERO=y;var b=o(0,!0);r.UZERO=b;var x=o(1);r.ONE=x;var v=o(1,!0);r.UONE=v;var w=o(-1);r.NEG_ONE=w;var k=l(-1,2147483647,!1);r.MAX_VALUE=k;var I=l(-1,-1,!0);r.MAX_UNSIGNED_VALUE=I;var S=l(0,-2147483648,!1);r.MIN_VALUE=S;var N=r.prototype;N.toInt=function(){return this.unsigned?this.low>>>0:this.low},N.toNumber=function(){return this.unsigned?(this.high>>>0)*p+(this.low>>>0):this.high*p+(this.low>>>0)},N.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(S)){var t=u(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=u(c(e,6),this.unsigned),s=this,i="";;){var o=s.div(a),l=(s.sub(o.mul(a)).toInt()>>>0).toString(e);if((s=o).isZero())return l+i;for(;l.length<6;)l="0"+l;i=""+l+i}},N.getHighBits=function(){return this.high},N.getHighBitsUnsigned=function(){return this.high>>>0},N.getLowBits=function(){return this.low},N.getLowBitsUnsigned=function(){return this.low>>>0},N.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},N.isZero=function(){return 0===this.high&&0===this.low},N.eqz=N.isZero,N.isNegative=function(){return!this.unsigned&&this.high<0},N.isPositive=function(){return this.unsigned||this.high>=0},N.isOdd=function(){return 1==(1&this.low)},N.isEven=function(){return 0==(1&this.low)},N.equals=function(e){return a(e)||(e=d(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},N.eq=N.equals,N.notEquals=function(e){return!this.eq(e)},N.neq=N.notEquals,N.ne=N.notEquals,N.lessThan=function(e){return this.comp(e)<0},N.lt=N.lessThan,N.lessThanOrEqual=function(e){return this.comp(e)<=0},N.lte=N.lessThanOrEqual,N.le=N.lessThanOrEqual,N.greaterThan=function(e){return this.comp(e)>0},N.gt=N.greaterThan,N.greaterThanOrEqual=function(e){return this.comp(e)>=0},N.gte=N.greaterThanOrEqual,N.ge=N.greaterThanOrEqual,N.compare=function(e){if(a(e)||(e=d(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},N.comp=N.compare,N.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(x)},N.neg=N.negate,N.add=function(e){a(e)||(e=d(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,i=e.high>>>16,o=65535&e.high,u=e.low>>>16,c=0,h=0,p=0,f=0;return p+=(f+=s+(65535&e.low))>>>16,h+=(p+=r+u)>>>16,c+=(h+=n+o)>>>16,c+=t+i,l((p&=65535)<<16|(f&=65535),(c&=65535)<<16|(h&=65535),this.unsigned)},N.subtract=function(e){return a(e)||(e=d(e)),this.add(e.neg())},N.sub=N.subtract,N.multiply=function(e){if(this.isZero())return y;if(a(e)||(e=d(e)),n)return l(n.mul(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned);if(e.isZero())return y;if(this.eq(S))return e.isOdd()?S:y;if(e.eq(S))return this.isOdd()?S:y;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(g)&&e.lt(g))return u(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,r=65535&this.high,s=this.low>>>16,i=65535&this.low,o=e.high>>>16,c=65535&e.high,h=e.low>>>16,p=65535&e.low,f=0,m=0,b=0,x=0;return b+=(x+=i*p)>>>16,m+=(b+=s*p)>>>16,b&=65535,m+=(b+=i*h)>>>16,f+=(m+=r*p)>>>16,m&=65535,f+=(m+=s*h)>>>16,m&=65535,f+=(m+=i*c)>>>16,f+=t*p+r*h+s*c+i*o,l((b&=65535)<<16|(x&=65535),(f&=65535)<<16|(m&=65535),this.unsigned)},N.mul=N.multiply,N.divide=function(e){if(a(e)||(e=d(e)),e.isZero())throw Error("division by zero");var t,r,s;if(n)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?l((this.unsigned?n.div_u:n.div_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?b:y;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return b;if(e.gt(this.shru(1)))return v;s=b}else{if(this.eq(S))return e.eq(x)||e.eq(w)?S:e.eq(S)?x:(t=this.shr(1).div(e).shl(1)).eq(y)?e.isNegative()?x:w:(r=this.sub(e.mul(t)),s=t.add(r.div(e)));if(e.eq(S))return this.unsigned?b:y;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=y}for(r=this;r.gte(e);){t=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(t)/Math.LN2),o=i<=48?1:c(2,i-48),h=u(t),p=h.mul(e);p.isNegative()||p.gt(r);)p=(h=u(t-=o,this.unsigned)).mul(e);h.isZero()&&(h=x),s=s.add(h),r=r.sub(p)}return s},N.div=N.divide,N.modulo=function(e){return a(e)||(e=d(e)),n?l((this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},N.mod=N.modulo,N.rem=N.modulo,N.not=function(){return l(~this.low,~this.high,this.unsigned)},N.and=function(e){return a(e)||(e=d(e)),l(this.low&e.low,this.high&e.high,this.unsigned)},N.or=function(e){return a(e)||(e=d(e)),l(this.low|e.low,this.high|e.high,this.unsigned)},N.xor=function(e){return a(e)||(e=d(e)),l(this.low^e.low,this.high^e.high,this.unsigned)},N.shiftLeft=function(e){return a(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):l(0,this.low<<e-32,this.unsigned)},N.shl=N.shiftLeft,N.shiftRight=function(e){return a(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):l(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},N.shr=N.shiftRight,N.shiftRightUnsigned=function(e){if(a(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?l(this.low>>>e|t<<32-e,t>>>e,this.unsigned):l(32===e?t:t>>>e-32,0,this.unsigned)},N.shru=N.shiftRightUnsigned,N.shr_u=N.shiftRightUnsigned,N.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},N.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},N.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},N.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},N.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},r.fromBytes=function(e,t,n){return n?r.fromBytesLE(e,t):r.fromBytesBE(e,t)},r.fromBytesLE=function(e,t){return new r(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},r.fromBytesBE=function(e,t){return new r(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}}}),g=d({"(disabled):node_modules/.pnpm/node-fetch@2.6.6/node_modules/node-fetch/browser.js"(){}}),y=d({"(disabled):util"(){}}),b=d({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/alea.js"(e,t){!function(e,t,n){function r(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function a(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function s(e,t){var n=new r(e),s=t&&t.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.alea=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),x=d({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/xor128.js"(e,t){!function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor128=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),v=d({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/xorwow.js"(e,t){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorwow=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),w=d({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/xorshift7.js"(e,t){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function a(e,t){return t.x=e.x.slice(),t.i=e.i,t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.x&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorshift7=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),k=d({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/xor4096.js"(e,t){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}(t,e)}function a(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.X&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor4096=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),I=d({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/tychei.js"(e,t){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.tychei=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),S=d({"(disabled):crypto"(){}}),N=d({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/seedrandom.js"(e,t){!function(e,r){var a,s=this,i=256,o=r.pow(i,6),u=r.pow(2,52),l=2*u,c=255;function h(t,n,c){var h=[],y=m(f((n=1==n?{entropy:!0}:n||{}).entropy?[t,g(e)]:null==t?function(){try{var t;return a&&(t=a.randomBytes)?t=t(i):(t=new Uint8Array(i),(s.crypto||s.msCrypto).getRandomValues(t)),g(t)}catch(t){var n=s.navigator,r=n&&n.plugins;return[+new Date,s,r,s.screen,g(e)]}}():t,3),h),b=new d(h),x=function(){for(var e=b.g(6),t=o,n=0;e<u;)e=(e+n)*i,t*=i,n=b.g(1);for(;e>=l;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|b.g(4)},x.quick=function(){return b.g(4)/4294967296},x.double=x,m(g(b.S),e),(n.pass||c||function(e,t,n,a){return a&&(a.S&&p(a,b),e.state=function(){return p(b,{})}),n?(r.random=e,t):e})(x,y,"global"in n?n.global:this==r,n.state)}function d(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<i;)o[a]=a++;for(a=0;a<i;a++)o[a]=o[s=c&s+e[a%n]+(t=o[a])],o[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,o=r.S;e--;)t=o[a=c&a+1],n=n*i+o[c&(o[a]=o[s=c&s+t])+(o[s]=t)];return r.i=a,r.j=s,n})(i)}function p(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function f(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(f(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function m(e,t){for(var n,r=e+"",a=0;a<r.length;)t[c&a]=c&(n^=19*t[c&a])+r.charCodeAt(a++);return g(t)}function g(e){return String.fromCharCode.apply(0,e)}if(r.seedrandom=h,m(r.random(),e),"object"==typeof t&&t.exports){t.exports=h;try{a=S()}catch(e){}}else"function"==typeof define&&n.amdO&&define((function(){return h}))}([],Math)}}),T=d({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/index.js"(e,t){var n=b(),r=x(),a=v(),s=w(),i=k(),o=I(),u=N();u.alea=n,u.xor128=r,u.xorwow=a,u.xorshift7=s,u.xor4096=i,u.tychei=o,t.exports=u}}),E=d({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/alea.js"(e,t){!function(e,t,n){function r(e){var t,n=this,r=(t=4022871197,function(e){e=String(e);for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function a(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function s(e,t){var n=new r(e),s=t&&t.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.alea=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),C=d({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xor128.js"(e,t){!function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor128=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),_=d({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xorwow.js"(e,t){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorwow=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),$=d({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xorshift7.js"(e,t){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function a(e,t){return t.x=e.x.slice(),t.i=e.i,t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.x&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorshift7=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),A=d({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xor4096.js"(e,t){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}(t,e)}function a(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.X&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor4096=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),F=d({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/tychei.js"(e,t){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.tychei=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),R=d({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/seedrandom.js"(e,t){!function(e,r,a){var s,i=256,o=a.pow(i,6),u=a.pow(2,52),l=2*u,c=255;function h(t,n,c){var h=[],y=m(f((n=1==n?{entropy:!0}:n||{}).entropy?[t,g(r)]:null==t?function(){try{var t;return s&&(t=s.randomBytes)?t=t(i):(t=new Uint8Array(i),(e.crypto||e.msCrypto).getRandomValues(t)),g(t)}catch(t){var n=e.navigator,a=n&&n.plugins;return[+new Date,e,a,e.screen,g(r)]}}():t,3),h),b=new d(h),x=function(){for(var e=b.g(6),t=o,n=0;e<u;)e=(e+n)*i,t*=i,n=b.g(1);for(;e>=l;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|b.g(4)},x.quick=function(){return b.g(4)/4294967296},x.double=x,m(g(b.S),r),(n.pass||c||function(e,t,n,r){return r&&(r.S&&p(r,b),e.state=function(){return p(b,{})}),n?(a.random=e,t):e})(x,y,"global"in n?n.global:this==a,n.state)}function d(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<i;)o[a]=a++;for(a=0;a<i;a++)o[a]=o[s=c&s+e[a%n]+(t=o[a])],o[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,o=r.S;e--;)t=o[a=c&a+1],n=n*i+o[c&(o[a]=o[s=c&s+t])+(o[s]=t)];return r.i=a,r.j=s,n})(i)}function p(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function f(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(f(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function m(e,t){for(var n,r=e+"",a=0;a<r.length;)t[c&a]=c&(n^=19*t[c&a])+r.charCodeAt(a++);return g(t)}function g(e){return String.fromCharCode.apply(0,e)}if(m(a.random(),r),"object"==typeof t&&t.exports){t.exports=h;try{s=S()}catch(e){}}else"function"==typeof define&&n.amdO?define((function(){return h})):a.seedrandom=h}("undefined"!=typeof self?self:e,[],Math)}}),D=d({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/index.js"(e,t){var n=E(),r=C(),a=_(),s=$(),i=A(),o=F(),u=R();u.alea=n,u.xor128=r,u.xorwow=a,u.xorshift7=s,u.xor4096=i,u.tychei=o,t.exports=u}}),M=d({"(disabled):node_modules/.pnpm/string_decoder@1.1.1/node_modules/string_decoder/lib/string_decoder.js"(){}}),O=d({"(disabled):fs"(){}}),L=d({"(disabled):path"(){}}),z=d({"(disabled):worker_threads"(){}}),P=d({"(disabled):perf_hooks"(){}}),B=d({"(disabled):os"(){}}),W=d({"node_modules/.pnpm/@tensorflow+tfjs-backend-wasm@3.13.0_@tensorflow+tfjs-core@3.13.0/node_modules/@tensorflow/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm-threaded-simd.js"(t,r){var a,s=(a=(a="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||e,function(e){function t(){return R.buffer!=W&&se(R.buffer),V}function r(){return R.buffer!=W&&se(R.buffer),U}function s(){return R.buffer!=W&&se(R.buffer),G}function i(){return R.buffer!=W&&se(R.buffer),H}function o(){return R.buffer!=W&&se(R.buffer),j}var u,l,c,h=void 0!==(e=e||{})?e:{};h.ready=new Promise((function(e,t){u=e,l=t})),"undefined"!=typeof process&&process.listeners&&(c={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var d,p={};for(d in h)h.hasOwnProperty(d)&&(p[d]=h[d]);var f=[],m=function(e,t){throw t},g=!1,y=!1,b=!1,x=!1;g="object"==typeof window,y="function"==typeof importScripts,b="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,x=!g&&!b&&!y;var v=h.ENVIRONMENT_IS_PTHREAD||!1;v&&(W=h.buffer);var w,k,I,S,N,T="";function E(e){return h.locateFile?h.locateFile(e,T):T+e}if(b){var C;T=y?L().dirname(T)+"/":"//",w=function(e,t){return S||(S=O()),N||(N=L()),e=N.normalize(e),S.readFileSync(e,t?null:"utf8")},I=function(e){var t=w(e,!0);return t.buffer||(t=new Uint8Array(t)),K(t.buffer),t},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),f=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof wn))throw e})),process.on("unhandledRejection",Se),m=function(e){process.exit(e)},h.inspect=function(){return"[Emscripten Module object]"};try{C=z()}catch(e){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),e}n.g.Worker=C.Worker}else x?("undefined"!=typeof read&&(w=function(e){return read(e)}),I=function(e){var t;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(K("object"==typeof(t=read(e,"binary"))),t)},"undefined"!=typeof scriptArgs?f=scriptArgs:void 0!==arguments&&(f=arguments),"function"==typeof quit&&(m=function(e){quit(e)}),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(g||y)&&(y?T=self.location.href:"undefined"!=typeof document&&document.currentScript&&(T=document.currentScript.src),void 0!==a&&a&&(T=a),T=0!==T.indexOf("blob:")?T.substr(0,T.lastIndexOf("/")+1):"",b?(w=function(e,t){return S||(S=O()),N||(N=L()),e=N.normalize(e),S.readFileSync(e,t?null:"utf8")},I=function(e){var t=w(e,!0);return t.buffer||(t=new Uint8Array(t)),K(t.buffer),t}):(w=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},y&&(I=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),k=function(e,t,n){var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));b&&"undefined"==typeof performance&&(n.g.performance=P().performance);var _,$=h.print||console.log.bind(console),A=h.printErr||console.warn.bind(console);for(d in p)p.hasOwnProperty(d)&&(h[d]=p[d]);function F(e){F.shown||(F.shown={}),F.shown[e]||(F.shown[e]=1,A(e))}p=null,h.arguments&&(f=h.arguments),h.thisProgram&&h.thisProgram,h.quit&&(m=h.quit),Atomics.load,Atomics.store,Atomics.compareExchange,h.wasmBinary&&(_=h.wasmBinary);var R,D,M=h.noExitRuntime||!0;"object"!=typeof WebAssembly&&Se("no native wasm support detected");var W,V,U,G,H,j,q=!1;function K(e,t){e||Se("Assertion failed: "+t)}function X(e){var t=h["_"+e];return K(t,"Cannot call unknown function "+e+", make sure it is exported"),t}function Y(e,t,n,r,a){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);te(e,t=gn(n),n)}return t},array:function(e){var t=gn(e.length);return re(e,t),t}},i=X(e),o=[],u=0;if(r)for(var l=0;l<r.length;l++){var c=s[n[l]];c?(0===u&&(u=fn()),o[l]=c(r[l])):o[l]=r[l]}var h,d=i.apply(null,o);return h=d,d="string"===t?Q(h):"boolean"===t?Boolean(h):h,0!==u&&mn(u),d}function Z(e,t,n,r){var a=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&a&&!r?X(e):function(){return Y(e,t,n,arguments)}}function J(e,t,n){for(var r=t+n,a="";!(t>=r);){var s=e[t++];if(!s)return a;if(128&s){var i=63&e[t++];if(192!=(224&s)){var o=63&e[t++];if((s=224==(240&s)?(15&s)<<12|i<<6|o:(7&s)<<18|i<<12|o<<6|63&e[t++])<65536)a+=String.fromCharCode(s);else{var u=s-65536;a+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else a+=String.fromCharCode((31&s)<<6|i)}else a+=String.fromCharCode(s)}return a}function Q(e,t){return e?J(r(),e,t):""}function ee(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i)),o<=127){if(n>=s)break;t[n++]=o}else if(o<=2047){if(n+1>=s)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=s)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-a}function te(e,t,n){return ee(e,r(),t,n)}function ne(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);r>=55296&&r<=57343&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),r<=127?++t:t+=r<=2047?2:r<=65535?3:4}return t}function re(e,n){t().set(e,n)}function ae(e,t){return e%t>0&&(e+=t-e%t),e}function se(e){W=e,h.HEAP8=V=new Int8Array(e),h.HEAP16=new Int16Array(e),h.HEAP32=G=new Int32Array(e),h.HEAPU8=U=new Uint8Array(e),h.HEAPU16=new Uint16Array(e),h.HEAPU32=H=new Uint32Array(e),h.HEAPF32=new Float32Array(e),h.HEAPF64=j=new Float64Array(e)}var ie,oe=h.INITIAL_MEMORY||16777216;if(v)R=h.wasmMemory,W=h.buffer;else if(h.wasmMemory)R=h.wasmMemory;else if(!((R=new WebAssembly.Memory({initial:oe/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw A("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),b&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");R&&(W=R.buffer),oe=W.byteLength,se(W);var ue=[],le=[],ce=[],he=[],de=[];function pe(){if(!v){if(h.preRun)for("function"==typeof h.preRun&&(h.preRun=[h.preRun]);h.preRun.length;)ye(h.preRun.shift());Oe(ue)}}function fe(){v||Oe(le)}function me(){v||Oe(ce)}function ge(){if(!v){if(h.postRun)for("function"==typeof h.postRun&&(h.postRun=[h.postRun]);h.postRun.length;)be(h.postRun.shift());Oe(de)}}function ye(e){ue.unshift(e)}function be(e){de.unshift(e)}v||le.push({func:function(){Jt()}});var xe=0,ve=null,we=null;function ke(e){K(!v,"addRunDependency cannot be used in a pthread worker"),xe++,h.monitorRunDependencies&&h.monitorRunDependencies(xe)}function Ie(e){if(xe--,h.monitorRunDependencies&&h.monitorRunDependencies(xe),0==xe&&(null!==ve&&(clearInterval(ve),ve=null),we)){var t=we;we=null,t()}}function Se(e){h.onAbort&&h.onAbort(e),v&&console.error("Pthread aborting at "+(new Error).stack),A(e+=""),q=!0,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw l(t),t}function Ne(e,t){return String.prototype.startsWith?e.startsWith(t):0===e.indexOf(t)}h.preloadedImages={},h.preloadedAudios={};var Te="data:application/octet-stream;base64,";function Ee(e){return Ne(e,Te)}var Ce="file://";function _e(e){return Ne(e,Ce)}var $e="tfjs-backend-wasm-threaded-simd.wasm";function Ae(e){try{if(e==$e&&_)return new Uint8Array(_);if(I)return I(e);throw"both async and sync fetching of the wasm failed"}catch(e){Se(e)}}function Fe(){if(!_&&(g||y)){if("function"==typeof fetch&&!_e($e))return fetch($e,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+$e+"'";return e.arrayBuffer()})).catch((function(){return Ae($e)}));if(k)return new Promise((function(e,t){k($e,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return Ae($e)}))}function Re(){var e={a:Zt};function t(e,t){var n=e.exports;if(h.asm=n,ie=h.asm.I,D=t,!v){var r=Ue.unusedWorkers.length;Ue.unusedWorkers.forEach((function(e){Ue.loadWasmModuleToWorker(e,(function(){--r||Ie()}))}))}}function n(e){t(e.instance,e.module)}function r(t){return Fe().then((function(t){return WebAssembly.instantiate(t,e)})).then(t,(function(e){A("failed to asynchronously prepare wasm: "+e),Se(e)}))}if(v||ke(),h.instantiateWasm)try{return h.instantiateWasm(e,t)}catch(e){return A("Module.instantiateWasm callback failed with error: "+e),!1}return(_||"function"!=typeof WebAssembly.instantiateStreaming||Ee($e)||_e($e)||"function"!=typeof fetch?r(n):fetch($e,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return A("wasm streaming compile failed: "+e),A("falling back to ArrayBuffer instantiation"),r(n)}))}))).catch(l),{}}Ee($e)||($e=E($e));var De={10664:function(){throw"Canceled!"},10682:function(e,t){setTimeout((function(){ln(e,t)}),0)}};function Me(){Ue.initRuntime()}function Oe(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?ie.get(n)():ie.get(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(h)}}var Le={EPERM:63,ENOENT:44,ESRCH:71,EINTR:27,EIO:29,ENXIO:60,E2BIG:1,ENOEXEC:45,EBADF:8,ECHILD:12,EAGAIN:6,EWOULDBLOCK:6,ENOMEM:48,EACCES:2,EFAULT:21,ENOTBLK:105,EBUSY:10,EEXIST:20,EXDEV:75,ENODEV:43,ENOTDIR:54,EISDIR:31,EINVAL:28,ENFILE:41,EMFILE:33,ENOTTY:59,ETXTBSY:74,EFBIG:22,ENOSPC:51,ESPIPE:70,EROFS:69,EMLINK:34,EPIPE:64,EDOM:18,ERANGE:68,ENOMSG:49,EIDRM:24,ECHRNG:106,EL2NSYNC:156,EL3HLT:107,EL3RST:108,ELNRNG:109,EUNATCH:110,ENOCSI:111,EL2HLT:112,EDEADLK:16,ENOLCK:46,EBADE:113,EBADR:114,EXFULL:115,ENOANO:104,EBADRQC:103,EBADSLT:102,EDEADLOCK:16,EBFONT:101,ENOSTR:100,ENODATA:116,ETIME:117,ENOSR:118,ENONET:119,ENOPKG:120,EREMOTE:121,ENOLINK:47,EADV:122,ESRMNT:123,ECOMM:124,EPROTO:65,EMULTIHOP:36,EDOTDOT:125,EBADMSG:9,ENOTUNIQ:126,EBADFD:127,EREMCHG:128,ELIBACC:129,ELIBBAD:130,ELIBSCN:131,ELIBMAX:132,ELIBEXEC:133,ENOSYS:52,ENOTEMPTY:55,ENAMETOOLONG:37,ELOOP:32,EOPNOTSUPP:138,EPFNOSUPPORT:139,ECONNRESET:15,ENOBUFS:42,EAFNOSUPPORT:5,EPROTOTYPE:67,ENOTSOCK:57,ENOPROTOOPT:50,ESHUTDOWN:140,ECONNREFUSED:14,EADDRINUSE:3,ECONNABORTED:13,ENETUNREACH:40,ENETDOWN:38,ETIMEDOUT:73,EHOSTDOWN:142,EHOSTUNREACH:23,EINPROGRESS:26,EALREADY:7,EDESTADDRREQ:17,EMSGSIZE:35,EPROTONOSUPPORT:66,ESOCKTNOSUPPORT:137,EADDRNOTAVAIL:4,ENETRESET:39,EISCONN:30,ENOTCONN:53,ETOOMANYREFS:141,EUSERS:136,EDQUOT:19,ESTALE:72,ENOTSUP:138,ENOMEDIUM:148,EILSEQ:25,EOVERFLOW:61,ECANCELED:11,ENOTRECOVERABLE:56,EOWNERDEAD:62,ESTRPIPE:135};function ze(e,n){if(e<=0||e>t().length||!0&e||n<0)return-28;if(0==n)return 0;n>=2147483647&&(n=1/0);var r=Atomics.load(s(),vn>>2),a=0;if(r==e&&Atomics.compareExchange(s(),vn>>2,r,0)==r&&(a=1,--n<=0))return 1;var i=Atomics.notify(s(),e>>2,n);if(i>=0)return i+a;throw"Atomics.notify returned an unexpected value "+i}function Pe(e){if(v)throw"Internal Error! killThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in killThread!";s()[e+12>>2]=0;var t=Ue.pthreads[e];t.worker.terminate(),Ue.freeThreadData(t),Ue.runningWorkers.splice(Ue.runningWorkers.indexOf(t.worker),1),t.worker.pthread=void 0}function Be(e){if(v)throw"Internal Error! cancelThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in cancelThread!";Ue.pthreads[e].worker.postMessage({cmd:"cancel"})}function We(e){if(v)throw"Internal Error! cleanupThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in cleanupThread!";var t=Ue.pthreads[e];if(t){s()[e+12>>2]=0;var n=t.worker;Ue.returnWorkerToPool(n)}}h._emscripten_futex_wake=ze;var Ve,Ue={unusedWorkers:[],runningWorkers:[],initMainThreadBlock:function(){for(var e=0;e<8;++e)Ue.allocateUnusedWorker()},initRuntime:function(){for(var e=Qt(228),t=0;t<57;++t)i()[e/4+t]=0;s()[e+12>>2]=e;var n=e+152;s()[n>>2]=n;var r=Qt(512);for(t=0;t<128;++t)i()[r/4+t]=0;Atomics.store(i(),e+100>>2,r),Atomics.store(i(),e+40>>2,e),pn(e,!y,1),on(e)},initWorker:function(){},pthreads:{},threadExitHandlers:[],setThreadStatus:function(){},runExitHandlers:function(){for(;Ue.threadExitHandlers.length>0;)Ue.threadExitHandlers.pop()();v&&rn()&&an()},runExitHandlersAndDeinitThread:function(e,t){Atomics.store(i(),e+56>>2,1),Atomics.store(i(),e+60>>2,0),Ue.runExitHandlers(),Atomics.store(i(),e+4>>2,t),Atomics.store(i(),e+0>>2,1),ze(e+0,2147483647),pn(0,0,0)},threadExit:function(e){var t=rn();t&&(Ue.runExitHandlersAndDeinitThread(t,e),v&&postMessage({cmd:"exit"}))},threadCancel:function(){Ue.runExitHandlersAndDeinitThread(rn(),-1),postMessage({cmd:"cancelDone"})},terminateAllThreads:function(){for(var e in Ue.pthreads)(r=Ue.pthreads[e])&&r.worker&&Ue.returnWorkerToPool(r.worker);Ue.pthreads={};for(var t=0;t<Ue.unusedWorkers.length;++t)(n=Ue.unusedWorkers[t]).terminate();for(Ue.unusedWorkers=[],t=0;t<Ue.runningWorkers.length;++t){var n,r=(n=Ue.runningWorkers[t]).pthread;Ue.freeThreadData(r),n.terminate()}Ue.runningWorkers=[]},freeThreadData:function(e){if(e){if(e.threadInfoStruct){var t=s()[e.threadInfoStruct+100>>2];s()[e.threadInfoStruct+100>>2]=0,en(t),en(e.threadInfoStruct)}e.threadInfoStruct=0,e.allocatedOwnStack&&e.stackBase&&en(e.stackBase),e.stackBase=0,e.worker&&(e.worker.pthread=null)}},returnWorkerToPool:function(e){Ue.runWithoutMainThreadQueuedCalls((function(){delete Ue.pthreads[e.pthread.threadInfoStruct],Ue.unusedWorkers.push(e),Ue.runningWorkers.splice(Ue.runningWorkers.indexOf(e),1),Ue.freeThreadData(e.pthread),e.pthread=void 0}))},runWithoutMainThreadQueuedCalls:function(e){s()[xn>>2]=0;try{e()}finally{s()[xn>>2]=1}},receiveObjectTransfer:function(e){},loadWasmModuleToWorker:function(e,t){e.onmessage=function(n){var r=n.data,a=r.cmd;if(e.pthread&&(Ue.currentProxiedOperationCallerThread=e.pthread.threadInfoStruct),r.targetThread&&r.targetThread!=rn()){var s=Ue.pthreads[r.targetThread];return s?s.worker.postMessage(n.data,r.transferList):console.error('Internal error! Worker sent a message "'+a+'" to target pthread '+r.targetThread+", but that thread no longer exists!"),void(Ue.currentProxiedOperationCallerThread=void 0)}if("processQueuedMainThreadWork"===a)sn();else if("spawnThread"===a)Bt(n.data);else if("cleanupThread"===a)We(r.thread);else if("killThread"===a)Pe(r.thread);else if("cancelThread"===a)Be(r.thread);else if("loaded"===a)e.loaded=!0,t&&t(e),e.runPthread&&(e.runPthread(),delete e.runPthread);else if("print"===a)$("Thread "+r.threadId+": "+r.text);else if("printErr"===a)A("Thread "+r.threadId+": "+r.text);else if("alert"===a)alert("Thread "+r.threadId+": "+r.text);else if("exit"===a)e.pthread&&Atomics.load(i(),e.pthread.threadInfoStruct+64>>2)&&Ue.returnWorkerToPool(e);else if("exitProcess"===a)try{In(r.returnCode)}catch(e){if(e instanceof wn)return;throw e}else"cancelDone"===a?Ue.returnWorkerToPool(e):"objectTransfer"===a?Ue.receiveObjectTransfer(n.data):"setimmediate"===n.data.target?e.postMessage(n.data):A("worker sent an unknown command "+a);Ue.currentProxiedOperationCallerThread=void 0},e.onerror=function(e){A("pthread sent an error! "+e.filename+":"+e.lineno+": "+e.message)},b&&(e.on("message",(function(t){e.onmessage({data:t})})),e.on("error",(function(t){e.onerror(t)})),e.on("exit",(function(e){}))),e.postMessage({cmd:"load",urlOrBlob:h.mainScriptUrlOrBlob||a,wasmMemory:R,wasmModule:D})},allocateUnusedWorker:function(){var e=E("tfjs-backend-wasm-threaded-simd.worker.js");Ue.unusedWorkers.push(new Worker(e))},getNewWorker:function(){return 0==Ue.unusedWorkers.length&&(Ue.allocateUnusedWorker(),Ue.loadWasmModuleToWorker(Ue.unusedWorkers[0])),Ue.unusedWorkers.length>0?Ue.unusedWorkers.pop():null},busySpinWait:function(e){for(var t=performance.now()+e;performance.now()<t;);}};function Ge(e,t){yn(e,t),mn(e)}function He(){return M}function je(e,t){return ie.get(e)(t)}function qe(e,t,n,r){Se("Assertion failed: "+Q(e)+", at: "+[t?Q(t):"unknown filename",n,r?Q(r):"unknown function"])}function Ke(e,t){_main(e,t)}function Xe(e){return s()[tn()>>2]=e,e}function Ye(e,t){if(v)return at(1,1,e,t)}function Ze(e,t){if(e==t)postMessage({cmd:"processQueuedMainThreadWork"});else if(v)postMessage({targetThread:e,cmd:"processThreadQueue"});else{var n=Ue.pthreads[e],r=n&&n.worker;if(!r)return;r.postMessage({cmd:"processThreadQueue"})}return 1}function Je(){Se()}function Qe(e,t,n){var r=ot(t,n);return De[e].apply(null,r)}function et(e,t){}function tt(e,n,r){if(e<=0||e>t().length||!0&e)return-28;if(g){if(Atomics.load(s(),e>>2)!=n)return-6;var a=performance.now(),i=a+r;for(Atomics.exchange(s(),vn>>2,e);;){if((a=performance.now())>i)return Atomics.exchange(s(),vn>>2,0),-73;if(0==Atomics.exchange(s(),vn>>2,0))break;if(sn(),Atomics.load(s(),e>>2)!=n)return-6;Atomics.exchange(s(),vn>>2,e)}return 0}var o=Atomics.wait(s(),e>>2,n,r);if("timed-out"===o)return-73;if("not-equal"===o)return-6;if("ok"===o)return 0;throw"Atomics.wait returned an unexpected value "+o}function nt(e,t,n){r().copyWithin(e,t,t+n)}function rt(){return b?B().cpus().length:navigator.hardwareConcurrency}function at(e,t){for(var n=arguments.length-2,r=fn(),a=n,s=gn(8*a),i=s>>3,u=0;u<n;u++){var l=arguments[2+u];o()[i+u]=l}var c=hn(e,a,s,t);return mn(r),c}h.establishStackSpace=Ge,h.getNoExitRuntime=He,h.invokeEntryPoint=je,Ve=b?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:v?function(){return performance.now()-h.__performance_now_clock_drift}:"undefined"!=typeof dateNow?dateNow:function(){return performance.now()};var st=[],it=[];function ot(e,t){var n;for(it.length=0,t>>=2;n=r()[e++];){var a=n<105;a&&1&t&&t++,it.push(a?o()[t++>>1]:s()[t]),++t}return it}function ut(e,t,n){st.length=t;for(var r=n>>3,a=0;a<t;a++)st[a]=o()[r+a];return(e<0?De[-e-1]:Yt[e]).apply(null,st)}function lt(){return r().length}function ct(e){try{return R.grow(e-W.byteLength+65535>>>16),se(R.buffer),1}catch(e){}}function ht(e){var t=lt();if(e<=t)return!1;var n=2147483648;if(e>n)return!1;for(var r=1;r<=4;r*=2){var a=t*(1+.2/r);if(a=Math.min(a,e+100663296),ct(Math.min(n,ae(Math.max(e,a),65536))))return!0}return!1}var dt={inEventHandler:0,removeAllEventListeners:function(){for(var e=dt.eventHandlers.length-1;e>=0;--e)dt._removeHandler(e);dt.eventHandlers=[],dt.deferredCalls=[]},registerRemoveEventListeners:function(){dt.removeEventListenersRegistered||(he.push(dt.removeAllEventListeners),dt.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(e,t,n){function r(e,t){if(e.length!=t.length)return!1;for(var n in e)if(e[n]!=t[n])return!1;return!0}for(var a in dt.deferredCalls){var s=dt.deferredCalls[a];if(s.targetFunction==e&&r(s.argsList,n))return}dt.deferredCalls.push({targetFunction:e,precedence:t,argsList:n}),dt.deferredCalls.sort((function(e,t){return e.precedence<t.precedence}))},removeDeferredCalls:function(e){for(var t=0;t<dt.deferredCalls.length;++t)dt.deferredCalls[t].targetFunction==e&&(dt.deferredCalls.splice(t,1),--t)},canPerformEventHandlerRequests:function(){return dt.inEventHandler&&dt.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(dt.canPerformEventHandlerRequests())for(var e=0;e<dt.deferredCalls.length;++e){var t=dt.deferredCalls[e];dt.deferredCalls.splice(e,1),--e,t.targetFunction.apply(null,t.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(e,t){for(var n=0;n<dt.eventHandlers.length;++n)dt.eventHandlers[n].target!=e||t&&t!=dt.eventHandlers[n].eventTypeString||dt._removeHandler(n--)},_removeHandler:function(e){var t=dt.eventHandlers[e];t.target.removeEventListener(t.eventTypeString,t.eventListenerFunc,t.useCapture),dt.eventHandlers.splice(e,1)},registerOrRemoveHandler:function(e){var t=function(t){++dt.inEventHandler,dt.currentEventHandler=e,dt.runDeferredCalls(),e.handlerFunc(t),dt.runDeferredCalls(),--dt.inEventHandler};if(e.callbackfunc)e.eventListenerFunc=t,e.target.addEventListener(e.eventTypeString,t,e.useCapture),dt.eventHandlers.push(e),dt.registerRemoveEventListeners();else for(var n=0;n<dt.eventHandlers.length;++n)dt.eventHandlers[n].target==e.target&&dt.eventHandlers[n].eventTypeString==e.eventTypeString&&dt._removeHandler(n--)},queueEventHandlerOnThread_iiii:function(e,t,n,r,a){var i=fn(),o=gn(12);s()[o>>2]=n,s()[o+4>>2]=r,s()[o+8>>2]=a,dn(0,e,637534208,t,r,o),mn(i)},getTargetThreadForEventCallback:function(e){switch(e){case 1:return 0;case 2:return Ue.currentProxiedOperationCallerThread;default:return e}},getNodeNameForTarget:function(e){return e?e==window?"#window":e==screen?"#screen":e&&e.nodeName?e.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function pt(e){var t=ne(e)+1,n=Qt(t);return te(e,n,t),n}function ft(e,t,n,r){var a=fn(),i=gn(12),o=0;t&&(o=pt(t)),s()[i>>2]=o,s()[i+4>>2]=n,s()[i+8>>2]=r,dn(0,e,657457152,0,o,i),mn(a)}function mt(e,t,n,r){ft(e,t=t?Q(t):"",n,r)}function gt(e){return e>2?Q(e):e}var yt=[0,"undefined"!=typeof document?document:0,"undefined"!=typeof window?window:0];function bt(e){return e=gt(e),yt[e]||("undefined"!=typeof document?document.querySelector(e):void 0)}function xt(e){return bt(e)}function vt(e,t,n){var r=xt(e);if(!r)return-4;if(r.canvasSharedPtr&&(s()[r.canvasSharedPtr>>2]=t,s()[r.canvasSharedPtr+4>>2]=n),!r.offscreenCanvas&&r.controlTransferredOffscreen)return r.canvasSharedPtr?(mt(s()[r.canvasSharedPtr+8>>2],e,t,n),1):-4;r.offscreenCanvas&&(r=r.offscreenCanvas);var a=!1;if(r.GLctxObject&&r.GLctxObject.GLctx){var i=r.GLctxObject.GLctx.getParameter(2978);a=0===i[0]&&0===i[1]&&i[2]===r.width&&i[3]===r.height}return r.width=t,r.height=n,a&&r.GLctxObject.GLctx.viewport(0,0,t,n),0}function wt(e,t,n){return v?at(2,1,e,t,n):vt(e,t,n)}function kt(e,t,n){return xt(e)?vt(e,t,n):wt(e,t,n)}function It(e){}function St(e,t){}function Nt(e){var t=e.getExtension("ANGLE_instanced_arrays");if(t)return e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,r,a){t.drawArraysInstancedANGLE(e,n,r,a)},e.drawElementsInstanced=function(e,n,r,a,s){t.drawElementsInstancedANGLE(e,n,r,a,s)},1}function Tt(e){var t=e.getExtension("OES_vertex_array_object");if(t)return e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)},1}function Et(e){var t=e.getExtension("WEBGL_draw_buffers");if(t)return e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)},1}function Ct(e){return!!(e.multiDrawWebgl=e.getExtension("WEBGL_multi_draw"))}var _t={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,recordError:function(e){_t.lastError||(_t.lastError=e)},getNewId:function(e){for(var t=_t.counter++,n=e.length;n<t;n++)e[n]=null;return t},getSource:function(e,t,n,r){for(var a="",i=0;i<t;++i){var o=r?s()[r+4*i>>2]:-1;a+=Q(s()[n+4*i>>2],o<0?void 0:o)}return a},createContext:function(e,t){var n=e.getContext("webgl",t);return n?_t.registerContext(n,t):0},registerContext:function(e,t){var n=Qt(8);s()[n+4>>2]=rn();var r={handle:n,attributes:t,version:t.majorVersion,GLctx:e};return e.canvas&&(e.canvas.GLctxObject=r),_t.contexts[n]=r,(void 0===t.enableExtensionsByDefault||t.enableExtensionsByDefault)&&_t.initExtensions(r),n},makeContextCurrent:function(e){return _t.currentContext=_t.contexts[e],h.ctx=Rt=_t.currentContext&&_t.currentContext.GLctx,!(e&&!Rt)},getContext:function(e){return _t.contexts[e]},deleteContext:function(e){_t.currentContext===_t.contexts[e]&&(_t.currentContext=null),"object"==typeof dt&&dt.removeAllHandlersOnTarget(_t.contexts[e].GLctx.canvas),_t.contexts[e]&&_t.contexts[e].GLctx.canvas&&(_t.contexts[e].GLctx.canvas.GLctxObject=void 0),en(_t.contexts[e].handle),_t.contexts[e]=null},initExtensions:function(e){if(e||(e=_t.currentContext),!e.initExtensionsDone){e.initExtensionsDone=!0;var t=e.GLctx;Nt(t),Tt(t),Et(t),t.disjointTimerQueryExt=t.getExtension("EXT_disjoint_timer_query"),Ct(t),(t.getSupportedExtensions()||[]).forEach((function(e){e.indexOf("lose_context")<0&&e.indexOf("debug")<0&&t.getExtension(e)}))}},populateUniformTable:function(e){for(var t=_t.programs[e],n=_t.programInfos[e]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1},r=n.uniforms,a=Rt.getProgramParameter(t,35718),s=0;s<a;++s){var i=Rt.getActiveUniform(t,s),o=i.name;n.maxUniformLength=Math.max(n.maxUniformLength,o.length+1),"]"==o.slice(-1)&&(o=o.slice(0,o.lastIndexOf("[")));var u=Rt.getUniformLocation(t,o);if(u){var l=_t.getNewId(_t.uniforms);r[o]=[i.size,l],_t.uniforms[l]=u;for(var c=1;c<i.size;++c){var h=o+"["+c+"]";u=Rt.getUniformLocation(t,h),l=_t.getNewId(_t.uniforms),_t.uniforms[l]=u}}}}},$t=["default","low-power","high-performance"];function At(e,t){var n=t>>2,r=s()[n+6],a={alpha:!!s()[n+0],depth:!!s()[n+1],stencil:!!s()[n+2],antialias:!!s()[n+3],premultipliedAlpha:!!s()[n+4],preserveDrawingBuffer:!!s()[n+5],powerPreference:$t[r],failIfMajorPerformanceCaveat:!!s()[n+7],majorVersion:s()[n+8],minorVersion:s()[n+9],enableExtensionsByDefault:s()[n+10],explicitSwapControl:s()[n+11],proxyContextToMainThread:s()[n+12],renderViaOffscreenBackBuffer:s()[n+13]},i=xt(e);return i?a.explicitSwapControl?0:_t.createContext(i,a):0}function Ft(e,t){return At(e,t)}var Rt,Dt={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=Dt.buffers[e];0===t||10===t?((1===e?$:A)(J(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return Dt.varargs+=4,s()[Dt.varargs-4>>2]},getStr:function(e){return Q(e)},get64:function(e,t){return e}};function Mt(e){return v?at(3,1,e):0}function Ot(e,t,n,r,a){if(v)return at(4,1,e,t,n,r,a)}function Lt(e,t,n,a){if(v)return at(5,1,e,t,n,a);for(var i=0,o=0;o<n;o++){for(var u=s()[t+8*o>>2],l=s()[t+(8*o+4)>>2],c=0;c<l;c++)Dt.printChar(e,r()[u+c]);i+=l}return s()[a>>2]=i,0}function zt(e){var t=Ue.threadExitHandlers.pop();e&&t()}function Pt(e,t){Ue.threadExitHandlers.push((function(){ie.get(e)(t)}))}function Bt(e){if(v)throw"Internal Error! spawnThread() can only ever be called from main application thread!";var t=Ue.getNewWorker();if(void 0!==t.pthread)throw"Internal error!";if(!e.pthread_ptr)throw"Internal error, no pthread ptr!";Ue.runningWorkers.push(t);for(var n=Qt(512),r=0;r<128;++r)s()[n+4*r>>2]=0;var a=e.stackBase+e.stackSize,o=Ue.pthreads[e.pthread_ptr]={worker:t,stackBase:e.stackBase,stackSize:e.stackSize,allocatedOwnStack:e.allocatedOwnStack,threadInfoStruct:e.pthread_ptr},u=o.threadInfoStruct>>2;Atomics.store(i(),u+16,e.detached),Atomics.store(i(),u+25,n),Atomics.store(i(),u+10,o.threadInfoStruct),Atomics.store(i(),u+20,e.stackSize),Atomics.store(i(),u+19,a),Atomics.store(i(),u+26,e.stackSize),Atomics.store(i(),u+28,a),Atomics.store(i(),u+29,e.detached);var l=nn()+40;Atomics.store(i(),u+43,l),t.pthread=o;var c={cmd:"run",start_routine:e.startRoutine,arg:e.arg,threadInfoStruct:e.pthread_ptr,stackBase:e.stackBase,stackSize:e.stackSize};t.runPthread=function(){c.time=performance.now(),t.postMessage(c,e.transferList)},t.loaded&&(t.runPthread(),delete t.runPthread)}function Wt(e,t,n,r){if("undefined"==typeof SharedArrayBuffer)return A("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;if(!e)return A("pthread_create called with a null thread pointer!"),28;var a=[];if(v&&0===a.length)return cn(687865856,e,t,n,r);var o=0,u=0,l=0;t&&-1!=t?(o=s()[t>>2],o+=81920,u=s()[t+8>>2],l=0!==s()[t+12>>2]):o=2097152;var c=0==u;c?u=bn(16,o):K((u-=o)>0);for(var h=Qt(228),d=0;d<57;++d)i()[(h>>2)+d]=0;s()[e>>2]=h,s()[h+12>>2]=h;var p=h+152;s()[p>>2]=p;var f={stackBase:u,stackSize:o,allocatedOwnStack:c,detached:l,startRoutine:n,pthread_ptr:h,arg:r,transferList:a};return v?(f.cmd="spawnThread",postMessage(f,a)):Bt(f),0}function Vt(){if(v){var e=rn();if(e&&!Atomics.load(i(),e+56>>2)&&2==Atomics.load(i(),e+0>>2))throw"Canceled!"}}function Ut(){b||y||F("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function Gt(e,t,n){if(!e)return A("pthread_join attempted on a null thread pointer!"),Le.ESRCH;if(v&&rn()==e)return A("PThread "+e+" is attempting to join to itself!"),Le.EDEADLK;if(!v&&un()==e)return A("Main thread "+e+" is attempting to join to itself!"),Le.EDEADLK;if(s()[e+12>>2]!==e)return A("pthread_join attempted on thread "+e+", which does not point to a valid thread, or does not exist anymore!"),Le.ESRCH;if(Atomics.load(i(),e+64>>2))return A("Attempted to join thread "+e+", which was already detached!"),Le.EINVAL;for(n&&Ut();;){var r=Atomics.load(i(),e+0>>2);if(1==r){var a=Atomics.load(i(),e+4>>2);return t&&(s()[t>>2]=a),Atomics.store(i(),e+64>>2,1),v?postMessage({cmd:"cleanupThread",thread:e}):We(e),0}if(!n)return Le.EBUSY;Vt(),v||sn(),tt(e+0,r,v?100:1)}}function Ht(e,t){return Gt(e,t,!0)}function jt(e){if(v)return at(6,1,e);switch(e){case 30:case 75:return 16384;case 85:return 131072;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"==typeof navigator&&navigator.hardwareConcurrency||1}return Xe(28),-1}v||Ue.initMainThreadBlock();var qt,Kt,Xt,Yt=[null,Ye,wt,Mt,Ot,Lt,jt],Zt={e:qe,r:Ke,x:Ze,b:Je,y:Qe,j:et,d:tt,c:ze,f:Ve,p:nt,A:rt,u:ut,q:ht,v:kt,i:It,s:St,w:Ft,l:Mt,n:Ot,g:Lt,o:Me,a:R||h.wasmMemory,z:zt,k:Pt,h:Wt,m:Ht,t:jt},Jt=(Re(),h.___wasm_call_ctors=function(){return(Jt=h.___wasm_call_ctors=h.asm.B).apply(null,arguments)}),Qt=(h._init=function(){return(h._init=h.asm.C).apply(null,arguments)},h._init_with_threads_count=function(){return(h._init_with_threads_count=h.asm.D).apply(null,arguments)},h._get_threads_count=function(){return(h._get_threads_count=h.asm.E).apply(null,arguments)},h._register_tensor=function(){return(h._register_tensor=h.asm.F).apply(null,arguments)},h._dispose_data=function(){return(h._dispose_data=h.asm.G).apply(null,arguments)},h._dispose=function(){return(h._dispose=h.asm.H).apply(null,arguments)},h._Abs=function(){return(h._Abs=h.asm.J).apply(null,arguments)},h._Add=function(){return(h._Add=h.asm.K).apply(null,arguments)},h._AddN=function(){return(h._AddN=h.asm.L).apply(null,arguments)},h._All=function(){return(h._All=h.asm.M).apply(null,arguments)},h._Any=function(){return(h._Any=h.asm.N).apply(null,arguments)},h._ArgMax=function(){return(h._ArgMax=h.asm.O).apply(null,arguments)},h._AvgPool=function(){return(h._AvgPool=h.asm.P).apply(null,arguments)},h._BatchMatMul=function(){return(h._BatchMatMul=h.asm.Q).apply(null,arguments)},h._Ceil=function(){return(h._Ceil=h.asm.R).apply(null,arguments)},h._ClipByValue=function(){return(h._ClipByValue=h.asm.S).apply(null,arguments)},h._Conv2D=function(){return(h._Conv2D=h.asm.T).apply(null,arguments)},h._Conv2DBackpropInput=function(){return(h._Conv2DBackpropInput=h.asm.U).apply(null,arguments)},h._Cos=function(){return(h._Cos=h.asm.V).apply(null,arguments)},h._Cosh=function(){return(h._Cosh=h.asm.W).apply(null,arguments)},h._CropAndResize=function(){return(h._CropAndResize=h.asm.X).apply(null,arguments)},h._Cumsum=function(){return(h._Cumsum=h.asm.Y).apply(null,arguments)},h._DepthToSpace=function(){return(h._DepthToSpace=h.asm.Z).apply(null,arguments)},h._DepthwiseConv2dNative=function(){return(h._DepthwiseConv2dNative=h.asm._).apply(null,arguments)},h._Elu=function(){return(h._Elu=h.asm.$).apply(null,arguments)},h._Equal=function(){return(h._Equal=h.asm.aa).apply(null,arguments)},h._Exp=function(){return(h._Exp=h.asm.ba).apply(null,arguments)},h._FlipLeftRight=function(){return(h._FlipLeftRight=h.asm.ca).apply(null,arguments)},h._Floor=function(){return(h._Floor=h.asm.da).apply(null,arguments)},h._FloorDiv=function(){return(h._FloorDiv=h.asm.ea).apply(null,arguments)},h._FusedBatchNorm=function(){return(h._FusedBatchNorm=h.asm.fa).apply(null,arguments)},h._FusedConv2D=function(){return(h._FusedConv2D=h.asm.ga).apply(null,arguments)},h._FusedDepthwiseConv2D=function(){return(h._FusedDepthwiseConv2D=h.asm.ha).apply(null,arguments)},h._Gather=function(){return(h._Gather=h.asm.ia).apply(null,arguments)},h._GatherNd=function(){return(h._GatherNd=h.asm.ja).apply(null,arguments)},h._Greater=function(){return(h._Greater=h.asm.ka).apply(null,arguments)},h._GreaterEqual=function(){return(h._GreaterEqual=h.asm.la).apply(null,arguments)},h._LeakyRelu=function(){return(h._LeakyRelu=h.asm.ma).apply(null,arguments)},h._Less=function(){return(h._Less=h.asm.na).apply(null,arguments)},h._LessEqual=function(){return(h._LessEqual=h.asm.oa).apply(null,arguments)},h._Log=function(){return(h._Log=h.asm.pa).apply(null,arguments)},h._LogicalAnd=function(){return(h._LogicalAnd=h.asm.qa).apply(null,arguments)},h._Max=function(){return(h._Max=h.asm.ra).apply(null,arguments)},h._MaxPool=function(){return(h._MaxPool=h.asm.sa).apply(null,arguments)},h._Maximum=function(){return(h._Maximum=h.asm.ta).apply(null,arguments)},h._Mean=function(){return(h._Mean=h.asm.ua).apply(null,arguments)},h._Min=function(){return(h._Min=h.asm.va).apply(null,arguments)},h._Minimum=function(){return(h._Minimum=h.asm.wa).apply(null,arguments)},h._MirrorPad=function(){return(h._MirrorPad=h.asm.xa).apply(null,arguments)},h._Multiply=function(){return(h._Multiply=h.asm.ya).apply(null,arguments)},h._Neg=function(){return(h._Neg=h.asm.za).apply(null,arguments)},h._NonMaxSuppressionV3=function(){return(h._NonMaxSuppressionV3=h.asm.Aa).apply(null,arguments)},h._NonMaxSuppressionV4=function(){return(h._NonMaxSuppressionV4=h.asm.Ba).apply(null,arguments)},h._NonMaxSuppressionV5=function(){return(h._NonMaxSuppressionV5=h.asm.Ca).apply(null,arguments)},h._NotEqual=function(){return(h._NotEqual=h.asm.Da).apply(null,arguments)},h._OneHot=function(){return(h._OneHot=h.asm.Ea).apply(null,arguments)},h._PadV2=function(){return(h._PadV2=h.asm.Fa).apply(null,arguments)},h._Pow=function(){return(h._Pow=h.asm.Ga).apply(null,arguments)},h._Prelu=function(){return(h._Prelu=h.asm.Ha).apply(null,arguments)},h._Prod=function(){return(h._Prod=h.asm.Ia).apply(null,arguments)},h._RealDiv=function(){return(h._RealDiv=h.asm.Ja).apply(null,arguments)},h._Relu=function(){return(h._Relu=h.asm.Ka).apply(null,arguments)},h._Relu6=function(){return(h._Relu6=h.asm.La).apply(null,arguments)},h._ResizeBilinear=function(){return(h._ResizeBilinear=h.asm.Ma).apply(null,arguments)},h._Reverse=function(){return(h._Reverse=h.asm.Na).apply(null,arguments)},h._RotateWithOffset=function(){return(h._RotateWithOffset=h.asm.Oa).apply(null,arguments)},h._Round=function(){return(h._Round=h.asm.Pa).apply(null,arguments)},h._Rsqrt=function(){return(h._Rsqrt=h.asm.Qa).apply(null,arguments)},h._ScatterNd=function(){return(h._ScatterNd=h.asm.Ra).apply(null,arguments)},h._SelectV2=function(){return(h._SelectV2=h.asm.Sa).apply(null,arguments)},h._Sigmoid=function(){return(h._Sigmoid=h.asm.Ta).apply(null,arguments)},h._Sin=function(){return(h._Sin=h.asm.Ua).apply(null,arguments)},h._Softmax=function(){return(h._Softmax=h.asm.Va).apply(null,arguments)},h._SparseFillEmptyRows=function(){return(h._SparseFillEmptyRows=h.asm.Wa).apply(null,arguments)},h._SparseReshape=function(){return(h._SparseReshape=h.asm.Xa).apply(null,arguments)},h._SparseSegmentReduction=function(){return(h._SparseSegmentReduction=h.asm.Ya).apply(null,arguments)},h._Sqrt=function(){return(h._Sqrt=h.asm.Za).apply(null,arguments)},h._Square=function(){return(h._Square=h.asm._a).apply(null,arguments)},h._SquaredDifference=function(){return(h._SquaredDifference=h.asm.$a).apply(null,arguments)},h._Step=function(){return(h._Step=h.asm.ab).apply(null,arguments)},h._StridedSlice=function(){return(h._StridedSlice=h.asm.bb).apply(null,arguments)},h._Sub=function(){return(h._Sub=h.asm.cb).apply(null,arguments)},h._Sum=function(){return(h._Sum=h.asm.db).apply(null,arguments)},h._Tan=function(){return(h._Tan=h.asm.eb).apply(null,arguments)},h._Tanh=function(){return(h._Tanh=h.asm.fb).apply(null,arguments)},h._Tile=function(){return(h._Tile=h.asm.gb).apply(null,arguments)},h._TopK=function(){return(h._TopK=h.asm.hb).apply(null,arguments)},h._Transform=function(){return(h._Transform=h.asm.ib).apply(null,arguments)},h._Transpose=function(){return(h._Transpose=h.asm.jb).apply(null,arguments)},h.__FusedMatMul=function(){return(h.__FusedMatMul=h.asm.kb).apply(null,arguments)},h._malloc=function(){return(Qt=h._malloc=h.asm.lb).apply(null,arguments)}),en=h._free=function(){return(en=h._free=h.asm.mb).apply(null,arguments)},tn=h.___errno_location=function(){return(tn=h.___errno_location=h.asm.nb).apply(null,arguments)},nn=h._emscripten_get_global_libc=function(){return(nn=h._emscripten_get_global_libc=h.asm.ob).apply(null,arguments)},rn=h._pthread_self=function(){return(rn=h._pthread_self=h.asm.pb).apply(null,arguments)},an=h.___pthread_tsd_run_dtors=function(){return(an=h.___pthread_tsd_run_dtors=h.asm.qb).apply(null,arguments)},sn=h._emscripten_main_thread_process_queued_calls=function(){return(sn=h._emscripten_main_thread_process_queued_calls=h.asm.rb).apply(null,arguments)},on=(h._emscripten_current_thread_process_queued_calls=function(){return(h._emscripten_current_thread_process_queued_calls=h.asm.sb).apply(null,arguments)},h._emscripten_register_main_browser_thread_id=function(){return(on=h._emscripten_register_main_browser_thread_id=h.asm.tb).apply(null,arguments)}),un=h._emscripten_main_browser_thread_id=function(){return(un=h._emscripten_main_browser_thread_id=h.asm.ub).apply(null,arguments)},ln=h.__emscripten_do_dispatch_to_thread=function(){return(ln=h.__emscripten_do_dispatch_to_thread=h.asm.vb).apply(null,arguments)},cn=h._emscripten_sync_run_in_main_thread_4=function(){return(cn=h._emscripten_sync_run_in_main_thread_4=h.asm.wb).apply(null,arguments)},hn=h._emscripten_run_in_main_runtime_thread_js=function(){return(hn=h._emscripten_run_in_main_runtime_thread_js=h.asm.xb).apply(null,arguments)},dn=h.__emscripten_call_on_thread=function(){return(dn=h.__emscripten_call_on_thread=h.asm.yb).apply(null,arguments)},pn=(h._emscripten_tls_init=function(){return(h._emscripten_tls_init=h.asm.zb).apply(null,arguments)},h.__emscripten_thread_init=function(){return(pn=h.__emscripten_thread_init=h.asm.Ab).apply(null,arguments)}),fn=h.stackSave=function(){return(fn=h.stackSave=h.asm.Bb).apply(null,arguments)},mn=h.stackRestore=function(){return(mn=h.stackRestore=h.asm.Cb).apply(null,arguments)},gn=h.stackAlloc=function(){return(gn=h.stackAlloc=h.asm.Db).apply(null,arguments)},yn=h._emscripten_stack_set_limits=function(){return(yn=h._emscripten_stack_set_limits=h.asm.Eb).apply(null,arguments)},bn=h._memalign=function(){return(bn=h._memalign=h.asm.Fb).apply(null,arguments)},xn=h.__emscripten_allow_main_runtime_queued_calls=10656,vn=h.__emscripten_main_thread_futex=12292;function wn(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function kn(e){if(e=e||f,!(xe>0)){if(v)return u(h),fe(),void postMessage({cmd:"loaded"});pe(),xe>0||(h.setStatus?(h.setStatus("Running..."),setTimeout((function(){setTimeout((function(){h.setStatus("")}),1),t()}),1)):t())}function t(){qt||(qt=!0,h.calledRun=!0,q||(fe(),me(),u(h),h.onRuntimeInitialized&&h.onRuntimeInitialized(),ge()))}}function In(e,t){if(!t||!M||0!==e){if(!t&&v)throw postMessage({cmd:"exitProcess",returnCode:e}),new wn(e);M||(Ue.terminateAllThreads(),h.onExit&&h.onExit(e),q=!0),m(e,new wn(e))}}if(h.cwrap=Z,h.PThread=Ue,h.PThread=Ue,h.wasmMemory=R,h.ExitStatus=wn,we=function e(){qt||kn(),qt||(we=e)},h.run=kn,h.preInit)for("function"==typeof h.preInit&&(h.preInit=[h.preInit]);h.preInit.length>0;)h.preInit.pop()();if(v&&(M=!1,Ue.initWorker()),kn(),c&&(Kt={uncaughtException:process.listeners("uncaughtException").filter((function(e){return!c.uncaughtException.indexOf(e)>-1})),unhandledRejection:process.listeners("unhandledRejection").filter((function(e){return!c.unhandledRejection.indexOf(e)>-1}))}),"undefined"!=typeof WasmBackendModule)Xt=WasmBackendModule;else{if(void 0===e)throw new Error("Could not find wasm module in post.js");Xt=e}if(Kt){var Sn=Xt._dispose;Xt._dispose=function(){Sn(),Kt.uncaughtException.forEach((function(e){process.removeListener("uncaughtException",e)})),Kt.unhandledRejection.forEach((function(e){process.removeListener("unhandledRejection",e)}))}}return e.ready});"object"==typeof t&&"object"==typeof r?r.exports=s:"function"==typeof define&&n.amdO?define([],(function(){return s})):"object"==typeof t&&(t.WasmBackendModuleThreadedSimd=s)}}),V=d({"node_modules/.pnpm/@tensorflow+tfjs-backend-wasm@3.13.0_@tensorflow+tfjs-core@3.13.0/node_modules/@tensorflow/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm.js"(t,r){var a,s=(a=(a="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||e,function(e){var t,n,r,s=void 0!==(e=e||{})?e:{};s.ready=new Promise((function(e,r){t=e,n=r})),"undefined"!=typeof process&&process.listeners&&(r={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var i,o={};for(i in s)s.hasOwnProperty(i)&&(o[i]=s[i]);var u=[],l=!1,c=!1,h=!1,d=!1;l="object"==typeof window,c="function"==typeof importScripts,h="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,d=!l&&!h&&!c;var p,f,m,g,y,b="";function x(e){return s.locateFile?s.locateFile(e,b):b+e}h?(b=c?L().dirname(b)+"/":"//",p=function(e,t){return g||(g=O()),y||(y=L()),e=y.normalize(e),g.readFileSync(e,t?null:"utf8")},m=function(e){var t=p(e,!0);return t.buffer||(t=new Uint8Array(t)),N(t.buffer),t},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),u=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof ze))throw e})),process.on("unhandledRejection",se),s.inspect=function(){return"[Emscripten Module object]"}):d?("undefined"!=typeof read&&(p=function(e){return read(e)}),m=function(e){var t;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(N("object"==typeof(t=read(e,"binary"))),t)},"undefined"!=typeof scriptArgs?u=scriptArgs:void 0!==arguments&&(u=arguments),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(l||c)&&(c?b=self.location.href:"undefined"!=typeof document&&document.currentScript&&(b=document.currentScript.src),a&&(b=a),b=0!==b.indexOf("blob:")?b.substr(0,b.lastIndexOf("/")+1):"",p=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},c&&(m=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),f=function(e,t,n){var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});var v,w,k=s.print||console.log.bind(console),I=s.printErr||console.warn.bind(console);for(i in o)o.hasOwnProperty(i)&&(s[i]=o[i]);o=null,s.arguments&&(u=s.arguments),s.thisProgram&&s.thisProgram,s.quit&&s.quit,s.wasmBinary&&(v=s.wasmBinary),s.noExitRuntime,"object"!=typeof WebAssembly&&se("no native wasm support detected");var S=!1;function N(e,t){e||se("Assertion failed: "+t)}function T(e){var t=s["_"+e];return N(t,"Cannot call unknown function "+e+", make sure it is exported"),t}function E(e,t,n,r,a){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);P(e,t=Le(n),n)}return t},array:function(e){var t=Le(e.length);return B(e,t),t}},i=T(e),o=[],u=0;if(r)for(var l=0;l<r.length;l++){var c=s[n[l]];c?(0===u&&(u=Me()),o[l]=c(r[l])):o[l]=r[l]}var h,d=i.apply(null,o);return h=d,d="string"===t?M(h):"boolean"===t?Boolean(h):h,0!==u&&Oe(u),d}function C(e,t,n,r){var a=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&a&&!r?T(e):function(){return E(e,t,n,arguments)}}var _,$,A,F,R="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function D(e,t,n){for(var r=t+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.subarray&&R)return R.decode(e.subarray(t,a));for(var s="";t<a;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var u=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|u:(7&i)<<18|o<<12|u<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var l=i-65536;s+=String.fromCharCode(55296|l>>10,56320|1023&l)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function M(e,t){return e?D(A,e,t):""}function z(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i)),o<=127){if(n>=s)break;t[n++]=o}else if(o<=2047){if(n+1>=s)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=s)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-a}function P(e,t,n){return z(e,A,t,n)}function B(e,t){$.set(e,t)}function W(e,t){return e%t>0&&(e+=t-e%t),e}function V(e){_=e,s.HEAP8=$=new Int8Array(e),s.HEAP16=new Int16Array(e),s.HEAP32=F=new Int32Array(e),s.HEAPU8=A=new Uint8Array(e),s.HEAPU16=new Uint16Array(e),s.HEAPU32=new Uint32Array(e),s.HEAPF32=new Float32Array(e),s.HEAPF64=new Float64Array(e)}s.INITIAL_MEMORY;var U,G=[],H=[],j=[],q=[];function K(){if(s.preRun)for("function"==typeof s.preRun&&(s.preRun=[s.preRun]);s.preRun.length;)J(s.preRun.shift());me(G)}function X(){me(H)}function Y(){me(j)}function Z(){if(s.postRun)for("function"==typeof s.postRun&&(s.postRun=[s.postRun]);s.postRun.length;)Q(s.postRun.shift());me(q)}function J(e){G.unshift(e)}function Q(e){q.unshift(e)}H.push({func:function(){Re()}});var ee=0,te=null,ne=null;function re(e){ee++,s.monitorRunDependencies&&s.monitorRunDependencies(ee)}function ae(e){if(ee--,s.monitorRunDependencies&&s.monitorRunDependencies(ee),0==ee&&(null!==te&&(clearInterval(te),te=null),ne)){var t=ne;ne=null,t()}}function se(e){s.onAbort&&s.onAbort(e),I(e+=""),S=!0,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw n(t),t}function ie(e,t){return String.prototype.startsWith?e.startsWith(t):0===e.indexOf(t)}s.preloadedImages={},s.preloadedAudios={};var oe="data:application/octet-stream;base64,";function ue(e){return ie(e,oe)}var le="file://";function ce(e){return ie(e,le)}var he="tfjs-backend-wasm.wasm";function de(e){try{if(e==he&&v)return new Uint8Array(v);if(m)return m(e);throw"both async and sync fetching of the wasm failed"}catch(e){se(e)}}function pe(){if(!v&&(l||c)){if("function"==typeof fetch&&!ce(he))return fetch(he,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+he+"'";return e.arrayBuffer()})).catch((function(){return de(he)}));if(f)return new Promise((function(e,t){f(he,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return de(he)}))}function fe(){var e={a:Fe};function t(e,t){var n=e.exports;s.asm=n,V((w=s.asm.j).buffer),U=s.asm.r,ae()}function r(e){t(e.instance)}function a(t){return pe().then((function(t){return WebAssembly.instantiate(t,e)})).then(t,(function(e){I("failed to asynchronously prepare wasm: "+e),se(e)}))}if(re(),s.instantiateWasm)try{return s.instantiateWasm(e,t)}catch(e){return I("Module.instantiateWasm callback failed with error: "+e),!1}return(v||"function"!=typeof WebAssembly.instantiateStreaming||ue(he)||ce(he)||"function"!=typeof fetch?a(r):fetch(he,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(r,(function(e){return I("wasm streaming compile failed: "+e),I("falling back to ArrayBuffer instantiation"),a(r)}))}))).catch(n),{}}function me(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?U.get(n)():U.get(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(s)}}function ge(){se()}function ye(e,t,n){A.copyWithin(e,t,t+n)}function be(){return A.length}function xe(e){try{return w.grow(e-_.byteLength+65535>>>16),V(w.buffer),1}catch(e){}}function ve(e){var t=be(),n=2147483648;if(e>n)return!1;for(var r=1;r<=4;r*=2){var a=t*(1+.2/r);if(a=Math.min(a,e+100663296),xe(Math.min(n,W(Math.max(e,a),65536))))return!0}return!1}ue(he)||(he=x(he));var we={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=we.buffers[e];0===t||10===t?((1===e?k:I)(D(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return we.varargs+=4,F[we.varargs-4>>2]},getStr:function(e){return M(e)},get64:function(e,t){return e}};function ke(e){return 0}function Ie(e,t,n,r,a){}function Se(e,t,n,r){for(var a=0,s=0;s<n;s++){for(var i=F[t+8*s>>2],o=F[t+(8*s+4)>>2],u=0;u<o;u++)we.printChar(e,A[i+u]);a+=o}return F[r>>2]=a,0}function Ne(){return 6}function Te(){return 28}function Ee(e){return F[De()>>2]=e,e}function Ce(e){switch(e){case 30:case 75:return 16384;case 85:return 131072;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"==typeof navigator&&navigator.hardwareConcurrency||1}return Ee(28),-1}var _e,$e,Ae,Fe={a:ge,d:ye,e:ve,f:ke,c:Ie,b:Se,h:Ne,g:Te,i:Ce},Re=(fe(),s.___wasm_call_ctors=function(){return(Re=s.___wasm_call_ctors=s.asm.k).apply(null,arguments)}),De=(s._init=function(){return(s._init=s.asm.l).apply(null,arguments)},s._init_with_threads_count=function(){return(s._init_with_threads_count=s.asm.m).apply(null,arguments)},s._get_threads_count=function(){return(s._get_threads_count=s.asm.n).apply(null,arguments)},s._register_tensor=function(){return(s._register_tensor=s.asm.o).apply(null,arguments)},s._dispose_data=function(){return(s._dispose_data=s.asm.p).apply(null,arguments)},s._dispose=function(){return(s._dispose=s.asm.q).apply(null,arguments)},s._Abs=function(){return(s._Abs=s.asm.s).apply(null,arguments)},s._Add=function(){return(s._Add=s.asm.t).apply(null,arguments)},s._AddN=function(){return(s._AddN=s.asm.u).apply(null,arguments)},s._All=function(){return(s._All=s.asm.v).apply(null,arguments)},s._Any=function(){return(s._Any=s.asm.w).apply(null,arguments)},s._ArgMax=function(){return(s._ArgMax=s.asm.x).apply(null,arguments)},s._AvgPool=function(){return(s._AvgPool=s.asm.y).apply(null,arguments)},s._BatchMatMul=function(){return(s._BatchMatMul=s.asm.z).apply(null,arguments)},s._Ceil=function(){return(s._Ceil=s.asm.A).apply(null,arguments)},s._ClipByValue=function(){return(s._ClipByValue=s.asm.B).apply(null,arguments)},s._Conv2D=function(){return(s._Conv2D=s.asm.C).apply(null,arguments)},s._Conv2DBackpropInput=function(){return(s._Conv2DBackpropInput=s.asm.D).apply(null,arguments)},s._Cos=function(){return(s._Cos=s.asm.E).apply(null,arguments)},s._Cosh=function(){return(s._Cosh=s.asm.F).apply(null,arguments)},s._CropAndResize=function(){return(s._CropAndResize=s.asm.G).apply(null,arguments)},s._Cumsum=function(){return(s._Cumsum=s.asm.H).apply(null,arguments)},s._DepthToSpace=function(){return(s._DepthToSpace=s.asm.I).apply(null,arguments)},s._DepthwiseConv2dNative=function(){return(s._DepthwiseConv2dNative=s.asm.J).apply(null,arguments)},s._Elu=function(){return(s._Elu=s.asm.K).apply(null,arguments)},s._Equal=function(){return(s._Equal=s.asm.L).apply(null,arguments)},s._Exp=function(){return(s._Exp=s.asm.M).apply(null,arguments)},s._FlipLeftRight=function(){return(s._FlipLeftRight=s.asm.N).apply(null,arguments)},s._Floor=function(){return(s._Floor=s.asm.O).apply(null,arguments)},s._FloorDiv=function(){return(s._FloorDiv=s.asm.P).apply(null,arguments)},s._FusedBatchNorm=function(){return(s._FusedBatchNorm=s.asm.Q).apply(null,arguments)},s._FusedConv2D=function(){return(s._FusedConv2D=s.asm.R).apply(null,arguments)},s._FusedDepthwiseConv2D=function(){return(s._FusedDepthwiseConv2D=s.asm.S).apply(null,arguments)},s._Gather=function(){return(s._Gather=s.asm.T).apply(null,arguments)},s._GatherNd=function(){return(s._GatherNd=s.asm.U).apply(null,arguments)},s._Greater=function(){return(s._Greater=s.asm.V).apply(null,arguments)},s._GreaterEqual=function(){return(s._GreaterEqual=s.asm.W).apply(null,arguments)},s._LeakyRelu=function(){return(s._LeakyRelu=s.asm.X).apply(null,arguments)},s._Less=function(){return(s._Less=s.asm.Y).apply(null,arguments)},s._LessEqual=function(){return(s._LessEqual=s.asm.Z).apply(null,arguments)},s._Log=function(){return(s._Log=s.asm._).apply(null,arguments)},s._LogicalAnd=function(){return(s._LogicalAnd=s.asm.$).apply(null,arguments)},s._Max=function(){return(s._Max=s.asm.aa).apply(null,arguments)},s._MaxPool=function(){return(s._MaxPool=s.asm.ba).apply(null,arguments)},s._Maximum=function(){return(s._Maximum=s.asm.ca).apply(null,arguments)},s._Mean=function(){return(s._Mean=s.asm.da).apply(null,arguments)},s._Min=function(){return(s._Min=s.asm.ea).apply(null,arguments)},s._Minimum=function(){return(s._Minimum=s.asm.fa).apply(null,arguments)},s._MirrorPad=function(){return(s._MirrorPad=s.asm.ga).apply(null,arguments)},s._Multiply=function(){return(s._Multiply=s.asm.ha).apply(null,arguments)},s._Neg=function(){return(s._Neg=s.asm.ia).apply(null,arguments)},s._NonMaxSuppressionV3=function(){return(s._NonMaxSuppressionV3=s.asm.ja).apply(null,arguments)},s._NonMaxSuppressionV4=function(){return(s._NonMaxSuppressionV4=s.asm.ka).apply(null,arguments)},s._NonMaxSuppressionV5=function(){return(s._NonMaxSuppressionV5=s.asm.la).apply(null,arguments)},s._NotEqual=function(){return(s._NotEqual=s.asm.ma).apply(null,arguments)},s._OneHot=function(){return(s._OneHot=s.asm.na).apply(null,arguments)},s._PadV2=function(){return(s._PadV2=s.asm.oa).apply(null,arguments)},s._Pow=function(){return(s._Pow=s.asm.pa).apply(null,arguments)},s._Prelu=function(){return(s._Prelu=s.asm.qa).apply(null,arguments)},s._Prod=function(){return(s._Prod=s.asm.ra).apply(null,arguments)},s._RealDiv=function(){return(s._RealDiv=s.asm.sa).apply(null,arguments)},s._Relu=function(){return(s._Relu=s.asm.ta).apply(null,arguments)},s._Relu6=function(){return(s._Relu6=s.asm.ua).apply(null,arguments)},s._ResizeBilinear=function(){return(s._ResizeBilinear=s.asm.va).apply(null,arguments)},s._Reverse=function(){return(s._Reverse=s.asm.wa).apply(null,arguments)},s._RotateWithOffset=function(){return(s._RotateWithOffset=s.asm.xa).apply(null,arguments)},s._Round=function(){return(s._Round=s.asm.ya).apply(null,arguments)},s._Rsqrt=function(){return(s._Rsqrt=s.asm.za).apply(null,arguments)},s._ScatterNd=function(){return(s._ScatterNd=s.asm.Aa).apply(null,arguments)},s._SelectV2=function(){return(s._SelectV2=s.asm.Ba).apply(null,arguments)},s._Sigmoid=function(){return(s._Sigmoid=s.asm.Ca).apply(null,arguments)},s._Sin=function(){return(s._Sin=s.asm.Da).apply(null,arguments)},s._Softmax=function(){return(s._Softmax=s.asm.Ea).apply(null,arguments)},s._SparseFillEmptyRows=function(){return(s._SparseFillEmptyRows=s.asm.Fa).apply(null,arguments)},s._SparseReshape=function(){return(s._SparseReshape=s.asm.Ga).apply(null,arguments)},s._SparseSegmentReduction=function(){return(s._SparseSegmentReduction=s.asm.Ha).apply(null,arguments)},s._Sqrt=function(){return(s._Sqrt=s.asm.Ia).apply(null,arguments)},s._Square=function(){return(s._Square=s.asm.Ja).apply(null,arguments)},s._SquaredDifference=function(){return(s._SquaredDifference=s.asm.Ka).apply(null,arguments)},s._Step=function(){return(s._Step=s.asm.La).apply(null,arguments)},s._StridedSlice=function(){return(s._StridedSlice=s.asm.Ma).apply(null,arguments)},s._Sub=function(){return(s._Sub=s.asm.Na).apply(null,arguments)},s._Sum=function(){return(s._Sum=s.asm.Oa).apply(null,arguments)},s._Tan=function(){return(s._Tan=s.asm.Pa).apply(null,arguments)},s._Tanh=function(){return(s._Tanh=s.asm.Qa).apply(null,arguments)},s._Tile=function(){return(s._Tile=s.asm.Ra).apply(null,arguments)},s._TopK=function(){return(s._TopK=s.asm.Sa).apply(null,arguments)},s._Transform=function(){return(s._Transform=s.asm.Ta).apply(null,arguments)},s._Transpose=function(){return(s._Transpose=s.asm.Ua).apply(null,arguments)},s.__FusedMatMul=function(){return(s.__FusedMatMul=s.asm.Va).apply(null,arguments)},s._malloc=function(){return(s._malloc=s.asm.Wa).apply(null,arguments)},s._free=function(){return(s._free=s.asm.Xa).apply(null,arguments)},s.___errno_location=function(){return(De=s.___errno_location=s.asm.Ya).apply(null,arguments)}),Me=s.stackSave=function(){return(Me=s.stackSave=s.asm.Za).apply(null,arguments)},Oe=s.stackRestore=function(){return(Oe=s.stackRestore=s.asm._a).apply(null,arguments)},Le=s.stackAlloc=function(){return(Le=s.stackAlloc=s.asm.$a).apply(null,arguments)};function ze(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function Pe(e){function n(){_e||(_e=!0,s.calledRun=!0,S||(X(),Y(),t(s),s.onRuntimeInitialized&&s.onRuntimeInitialized(),Z()))}e=e||u,ee>0||(K(),ee>0||(s.setStatus?(s.setStatus("Running..."),setTimeout((function(){setTimeout((function(){s.setStatus("")}),1),n()}),1)):n()))}if(s.cwrap=C,ne=function e(){_e||Pe(),_e||(ne=e)},s.run=Pe,s.preInit)for("function"==typeof s.preInit&&(s.preInit=[s.preInit]);s.preInit.length>0;)s.preInit.pop()();if(Pe(),r&&($e={uncaughtException:process.listeners("uncaughtException").filter((function(e){return!r.uncaughtException.indexOf(e)>-1})),unhandledRejection:process.listeners("unhandledRejection").filter((function(e){return!r.unhandledRejection.indexOf(e)>-1}))}),void 0!==e)Ae=e;else{if("undefined"==typeof WasmBackendModuleThreadedSimd)throw new Error("Could not find wasm module in post.js");Ae=WasmBackendModuleThreadedSimd}if($e){var Be=Ae._dispose;Ae._dispose=function(){Be(),$e.uncaughtException.forEach((function(e){process.removeListener("uncaughtException",e)})),$e.unhandledRejection.forEach((function(e){process.removeListener("unhandledRejection",e)}))}}return e.ready});"object"==typeof t&&"object"==typeof r?r.exports=s:"function"==typeof define&&n.amdO?define([],(function(){return s})):"object"==typeof t&&(t.WasmBackendModule=s)}}),U=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},G=class{refCount(e){return H("refCount")}incRef(e){return H("incRef")}timerAvailable(){return!0}time(e){return H("time")}read(e){return H("read")}readSync(e){return H("readSync")}readToGPU(e,t){return H("readToGPU")}numDataIds(){return H("numDataIds")}disposeData(e,t){return H("disposeData")}write(e,t,n){return H("write")}move(e,t,n,r,a){return H("move")}memory(){return H("memory")}floatPrecision(){return H("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return H("dispose")}};function H(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function j(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,Y(e,t,n)}function q(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,Y(e,n,r),Y(t,n,r)}function K(e,t,n){return Math.max(e,Math.min(t,n))}function X(e){return e%2==0?e:e+1}function Y(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function Z(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function J(e,t){const n=Math.random();return t*n+(1-n)*e}function Q(e,t){let n=0;for(let r=0;r<e.length;r++){const a=Number(e[r])-Number(t[r]);n+=a*a}return n}function ee(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function te(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";ee(ie(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function ne(e){ee(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function re(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==t&&(t=[]),Array.isArray(e)||we(e)&&!n)for(let r=0;r<e.length;++r)re(e[r],t,n);else t.push(e);return t}function ae(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function se(e){return 0===e.length}function ie(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function oe(e){return e%1==0}function ue(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function le(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function ce(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return j(t),t}function he(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function de(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>0,n=arguments.length>2?arguments[2]:void 0;return new Promise(((r,a)=>{let s=0;const i=()=>{if(e())return void r();s++;const o=t(s);null!=n&&s>=n?a():setTimeout(i,o)};i()}))}function pe(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}function fe(e,t){const n=t.length;return ee((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),ee(e.every((e=>oe(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function me(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:fe(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[i]||s[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function ge(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function ye(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function be(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function xe(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function ve(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function we(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function ke(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function Ie(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function Se(e){return"string"==typeof e||e instanceof String}function Ne(e){return"boolean"==typeof e}function Te(e){return"number"==typeof e}function Ee(e){return Array.isArray(e)?Ee(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":Te(e)?"float32":Se(e)?"string":Ne(e)?"bool":"float32"}function Ce(e){return!!(e&&e.constructor&&e.call&&e.apply)}function _e(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function $e(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function Ae(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=new Array;if(1===t.length){const s=t[0]*(r?2:1);for(let t=0;t<s;t++)a[t]=n[e+t]}else{const s=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<s;t++)a[t]=Ae(e+t*o,i,n,r)}return a}function Fe(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return Ae(0,e,t,n)}function Re(e,t){const n=De(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function De(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function Me(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return Fe(e,new Float32Array(n));if("int32"===t)return Fe(e,new Int32Array(n));if("bool"===t)return Fe(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Oe(e){e.forEach((t=>{ee(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function Le(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function ze(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function Pe(e){return e&&e.then&&"function"==typeof e.then}var Be=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=We,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(Ue().getBool("IS_TEST")||Ue().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];Ue().getBool("IS_TEST")||Ue().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Pe(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}};function We(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(function(e){for(var n=arguments.length,r=new Array(n>1?n-1:0),a=1;a<n;a++)r[a-1]=arguments[a];return Ve(t,r[0],r[1]),r.join("=")})),t}function Ve(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function Ue(){return He}var Ge,He=null;function je(){if(null==Ge){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}Ge=e}return Ge}function qe(e,t){const n=function(){const e=je();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}var Ke="Abs",Xe="Acos",Ye="Acosh",Ze="Add",Je="AddN",Qe="All",et="Any",tt="ArgMax",nt="ArgMin",rt="Asin",at="Asinh",st="Atan",it="Atanh",ot="Atan2",ut="AvgPool",lt="AvgPoolGrad",ct="AvgPool3D",ht="AvgPool3DGrad",dt="BatchMatMul",pt="BatchToSpaceND",ft="Bincount",mt="BroadcastTo",gt="BroadcastArgs",yt="Cast",bt="Ceil",xt="ClipByValue",vt="Complex",wt="ComplexAbs",kt="Concat",It="Conv2D",St="Conv2DBackpropFilter",Nt="Conv2DBackpropInput",Tt="Conv3D",Et="Conv3DBackpropFilterV2",Ct="Conv3DBackpropInputV2",_t="Cos",$t="Cosh",At="Cumsum",Ft="CropAndResize",Rt="DenseBincount",Dt="DepthToSpace",Mt="DepthwiseConv2dNative",Ot="DepthwiseConv2dNativeBackpropFilter",Lt="DepthwiseConv2dNativeBackpropInput",zt="Diag",Pt="Dilation2D",Bt="Dilation2DBackpropInput",Wt="Dilation2DBackpropFilter",Vt="RealDiv",Ut="Einsum",Gt="Elu",Ht="EluGrad",jt="Erf",qt="Equal",Kt="Exp",Xt="ExpandDims",Yt="Expm1",Zt="FFT",Jt="Fill",Qt="FlipLeftRight",en="Floor",tn="FloorDiv",nn="FusedBatchNorm",rn="GatherV2",an="GatherNd",sn="Greater",on="GreaterEqual",un="Identity",ln="IFFT",cn="Imag",hn="IsFinite",dn="IsInf",pn="IsNan",fn="LeakyRelu",mn="Less",gn="LessEqual",yn="LinSpace",bn="Log",xn="Log1p",vn="LogicalAnd",wn="LogicalNot",kn="LogicalOr",In="LogSoftmax",Sn="LRN",Nn="LRNGrad",Tn="Max",En="Maximum",Cn="MaxPool",_n="MaxPoolGrad",$n="MaxPool3D",An="MaxPool3DGrad",Fn="MaxPoolWithArgmax",Rn="Mean",Dn="Min",Mn="Minimum",On="MirrorPad",Ln="Mod",zn="Multinomial",Pn="Multiply",Bn="Neg",Wn="NotEqual",Vn="NonMaxSuppressionV3",Un="NonMaxSuppressionV4",Gn="NonMaxSuppressionV5",Hn="OnesLike",jn="OneHot",qn="Pack",Kn="PadV2",Xn="Pool",Yn="Pow",Zn="Prelu",Jn="Prod",Qn="Range",er="Real",tr="Reciprocal",nr="Relu",rr="Reshape",ar="ResizeNearestNeighbor",sr="ResizeNearestNeighborGrad",ir="ResizeBilinear",or="ResizeBilinearGrad",ur="Relu6",lr="Reverse",cr="Round",hr="Rsqrt",dr="ScatterNd",pr="Select",fr="Selu",mr="Slice",gr="Sin",yr="Sinh",br="Sign",xr="Sigmoid",vr="Softplus",wr="Sqrt",kr="Sum",Ir="SpaceToBatchND",Sr="SplitV",Nr="Softmax",Tr="SparseFillEmptyRows",Er="SparseReshape",Cr="SparseSegmentMean",_r="SparseSegmentSum",$r="SparseToDense",Ar="SquaredDifference",Fr="Square",Rr="StridedSlice",Dr="StringNGrams",Mr="StringSplit",Or="StringToHashBucketFast",Lr="Sub",zr="Tan",Pr="Tanh",Br="Tile",Wr="TopK",Vr="Transform",Ur="Transpose",Gr="Unique",Hr="Unpack",jr="UnsortedSegmentSum",qr="ZerosLike",Kr="Step",Xr="FromPixels",Yr="RotateWithOffset",Zr="_FusedMatMul",Jr="FusedConv2D",Qr="FusedDepthwiseConv2D";function ea(){Ue().getBool("IS_TEST")||Ue().getBool("PROD")||console.warn(...arguments)}function ta(){Ue().getBool("IS_TEST")||Ue().getBool("PROD")||console.log(...arguments)}var na=qe("kernelRegistry",(()=>new Map)),ra=qe("gradRegistry",(()=>new Map));function aa(e,t){const n=da(e,t);return na.get(n)}function sa(e){return ra.get(e)}function ia(e){const t=na.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function oa(e){const{kernelName:t,backendName:n}=e,r=da(t,n);na.has(r)&&ea(`The kernel '${t}' for backend '${n}' is already registered`),na.set(r,e)}function ua(e){const{kernelName:t}=e;ra.has(t)&&Ue().getBool("DEBUG")&&ea(`Overriding the gradient for '${t}'`),ra.set(t,e)}function la(e,t){const n=da(e,t);if(!na.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);na.delete(n)}function ca(e){if(!ra.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);ra.delete(e)}function ha(e,t){ia(e).forEach((e=>{oa(Object.assign({},e,{backendName:t}))}))}function da(e,t){return`${t}_${e}`}var pa={};p(pa,{arraysEqual:()=>ie,assert:()=>ee,assertNonNegativeIntegerDimensions:()=>Oe,assertNonNull:()=>ne,assertShapesMatch:()=>te,bytesFromStringArray:()=>Ie,bytesPerElement:()=>ke,checkConversionForErrors:()=>be,clamp:()=>K,computeStrides:()=>$e,createScalarValue:()=>Aa,createShuffledIndices:()=>ce,decodeString:()=>Oa,distSquared:()=>Q,encodeString:()=>Ma,fetch:()=>Da,fingerPrint64:()=>$a,flatten:()=>re,getArrayFromDType:()=>ye,getTypedArrayFromDType:()=>ge,hasEncodingLoss:()=>ve,hexToLong:()=>ga,indexToLoc:()=>ze,inferDtype:()=>Ee,inferFromImplicitShape:()=>pe,isBoolean:()=>Ne,isFunction:()=>Ce,isInt:()=>oe,isNumber:()=>Te,isPromise:()=>Pe,isScalarShape:()=>se,isString:()=>Se,isTypedArray:()=>we,isValidDtype:()=>xe,locToIndex:()=>Le,makeOnesTypedArray:()=>Re,makeZerosNestedTypedArray:()=>Me,makeZerosTypedArray:()=>De,nearestDivisor:()=>_e,nearestLargerEven:()=>X,now:()=>Ra,parseAxisParam:()=>fe,randUniform:()=>J,repeatedTry:()=>de,rightPad:()=>he,shuffle:()=>j,shuffleCombo:()=>q,sizeFromShape:()=>ae,sizeToSquarishShape:()=>le,squeezeShape:()=>me,sum:()=>Z,swap:()=>Y,tanh:()=>ue,toNestedArray:()=>Fe,toTypedArray:()=>Fa});var fa=f(m()),ma=fa.default||fa;function ga(e){return ma.fromString(e,!0,16)}var ya=ga("c3a5c85c97cb3127"),ba=ga("b492b66fbe98f273"),xa=ga("9ae16a3b2f90404f");function va(e){return e.xor(e.shru(47))}function wa(e,t,n){const r=e.slice(t,t+n);return ma.fromBytes(Array.from(r),!0,!0)}function ka(e,t){return wa(e,t,8)}function Ia(e,t){return wa(e,t,4)}function Sa(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Na(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:ga("9ddfea08eb382d69"),r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function Ta(e,t,n,r){return function(e,t,n,r,a,s){a=a.add(e),s=Sa(s.add(a).add(r),21);const i=a;return a=(a=a.add(t)).add(n),s=s.add(Sa(a,44)),[a.add(r),s.add(i)]}(ka(e,t),ka(e,t+8),ka(e,t+16),ka(e,t+24),n,r)}function Ea(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;if(t>=8){const n=xa.add(2*t),r=ka(e,0).add(xa),a=ka(e,t-8);return Na(Sa(a,37).mul(n).add(r),Sa(r,25).add(a).mul(n),n)}if(t>=4){const n=xa.add(2*t);return Na(Ia(e,0).shl(3).add(t),Ia(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return va(xa.mul(n).xor(ya.mul(r))).mul(xa)}return xa}function Ca(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=xa.add(2*t),r=ka(e,0).mul(ba),a=ka(e,8),s=ka(e,t-8).mul(n),i=ka(e,t-16).mul(xa);return Na(Sa(r.add(a),43).add(Sa(s,30)).add(i),r.add(Sa(a.add(xa),18)).add(s),n)}function _a(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=xa.add(2*t),r=ka(e,0).mul(xa),a=ka(e,8),s=ka(e,t-8).mul(n),i=ka(e,t-16).mul(xa),o=Sa(r.add(a),43).add(Sa(s,30)).add(i),u=Na(o,r.add(Sa(a.add(xa),18)).add(s),n),l=ka(e,16).mul(n),c=ka(e,24),h=o.add(ka(e,t-32)).mul(n),d=u.add(ka(e,t-24)).mul(n);return Na(Sa(l.add(c),43).add(Sa(h,30)).add(d),l.add(Sa(c.add(r),18)).add(h),n)}function $a(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=ma.fromNumber(81,!0);if(t<=32)return t<=16?Ea(e,t):Ca(e,t);if(t<=64)return _a(e,t);let r=n,a=n.mul(ba).add(113),s=va(a.mul(xa).add(113)).mul(xa),i=[ma.UZERO,ma.UZERO],o=[ma.UZERO,ma.UZERO];r=r.mul(xa).add(ka(e,0));let u=0;const l=64*(t-1>>6),c=l+(t-1&63)-63;do{r=Sa(r.add(a).add(i[0]).add(ka(e,u+8)),37).mul(ba),a=Sa(a.add(i[1]).add(ka(e,u+48)),42).mul(ba),r=r.xor(o[1]),a=a.add(i[0]).add(ka(e,u+40)),s=Sa(s.add(o[0]),33).mul(ba),i=Ta(e,u,i[1].mul(ba),r.add(o[0])),o=Ta(e,u+32,s.add(o[1]),a.add(ka(e,u+16))),[s,r]=[r,s],u+=64}while(u!==l);const h=ba.add(s.and(255).shl(1));return u=c,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=Sa(r.add(a).add(i[0]).add(ka(e,u+8)),37).mul(h),a=Sa(a.add(i[1]).add(ka(e,u+48)),42).mul(h),r=r.xor(o[1].mul(9)),a=a.add(i[0].mul(9).add(ka(e,u+40))),s=Sa(s.add(o[0]),33).mul(h),i=Ta(e,u,i[1].mul(h),r.add(o[0])),o=Ta(e,u+32,s.add(o[1]),a.add(ka(e,u+16))),[s,r]=[r,s],Na(Na(i[0],o[0],h).add(va(a).mul(ya)).add(s),Na(i[1],o[1],h).add(r),h)}function Aa(e,t){return"string"===t?Ma(e):Fa([e],t)}function Fa(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=re(e)),Ue().getBool("DEBUG")&&be(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function Ra(){return Ue().platform.now()}function Da(e,t){return Ue().platform.fetch(e,t)}function Ma(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",Ue().platform.encode(e,t)}function Oa(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",Ue().platform.decode(e,t)}function La(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}function za(e,t,n,r){const a=$e(t),s=function(e,t,n,r){const a=ae(t),s=r[r.length-1],i=new Array(s).fill(0),o=t.length,u="complex64"===n?Va(e):e;if(o>1)for(let e=0;e<a/s;e++){const t=e*s;for(let e=0;e<s;e++)i[e]=Math.max(i[e],Pa(u[t+e],0,n).length)}return i}(e,t,n,a),i=t.length,o=Wa(e,t,n,a,s),u=["Tensor"];return r&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${i}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(o.map((e=>"    "+e)).join("\n")),u.join("\n")}function Pa(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:Se(e)?`'${e}'`:"bool"===n?Ba(e):parseFloat(e.toFixed(7)).toString(),he(r,t)}function Ba(e){return 0===e?"false":"true"}function Wa(e,t,n,r,a){let s=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];const i="complex64"===n?2:1,o=t[0],u=t.length;if(0===u)return"complex64"===n?[Pa(Va(e)[0],0,n)]:"bool"===n?[Ba(e[0])]:[e[0].toString()];if(1===u){if(o>20){const t=3*i;let r=Array.from(e.slice(0,t)),s=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(r=Va(r),s=Va(s)),["["+r.map(((e,t)=>Pa(e,a[t],n))).join(", ")+", ..., "+s.map(((e,t)=>Pa(e,a[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?Va(e):Array.from(e)).map(((e,t)=>Pa(e,a[t],n))).join(", ")+"]"]}const l=t.slice(1),c=r.slice(1),h=r[0]*i,d=[];if(o>20){for(let t=0;t<3;t++){const r=t*h,s=r+h;d.push(...Wa(e.slice(r,s),l,n,c,a,!1))}d.push("...");for(let t=o-3;t<o;t++){const r=t*h,s=r+h;d.push(...Wa(e.slice(r,s),l,n,c,a,t===o-1))}}else for(let t=0;t<o;t++){const r=t*h,s=r+h;d.push(...Wa(e.slice(r,s),l,n,c,a,t===o-1))}const p=2===u?",":"";d[0]="["+d[0]+p;for(let e=1;e<d.length-1;e++)d[e]=" "+d[e]+p;let f=",\n";for(let e=2;e<u;e++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(s?"":f),d}function Va(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var Ua=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=ae(e),null!=n){const e=n.length;ee(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||ye(t,this.size),this.strides=$e(e)}set(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];0===n.length&&(n=[0]),ee(n.length===this.rank,(()=>`The number of provided coordinates (${n.length}) must match the rank (${this.rank})`));const a=this.locToIndex(n);this.values[a]=e}get(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];0===t.length&&(t=[0]);let r=0;for(const e of t){if(e<0||e>=this.shape[r]){const e=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(e)}r++}let a=t[t.length-1];for(let e=0;e<t.length-1;++e)a+=this.strides[e]*t[e];return this.values[a]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Ga().makeTensor(this.values,this.shape,this.dtype)}},Ga=null,Ha=null,ja=class{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=ae(e),this.strides=$e(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Ha.buffer(this.shape,this.dtype,e)}bufferSync(){return Ha.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Fe(this.shape,e,"complex64"===this.dtype)}arraySync(){return Fe(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=Ga().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>Oa(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Ga().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=Ga().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>Oa(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Ga().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Ga().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return Ha.print(this,e)}clone(){return this.throwIfDisposed(),Ha.clone(this)}toString(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return za(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Ha.cast(this,e)}variable(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0;return this.throwIfDisposed(),Ga().makeVariable(this,e,t,n)}};function qa(){return qe("Tensor",(()=>ja))}Object.defineProperty(ja,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),qa();var Ka=class extends ja{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!ie(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Ga().disposeTensor(this),this.dataId=e.dataId,Ga().incRef(this,null)}dispose(){Ga().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Ka,Symbol.hasInstance,{value:e=>e instanceof ja&&null!=e.assign&&e.assign instanceof Function});var Xa,Ya,Za,Ja,Qa,es,ts,ns,rs,as,ss={};p(ss,{assertTypesMatch:()=>cs,getTensorsInContainer:()=>ds,isTensorInList:()=>hs,makeTypesMatch:()=>ls}),(Ya=Xa||(Xa={})).R0="R0",Ya.R1="R1",Ya.R2="R2",Ya.R3="R3",Ya.R4="R4",Ya.R5="R5",Ya.R6="R6",(Ja=Za||(Za={})).float32="float32",Ja.int32="int32",Ja.bool="int32",Ja.complex64="complex64",(es=Qa||(Qa={})).float32="float32",es.int32="int32",es.bool="bool",es.complex64="complex64",(ns=ts||(ts={})).float32="float32",ns.int32="float32",ns.bool="float32",ns.complex64="complex64",(as=rs||(rs={})).float32="complex64",as.int32="complex64",as.bool="complex64",as.complex64="complex64";var is={float32:ts,int32:Za,bool:Qa,complex64:rs};function os(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return is[e][t]}function us(e){return os(e,"int32")}function ls(e,t){if(e.dtype===t.dtype)return[e,t];const n=os(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function cs(e,t){ee(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function hs(e,t){return t.some((t=>t.id===e.id))}function ds(e){const t=[];return ps(e,t,new Set),t}function ps(e,t,n){if(null==e)return;if(e instanceof ja)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const a=e;for(const e in a){const r=a[e];n.has(r)||(n.add(r),ps(r,t,n))}}function fs(e){return null!=e.kernelName}var ms=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}},gs=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new ms}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return e in this.registryFactory?(ea(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new class{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new class{logKernelProfile(e,t,n,r,a,s){const i="number"==typeof r?he(`${r}ms`,9):r.error,o=he(e,25),u=t.rank,l=t.size,c=he(t.shape.toString(),14);let h="";for(const e in a){const n=a[e];if(null!=n){const r=n.shape||t.shape,a=r.length;h+=`${e}: ${a}D ${a>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${u}D ${c}\t%c${l}\t%c${h}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}})}profileKernel(e,t,n){let r;const a=()=>{r=n()};let s;const i=Ra();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(a);else{a();for(const e of r)e.dataSync();s=Promise.resolve({kernelMs:Ra()-i})}if(Ue().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{La(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:s.then((e=>e.kernelMs)),extraInfo:s.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),r,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}}(this.backendInstance),!0}setupRegisteredKernels(){ia(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){ia(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof G||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,ea(`Initialization of backend ${e} failed`),ea(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return ea(`Initialization of backend ${e} failed`),ea(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return gs.nextTensorId++}nextVariableId(){return gs.nextVariableId++}clone(e){const t=bs.runKernel(un,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return bs.runKernel(yt,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==aa(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-a-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),a=this.state.numBytes,s=this.state.numTensors;let i,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const u=fs(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(fs(e)){const{kernelName:t,inputs:a,attrs:s}=e;null==this.backendName&&this.backend;const u=aa(t,this.backendName);ee(null!=u,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();o=u.kernelFunc({inputs:a,attrs:s,backend:this.backend});const i=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const l=i.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)}));if(r){const e=this.getTensorsForGradient(t,a,l);n=this.saveTensorsForBackwardMode(e)}return l}}else{const{forwardFunc:t}=e,a=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,a)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,n),n}}const{inputs:l,attrs:c}=e,h=fs(e)?null:e.backwardsFunc;let d;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(u,l,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=i()})),r&&this.addTapeNode(u,l,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map((e=>null!=l[e]?l[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const r=sa(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let s;r.saveAllInputs?(ee(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(t).map((e=>t[e]))):s=e.map((e=>t[e]));const i=n.filter(((e,t)=>a[t]));return s.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&Se(e[0])&&(a=e.map((e=>Ma(e))));const s=r.write(a,t,n),i=new ja(t,n,s,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(s),t=Ie(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const a=new ja(t,n=n||"float32",e,this.nextTensorId());return this.trackTensor(a,r),a}makeVariable(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new Ka(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*ke(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Ka||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*ke(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},o=sa(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=De(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=ds(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(ee(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));ee(a instanceof ja,(()=>"The result y returned by f() must be a tensor."));const s=function(e,t,n){const r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const s=e[n],i=s.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach((e=>r[e.id]=!0)),o=!0,a[s.id]=!0;break}if(o)break}}const s={};s[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(const e in r)s[r[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(a[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const a=n.inputs[t];r[a.id]&&(e[t]=a)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[a.id]=null==n?function(e){const t=Re(ae(e),"float32");return bs.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){const s=t[a],i=[];if(s.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const o=s.gradient(i);for(const t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const a=n((()=>o[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const i=s.inputs[t];if(!ie(a.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=a;else{const t=e[i.id];e[i.id]=r(t,a),t.dispose()}}}}(e,s,(e=>this.tidy(e)),xs);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:r}}))}customGrad(e){var t=this;return ee(Ce(e),(()=>"The f passed in customGrad(f) must be a function.")),function(){for(var n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];let s;ee(r.every((e=>e instanceof ja)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const i={};r.forEach(((e,t)=>{i[t]=e}));const o=(t,n)=>(s=e(...r,n),ee(s.value instanceof ja,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),ee(Ce(s.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),s.value),u=(e,t)=>{const n=s.gradFunc(e,t),a=Array.isArray(n)?n:[n];ee(a.length===r.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),ee(a.every((e=>e instanceof ja)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return a.forEach(((e,t)=>{i[t]=()=>e})),i};return t.runKernelFunc({forwardFunc:o,backwardsFunc:u,inputs:i})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Ra(),n=await this.backend.time(e);return n.wallMs=Ra()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new ms;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};function ys(){const e=je();if(null==e._tfengine){const t=new Be(e);e._tfengine=new gs(t)}var t;return t=e._tfengine.ENV,He=t,Ga=()=>e._tfengine,e._tfengine}gs.nextTensorId=0,gs.nextVariableId=0;var bs=ys();function xs(e,t){const n={a:e,b:t};return bs.runKernel(Ze,n)}var vs,ws={};function ks(e){vs=e}function Is(e){if(void 0!==vs)return vs;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Ss(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}p(ws,{isBrowser:()=>Ss,isMobile:()=>Is,mockIsMobile:()=>ks});var Ns=Ue();function Ts(e,t){let n=e;if(we(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||we(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Ue().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Es(e,r,[]),r}function Es(e,t,n){if(n=n||[],!Array.isArray(e)&&!we(e))return void ee(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));ee(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),ee(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)Es(e[t],r,n.concat(t))}function Cs(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function _s(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(e instanceof ja)return Cs(r,e.dtype,t,n),e;let a=Ee(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),Cs(r,a,t,n),null==e||!we(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const s=Ts(e,a);we(e)||Array.isArray(e)||(e=[e]);const i=!0,o="string"!==a?Fa(e,a):re(e,[],i);return bs.makeTensor(o,s,a)}function $s(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);const a=e;return a.map(((e,a)=>_s(e,`${t}[${a}]`,n,r)))}Ns.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Ns.registerFlag("IS_BROWSER",(()=>Ss())),Ns.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),Ns.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Ns.registerFlag("PROD",(()=>!1)),Ns.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Ns.getBool("DEBUG"))),Ns.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Ns.registerFlag("IS_TEST",(()=>!1)),Ns.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),Ns.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1));var As="__op";function Fs(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=As;const a=function(){bs.startScope(n);try{const e=r(...arguments);return Pe(e)&&console.error("Cannot return a Promise inside of tidy."),bs.endScope(e),e}catch(e){throw bs.endScope(null),e}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}var Rs=Fs({complex_:function(e,t){const n=_s(e,"real","complex"),r=_s(t,"imag","complex");te(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const a={real:n,imag:r};return bs.runKernel(vt,a)}});function Ds(e,t,n,r){if(null==r&&(r=Ee(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!we(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Oe(t);const e=ae(t),r=ae(n);ee(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],a=e!==n.length-1||r!==ae(t.slice(e));ee(n[e]===t[e]||!a,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return we(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?Fa(e,r):re(e,[],!0),bs.makeTensor(e,t,r)}function Ms(e,t,n){return Ds(e,t,Ts(e,n),n)}var Os={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function Ls(e,t){const n=[],r=[],a=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<a.length;++s){const i=a[s],o=Array.isArray(e)?e[s].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const u={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let a=0;for(let e=0;e<t.length;e++){const n=t[e],s=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(s,a),a+=4,r.set(n,a),a+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(u.group=t),n.push(u)}return{data:Ps(await Promise.all(r)),specs:n}}function zs(e,t){const n={};let r,a=0;for(const s of t){const t=s.name,i=s.dtype,o=s.shape,u=ae(o);let l;if("quantization"in s){const n=s.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${s.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${s.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${s.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${i}.`)}const o=Os[n.dtype],c=e.slice(a,a+u*o),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===i)if("uint8"===n.dtype||"uint16"===n.dtype){l=new Float32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];l[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=qs()),l=r(h)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);l=new Int32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];l[e]=Math.round(t*n.scale+n.min)}}a+=u*o}else if("string"===i){const t=ae(s.shape);l=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(a,a+4))[0];a+=4;const n=new Uint8Array(e.slice(a,a+t));l.push(n),a+=t}}else{const r=Os[i],s=e.slice(a,a+u*r);if("float32"===i)l=new Float32Array(s);else if("int32"===i)l=new Int32Array(s);else if("bool"===i)l=new Uint8Array(s);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);{l=new Float32Array(s);const e=new Float32Array(l.length/2),r=new Float32Array(l.length/2);for(let t=0;t<e.length;t++)e[t]=l[2*t],r[t]=l[2*t+1];const a=Ms(e,o,"float32"),i=Ms(r,o,"float32");n[t]=Rs(a,i),a.dispose(),i.dispose()}}a+=u*r}"complex64"!==i&&(n[t]=Ms(l,o,i))}return n}function Ps(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let a=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}var Bs="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Ws(e){return Bs?Buffer.byteLength(e):new Blob([e]).size}function Vs(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function Us(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function Gs(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function Hs(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){const[r,a]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=a}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}function js(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Ws(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Ws(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function qs(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let a=0;a<r.length;a++){const i=r[a],o=e[n[i>>10]+(1023&i)]+t[i>>10];s[a]=o}return new Float32Array(a)}}var Ks=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Ks.instance&&(Ks.instance=new Ks),Ks.instance}static registerSaveRouter(e){Ks.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Ks.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Ks.getHandlers(e,"save")}static getLoadHandlers(e,t){return Ks.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?Ks.getInstance().loadRouters:Ks.getInstance().saveRouters).forEach((t=>{const a=t(e,n);null!==a&&r.push(a)})),r}},Xs=e=>Ks.registerSaveRouter(e),Ys=e=>Ks.registerLoadRouter(e),Zs=e=>Ks.getSaveHandlers(e),Js=(e,t)=>Ks.getLoadHandlers(e,t),Qs="tensorflowjs",ei="models_store",ti="model_info_store";function ni(){if(!Ue().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function ri(e){const t=e.result;t.createObjectStore(ei,{keyPath:"modelPath"}),t.createObjectStore(ti,{keyPath:"modelPath"})}var ai=class{constructor(e){if(this.indexedDB=ni(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(Qs,1);r.onupgradeneeded=()=>ri(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction(ei,"readonly"),r=t.objectStore(ei).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{const r=js(t),s=a.transaction(ti,"readwrite");let i=s.objectStore(ti);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;o.onsuccess=()=>{u=a.transaction(ei,"readwrite");const o=u.objectStore(ei).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{i=s.objectStore(ti);const t=i.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(o.error)),t.onerror=e=>(a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}};ai.URL_SCHEME="indexeddb://";var si=e=>{return Ue().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ai.URL_SCHEME)?(t=e.slice(ai.URL_SCHEME.length),new ai(t)):null;var t};Ks.registerSaveRouter(si),Ks.registerLoadRouter(si);var ii="/",oi="tensorflowjs_models",ui="info",li="model_topology",ci="weight_specs",hi="weight_data",di="model_metadata";function pi(e){return{info:[oi,e,ui].join(ii),topology:[oi,e,li].join(ii),weightSpecs:[oi,e,ci].join(ii),weightData:[oi,e,hi].join(ii),modelMetadata:[oi,e,di].join(ii)}}function fi(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function mi(e){const t=e.split(ii);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(ii)}var gi=class{constructor(e){if(!Ue().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=pi(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=js(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Bs)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch(e){throw fi(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Bs){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(s),t}};gi.URL_SCHEME="localstorage://";var yi=e=>{return Ue().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(gi.URL_SCHEME)?(t=e.slice(gi.URL_SCHEME.length),new gi(t)):null;var t};Ks.registerSaveRouter(yi),Ks.registerLoadRouter(yi);var bi="://",xi=class{constructor(){this.managers={}}static getInstance(){return null==xi.instance&&(xi.instance=new xi),xi.instance}static registerManager(e,t){ee(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(bi)&&(e=e.slice(0,e.indexOf(bi))),ee(e.length>0,(()=>"scheme must not be an empty string."));const n=xi.getInstance();ee(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}};function vi(e){if(-1===e.indexOf(bi))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${xi.getSchemes().join(",")}`);return{scheme:e.split(bi)[0],path:e.split(bi)[1]}}async function wi(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];ee(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=Ks.getLoadHandlers(e);ee(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),ee(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const a=r[0],s=Ks.getSaveHandlers(t);ee(s.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),ee(s.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const i=s[0],o=vi(e).scheme,u=vi(e).path,l=o===vi(e).scheme,c=await a.load();n&&l&&await xi.getManager(o).removeModel(u);const h=await i.save(c);return n&&!l&&await xi.getManager(o).removeModel(u),h.modelArtifactsInfo}async function ki(){const e=xi.getSchemes(),t={};for(const n of e){const e=await xi.getManager(n).listModels();for(const r in e)t[n+bi+r]=e[r]}return t}async function Ii(e){const t=vi(e);return xi.getManager(t.scheme).removeModel(t.path)}async function Si(e,t){return wi(e,t,!1)}async function Ni(e,t){return wi(e,t,!0)}if(Ue().get("IS_BROWSER")){Ue().setPlatform("browser",new class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}});try{xi.registerManager(gi.URL_SCHEME,new class{constructor(){ee(Ue().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),ee("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=oi+ii,n=ii+ui;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);a.startsWith(t)&&a.endsWith(n)&&(e[mi(a)]=JSON.parse(this.LS.getItem(a)))}return e}async removeModel(e){var t;const n=pi(e=(t=e).startsWith(gi.URL_SCHEME)?t.slice(gi.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return fi(n),r}})}catch(e){}try{xi.registerManager(ai.URL_SCHEME,new class{constructor(){this.indexedDB=ni()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(Qs,1);n.onupgradeneeded=()=>ri(n),n.onsuccess=()=>{const r=n.result,a=r.transaction(ti,"readonly"),s=a.objectStore(ti).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(ai.URL_SCHEME)?t.slice(ai.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(Qs,1);r.onupgradeneeded=()=>ri(r),r.onsuccess=()=>{const a=r.result,s=a.transaction(ti,"readwrite"),i=s.objectStore(ti),o=i.get(e);let u;o.onsuccess=()=>{if(null==o.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),s=()=>{u=a.transaction(ei,"readwrite");const r=u.objectStore(ei).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=s,r.onerror=e=>(s(),a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)}))}})}catch(e){}}var Ti;function Ei(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2?arguments[2]:void 0;return t=t||"float32",Oe(e),new Ua(e,t,n)}Ue().get("IS_NODE")&&Ue().setPlatform("node",new class{constructor(){this.util=y(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Ue().global.fetch?Ue().global.fetch(e,t):(null==Ti&&(Ti=g()),Ti(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});var Ci=Fs({cast_:function(e,t){const n=_s(e,"x","cast");if(!xe(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},a={dtype:t};return bs.runKernel(yt,r,a)}}),_i=Fs({clone_:function(e){const t={x:_s(e,"x","clone","string_or_numeric")};return bs.runKernel(un,t)}});function $i(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];console.log(e.toString(t))}ys(),Ha={buffer:Ei,cast:Ci,clone:_i,print:$i};var Ai={};function Fi(e){return new Promise((e=>setTimeout(e))).then(e)}p(Ai,{browserFiles:()=>Di,browserHTTPRequest:()=>Ui,concatenateArrayBuffers:()=>Vs,copyModel:()=>Si,decodeWeights:()=>zs,encodeWeights:()=>Ls,fromMemory:()=>Hi,getLoadHandlers:()=>Js,getModelArtifactsForJSON:()=>Hs,getModelArtifactsInfoForJSON:()=>js,getSaveHandlers:()=>Zs,http:()=>Vi,isHTTPScheme:()=>Bi,listModels:()=>ki,loadWeights:()=>Li,moveModel:()=>Ni,registerLoadRouter:()=>Ys,registerSaveRouter:()=>Xs,removeModel:()=>Ii,weightsLoaderFactory:()=>zi,withSaveHandler:()=>ji});var Ri=class{constructor(e){if(!Ue().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Ri.URL_SCHEME)&&(e=e.slice(Ri.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=Gs(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),a=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await Fi((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await Fi((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:js(e)}}}};function Di(e){return new class{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),a=r.modelTopology;if(null==a)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:a});const s=Hs(r,(e=>this.loadWeights(e)));e(s)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const r of e)t.push(...r.weights),n.push(...r.paths);const r=this.checkManifestAndWeightFiles(e),a=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(a).then((e=>[t,Vs(e)]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{const a=new FileReader;a.onload=e=>{const t=e.target.result;n(t)},a.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>Us(e.name))),r={};for(const a of e)a.paths.forEach((e=>{const a=Us(e);if(-1!==t.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),-1===n.indexOf(a))throw new Error(`Weight file with basename '${a}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(a)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}(e)}function Mi(e,t,n,r){var a,s,i;ee(null!=(a=e)&&Array.isArray(a)&&a.length>0,(()=>"promises must be a none empty array")),i=r=null==r?1:r,ee((s=n=null==n?0:n)>=0&&s<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${s}`)),ee(i>=0&&i<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${i}`)),ee(i>=s,(()=>`startFraction must be no more than endFraction, but got startFraction ${s} and endFraction ${i}`));let o=0;return Promise.all(e.map((a=>(a.then((a=>{const s=n+ ++o/e.length*(r-n);return t(s),a})),a))))}async function Oi(e,t){null==t&&(t={});const n=null==t.fetchFunc?Ue().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await Mi(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await Mi(a,t.onProgress,.5,1)}async function Li(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;const a=e=>Oi(e,{requestInit:r}),s=zi(a);return s(e,t,n)}function zi(e){return async function(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",r=arguments.length>2?arguments[2]:void 0;const a=t.map((()=>!1)),s={},i=null!=r?r.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const u="quantization"in e?e.quantization.dtype:e.dtype,l=Os[u]*ae(e.shape),c=()=>{a[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=r?r.forEach(((t,n)=>{t===e.name&&(c(),i[n]=!0)})):c(),o.push(e.name),n+=l}))})),!i.every((e=>e))){const e=r.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const u=a.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),l=[];u.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;l.push(t)}))}));const c=await e(l),h={};let d=0;return u.forEach((e=>{const n=t[e].paths.length;let r=0;for(let e=0;e<n;e++)r+=c[d+e].byteLength;const a=new ArrayBuffer(r),i=new Uint8Array(a);let o=0;for(let e=0;e<n;e++){const t=new Uint8Array(c[d+e]);i.set(t,o),o+=t.byteLength}s[e].forEach((e=>{const t=zs(a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const e in t)h[e]=t[e]})),d+=n})),h}}Ri.URL_SCHEME="downloads://",Ks.registerSaveRouter((e=>Ue().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ri.URL_SCHEME)?function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"model";return new Ri(e)}(e.slice(Ri.URL_SCHEME.length)):null));var Pi=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(ee("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=Ue().platform.fetch,ee(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&ee(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=Gs(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:js(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Hs(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),a=this.weightPathPrefix||n,s=[];for(const t of e)s.push(...t.weights);const i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(a+e+r);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[s,Vs(await Oi(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}};function Bi(e){return null!=e.match(Pi.URL_SCHEME_REGEX)}Pi.URL_SCHEME_REGEX=/^https?:\/\//;var Wi=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Bi(e))):Bi(e),n)return Vi(e,t)}return null};function Vi(e,t){return new Pi(e,t)}function Ui(e,t){return Vi(e,t)}Ks.registerSaveRouter(Wi),Ks.registerLoadRouter(Wi);var Gi=class{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}};function Hi(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new Gi(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Gi({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Gi({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function ji(e){return new class{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}(e)}var qi={};p(qi,{confusionMatrix:()=>Zi});var Ki=Fs({matMul_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=_s(e,"a","matMul"),s=_s(t,"b","matMul");[a,s]=ls(a,s);const i={a,b:s},o={transposeA:n,transposeB:r};return bs.runKernel(dt,i,o)}}),Xi=Fs({oneHot_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const a=_s(e,"indices","oneHot","int32"),s={indices:a},i={depth:t,onValue:n,offValue:r};return bs.runKernel(jn,s,i)}}),Yi=Fs({transpose_:function(e,t){const n=_s(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),ee(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{ee(e>=0&&e<n.rank,(()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${t}`))})),n.rank<=1)return n.clone();const r={x:n},a={perm:t};return bs.runKernel(Ur,r,a)}}),Zi=Fs({confusionMatrix_:function(e,t,n){const r=_s(e,"labels","confusionMatrix"),a=_s(t,"predictions","confusionMatrix");ee(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),ee(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),ee(1===a.rank,(()=>`Expected the rank of predictions to be 1, but got ${a.rank}`)),ee(r.shape[0]===a.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`)),ee(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));const s=Xi(Ci(r,"int32"),n),i=Xi(Ci(a,"int32"),n),o=Yi(s),u=Ki(o,i);return Ci(u,"int32")}}),Ji={};function Qi(e,t){const n=e.length,r=[];for(let a=0;a<n;a++){const s=n-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&1===i&&r.unshift(s)}return r}function eo(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],s=t.length-r-1,i=t[s];(null==a||1===a&&i>1)&&n.unshift(s)}return n}function to(e,t){const n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}p(Ji,{assertAndGetBroadcastShape:()=>to,getBroadcastDims:()=>Qi,getReductionAxes:()=>eo});var no,ro={};function ao(e,t,n){if(ne(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=Ts(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Ds(e,t,r,n)}function so(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3;if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(a){const t=2;if(a&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}const u=aa(Xr,bs.backendName);if(null!=u){const n={pixels:e},r={numChannels:t};return bs.runKernel(Xr,n,r)}const[l,c]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];let h,d;if(i)h=e.getContext("2d").getImageData(0,0,l,c).data;else if(r||n)h=e.data;else if(s||a||o){if(null==no)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");no=new OffscreenCanvas(1,1).getContext("2d")}else no=document.createElement("canvas").getContext("2d");no.canvas.width=l,no.canvas.height=c,no.drawImage(e,0,0,l,c),h=no.getImageData(0,0,l,c).data}if(4===t)d=new Int32Array(h);else{const e=l*c;d=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)d[n*t+e]=h[4*n+e]}const p=[c,l,t];return ao(d,p,"int32")}function io(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}async function oo(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3,n=null;if(Ue().getBool("WRAP_TO_IMAGEBITMAP")&&io(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return so(n,t)}async function uo(e,t){let n=_s(e,"img","toPixels");if(!(e instanceof ja)){const e=n;n=Ci(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2];if(s>4||2===s)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const i=await n.data(),o="float32"===n.dtype?255:1,u=new Uint8ClampedArray(a*r*4);for(let e=0;e<r*a;++e){const t=[0,0,0,255];for(let r=0;r<s;r++){const a=i[e*s+r];if("float32"===n.dtype){if(a<0||a>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${a}.`)}else if("int32"===n.dtype&&(a<0||a>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${a}.`);1===s?(t[0]=a*o,t[1]=a*o,t[2]=a*o):t[r]=a*o}const r=4*e;u[r+0]=Math.round(t[0]),u[r+1]=Math.round(t[1]),u[r+2]=Math.round(t[2]),u[r+3]=Math.round(t[3])}if(null!=t){t.width=a,t.height=r;const e=t.getContext("2d"),n=new ImageData(u,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),u}p(ro,{fromPixels:()=>lo,fromPixelsAsync:()=>oo,toPixels:()=>uo});var lo=Fs({fromPixels_:so}),co={};function ho(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===ae(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const a=t.shape,s=a[a.length-1];let i=1;for(let e=0;e<a.length-1;++e)i*=a[e];const o=e.shape,u=a.slice();u.pop();let l=1;for(let e=s;e<n;++e)l*=o[e],u.push(o[e]);const c=[...$e(e.shape).map((e=>e/l)),1].slice(0,s);return[u,i,l,c]}p(co,{prepareAndValidate:()=>ho});var po={};function fo(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw new Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw new Error(s+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function mo(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}fo(n,t,e)}function go(e,t,n){const r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length;let i=1;for(let e=a;e<s;++e)i*=n[e];const o=a<1?1:a;return{sliceRank:a,numUpdates:ae(t.shape)/o,sliceSize:i,strides:[...$e(n.slice(0,a)),1],outputSize:ae(n)}}p(po,{calculateShapes:()=>go,validateInput:()=>mo,validateUpdateShape:()=>fo});var yo={};function bo(e,t,n){const r=e.shape.length;ee(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),ee(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let a=0;a<r;++a)ee(t[a]+n[a]<=e.shape[a],(()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`))}function xo(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function vo(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function wo(e,t,n,r){const a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function ko(e,t,n){return n<=e?n:n-(t-1)}function Io(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function So(e,t,n,r,a,s,i,o,u){const l=e.length;let c=new Array(l),h=new Array(l),d=new Array(l);if(t.length&&n>0){const u=t[0],l=n+1;c=No(i,u,l,r,e),h=To(o,u,l,a,e),d=wo(s,u,l,e)}else for(let t=0;t<l;t++)c[t]=Co(i,r,s,e,t,u),h[t]=_o(o,a,s,e,t,u),d[t]=Eo(s,t,u);return{begin:c,end:h,strides:d}}function No(e,t,n,r,a){const s=[...a],i=Io(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=0;else{const i=ko(t,n,a);let o=r[i];e&1<<i&&(o=0),s[a]=o}return s}function To(e,t,n,r,a){const s=[...a],i=Io(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=Number.MAX_SAFE_INTEGER;else{const i=ko(t,n,a);let o=r[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),s[a]=o}for(let e=0;e<s.length;e++){const t=a[e];s[e]<0&&(s[e]+=t),s[e]=K(0,s[e],a[e])}return s}function Eo(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function Co(e,t,n,r,a,s){let i=t[a];const o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[a];return i<0&&(i+=u),i=K(0,i,u-1),i}function _o(e,t,n,r,a,s){let i=t[a];const o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[a];return i<0&&(i+=u),i=o>0?K(0,i,u):K(-1,i,u-1),i}function $o(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function Ao(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Fo(e,t,n){let r;const a=e.shape.length;let s;return r="number"==typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),r.forEach((e=>{ee(-1!==e,(()=>"slice() does not support negative begin indexing."))})),s=null==n?new Array(a).fill(-1):"number"==typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,s=s.map(((t,n)=>t>=0?t:(ee(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,s]}function Ro(e,t,n,r,a,s,i,o,u){let l;if(null==r?(l=new Array(t.length),l.fill(1)):l=r,null!=i&&0!=(i&i-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:l.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:l.slice(),beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};for(let e=0;e<h.dims;e++)c&&0!=(1<<e&o)&&h.numAddAxisAfterEllipsis++,1<<e&i&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const a=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<a;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(h,d);let p=!0,f=!0,m=!0;const g=[],y=[];for(let t=0;t<e.length;++t){if(0===d.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(d.shrinkAxisMask&1<<t),r=e[t];if(-1===r){g.push(n?1:-1);continue}const a=[d.beginMask&1<<t,d.endMask&1<<t],s=[d.strides[t]>0?0:-1,d.strides[t]>0?r:r-1];if(n&&d.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===d.strides[t];const i=!!(d.beginMask&1<<t&&d.endMask&1<<t);if(d.beginValid&&d.endValid){if(n){const e=d.begin[t]<0?r+d.begin[t]:d.begin[t];if(d.begin[t]=e,d.end[t]=d.begin[t]+1,e<0||e>=r)throw Error(`slice index ${d.begin[t]} of dimension ${t} out of bounds.`)}else d.begin[t]=Do(d.begin[t],0,d.strides[t],r,a,s),d.end[t]=Do(d.end[t],1,d.strides[t],r,a,s);const e=1===d.strides[t]&&0===d.begin[t]&&d.end[t]===r;p=p&&e,f=f&&(0===t&&1===d.strides[t]||e)}else p=p&&1===d.strides[t]&&i,f=f&&(0===t&&1===d.strides[t]||i);let o,u=!1;if(d.beginValid&&d.endValid?(o=d.end[t]-d.begin[t],u=!0):n?(o=1,u=!0):i&&r>=0&&(o=d.strides[t]<0?-r:r,u=!0),u){let e;e=0===o||o<0!=d.strides[t]<0?0:Math.trunc(o/d.strides[t])+(o%d.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<d.finalShapeGatherIndices.length;++e){const t=d.finalShapeGatherIndices[e];t>=0?y.push(g[t]):-2===t&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>-2!==d.finalShapeGatherIndices[t])),finalShape:y,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function Do(e,t,n,r,a,s){if(a[t])return n>0?s[t]:s[t+1&1];{const t=e<0?r+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}p(yo,{assertParamsValid:()=>bo,computeFlatOffset:()=>Ao,computeOutShape:()=>vo,getNormalizedAxes:()=>So,isSliceContinous:()=>$o,maskToAxes:()=>xo,parseSliceParams:()=>Fo,sliceInfo:()=>Ro,startForAxis:()=>Co,startIndicesWithElidedDims:()=>No,stopForAxis:()=>_o,stopIndicesWithElidedDims:()=>To,stridesForAxis:()=>Eo,stridesWithElidedDims:()=>wo});var Mo={};p(Mo,{Serializable:()=>Oo,SerializationMap:()=>Lo,registerClass:()=>zo});var Oo=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},Lo=class{constructor(){this.classNameMap={}}static getMap(){return null==Lo.instance&&(Lo.instance=new Lo),Lo.instance}static register(e){Lo.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function zo(e){ee(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),ee("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),ee(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Lo.register(e)}var Po={};p(Po,{TEST_EPSILON_FLOAT16:()=>Bo,encodeStrings:()=>Yo,expectArrayBuffersEqual:()=>Xo,expectArraysClose:()=>Wo,expectArraysEqual:()=>Ho,expectNumbersClose:()=>jo,expectPromiseToFail:()=>Go,expectValuesInRange:()=>Ko,testEpsilon:()=>Vo});var Bo=.1;function Wo(e,t,n){return null==n&&(n=Vo()),Uo(e,t,((e,t)=>qo(e,t,n)))}function Vo(){return 32===bs.backend.floatPrecision()?.001:Bo}function Uo(e,t,n){let r=!0;if((we(e)||we(t))&&(r=!1),we(e)&&we(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){const n=Ts(e),r=Ts(t);if(!ie(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const a=we(e)?e:re(e),s=we(t)?t:re(t);if(a.length!==s.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${s.length}.\nActual:   ${a}.\nExpected: ${s}.`);for(let e=0;e<s.length;++e){const t=a[e],r=s[e];if(!n(t,r))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${r}.\nActual:   ${a}.\nExpected: ${s}.`)}}function Go(e,t){e().then((()=>t.fail()),(()=>t()))}function Ho(e,t){const n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return Se(e)||Se(e[0])||Se(t)||Se(t[0])?Uo(e,n,((e,t)=>e==t)):Uo(e,t,((e,t)=>qo(e,t,0)))}function jo(e,t,n){if(null==n&&(n=Vo()),!qo(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function qo(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function Ko(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function Xo(e,t){const n=new Float32Array(e),r=new Float32Array(t);if(n.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let e=0;e<r.length;e++)if(n[e]!==r[e])throw new Error(`Expected ArrayBuffer value at ${e} to be ${r[e]} but got ${n[e]} instead`)}function Yo(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?Yo(n):e[t]=Ma(n)}return e}var Zo="3.13.0";function Jo(){Ue().set("PROD",!0)}function Qo(){Ue().set("DEBUG",!0)}function eu(){Ue().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function tu(e){Ue().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function nu(){bs.disposeVariables()}function ru(){return bs}function au(){return bs.memory()}function su(e){return bs.profile(e)}function iu(e,t){return bs.tidy(e,t)}function ou(e){ds(e).forEach((e=>e.dispose()))}function uu(e){return bs.keep(e)}function lu(e){return bs.time(e)}function cu(e){return bs.setBackend(e)}function hu(){return bs.ready()}function du(){return bs.backendName}function pu(e){bs.removeBackend(e)}function fu(e){return bs.findBackend(e)}function mu(e){return bs.findBackendFactory(e)}function gu(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return bs.registerBackend(e,t,n)}function yu(){return bs.backend}function bu(e,t){Ue().setPlatform(e,t)}var xu=Fs({add_:function(e,t){let n=_s(e,"a","add"),r=_s(t,"b","add");[n,r]=ls(n,r);const a={a:n,b:r};return bs.runKernel(Ze,a)}}),vu=Fs({floorDiv_:function(e,t){let n=_s(e,"a","floorDiv"),r=_s(t,"b","floorDiv");[n,r]=ls(n,r);const a={a:n,b:r};return bs.runKernel(tn,a)}}),wu=Fs({div_:function(e,t){let n=_s(e,"a","div"),r=_s(t,"b","div");if([n,r]=ls(n,r),"int32"===n.dtype&&"int32"===r.dtype)return vu(n,r);const a={a:n,b:r};return bs.runKernel(Vt,a,{})}}),ku=Fs({mul_:function(e,t){let n=_s(e,"a","mul"),r=_s(t,"b","mul");[n,r]=ls(n,r);const a={a:n,b:r};return bs.runKernel(Pn,a)}}),Iu=Fs({abs_:function(e){const t=_s(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return bs.runKernel(wt,e)}{const e={x:t};return bs.runKernel(Ke,e)}}}),Su=Fs({acos_:function(e){const t={x:_s(e,"x","acos")};return bs.runKernel(Xe,t)}}),Nu=Fs({acosh_:function(e){const t={x:_s(e,"x","acosh")};return bs.runKernel(Ye,t)}}),Tu=Fs({addN_:function(e){ee(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),ee(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>_s(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!ie(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=t;return bs.runKernel(Je,r)}}),Eu=Fs({all_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r=_s(e,"x","all","bool"),a={x:r},s={axis:t,keepDims:n};return bs.runKernel(Qe,a,s)}}),Cu=Fs({any_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r=_s(e,"x","any","bool"),a={x:r},s={axis:t,keepDims:n};return bs.runKernel(et,a,s)}}),_u=Fs({argMax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=_s(e,"x","argMax"),r={x:n},a={axis:t};return bs.runKernel(tt,r,a)}}),$u=Fs({argMin_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=_s(e,"x","argMin"),r={x:n},a={axis:t};return bs.runKernel(nt,r,a)}}),Au=Fs({asin_:function(e){const t={x:_s(e,"x","asin")};return bs.runKernel(rt,t)}}),Fu=Fs({asinh_:function(e){const t={x:_s(e,"x","asinh")};return bs.runKernel(at,t)}}),Ru=Fs({atan_:function(e){const t={x:_s(e,"x","atan")};return bs.runKernel(st,t)}}),Du=Fs({atan2_:function(e,t){let n=_s(e,"a","atan2"),r=_s(t,"b","atan2");[n,r]=ls(n,r);const a={a:n,b:r};return bs.runKernel(ot,a)}}),Mu=Fs({atanh_:function(e){const t={x:_s(e,"x","atanh")};return bs.runKernel(it,t)}});function Ou(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",s=arguments.length>5?arguments[5]:void 0;const i=e[3],o=[...t,i],u=Yu(a);return Pu(e,o,n,s,r,null,null,u)}function Lu(e,t,n,r,a,s){let i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast";const[o,u]=Vu(t);let l;if("channelsLast"===i)l=[o,u,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);l=[o,u,e[1],e[1]]}return Pu(e,l,n,r,a,s,!1,i)}function zu(e,t,n,r,a,s){let i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NDHWC";const[o,u,l]=Uu(t);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,u,l,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",c=[o,u,l,e[1],e[1]]}return Bu(e,c,n,r,a,!1,h,s)}function Pu(e,t,n,r,a,s){let i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:"channelsLast",[u,l,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[u,l,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,h,l,c]=e}const[d,p,,f]=t,[m,g]=Vu(n),[y,b]=Vu(r),x=Gu(d,y),v=Gu(p,b),{padInfo:w,outHeight:k,outWidth:I}=Hu(a,l,c,m,g,x,v,s,o),S=i?f*h:f;let N;return"channelsFirst"===o?N=[u,S,k,I]:"channelsLast"===o&&(N=[u,k,I,S]),{batchSize:u,dataFormat:o,inHeight:l,inWidth:c,inChannels:h,outHeight:k,outWidth:I,outChannels:S,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:y,dilationWidth:b,inShape:e,outShape:N,filterShape:t}}function Bu(e,t,n,r,a){let s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast",o=arguments.length>7?arguments[7]:void 0,[u,l,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[u,l,c,h,d]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[u,d,l,c,h]=e}const[p,f,m,,g]=t,[y,b,x]=Uu(n),[v,w,k]=Uu(r),I=Gu(p,v),S=Gu(f,w),N=Gu(m,k),{padInfo:T,outDepth:E,outHeight:C,outWidth:_}=ju(a,l,c,h,y,b,x,I,S,N,o),$=s?g*d:g;let A;return"channelsFirst"===i?A=[u,$,E,C,_]:"channelsLast"===i&&(A=[u,E,C,_,$]),{batchSize:u,dataFormat:i,inDepth:l,inHeight:c,inWidth:h,inChannels:d,outDepth:E,outHeight:C,outWidth:_,outChannels:$,padInfo:T,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:S,effectiveFilterWidth:N,dilationDepth:v,dilationHeight:w,dilationWidth:k,inShape:e,outShape:A,filterShape:t}}function Wu(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;const a=Gu(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function Vu(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Uu(e){return"number"==typeof e?[e,e,e]:e}function Gu(e,t){return t<=1?e:e+(e-1)*(t-1)}function Hu(e,t,n,r,a,s,i,o,u){let l,c,h;if("number"==typeof e){l={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,a){null==r&&(r=Wu(e,t,n));const s=e[1];return[qu((e[0]-t+2*r)/n+1,a),qu((s-t+2*r)/n+1,a)]}([t,n],s,r,e,o);c=a[0],h=a[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/a);const e=Math.max(0,(c-1)*r+s-t),o=Math.max(0,(h-1)*a+i-n),u=Math.floor(e/2),d=e-u,p=Math.floor(o/2);l={top:u,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-s+1)/r),h=Math.ceil((n-i+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const d="channelsLast"===u?e[1][0]:e[2][0],p="channelsLast"===u?e[1][1]:e[2][1],f="channelsLast"===u?e[2][0]:e[3][0],m="channelsLast"===u?e[2][1]:e[3][1];l={top:d,bottom:p,left:f,right:m,type:0===d&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},c=qu((t-s+d+p)/r+1,o),h=qu((n-i+f+m)/a+1,o)}}return{padInfo:l,outHeight:c,outWidth:h}}function ju(e,t,n,r,a,s,i,o,u,l,c){let h,d,p,f;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,a,s){null==a&&(a=Wu(e,t,r));const i=e[1],o=e[2];return[qu((e[0]-t+2*a)/r+1,s),qu((i-t+2*a)/r+1,s),qu((o-t+2*a)/r+1,s),1]}([t,n,r,1],o,0,a,e,c);d=s[0],p=s[1],f=s[2]}else if("same"===e){d=Math.ceil(t/a),p=Math.ceil(n/s),f=Math.ceil(r/i);const e=(d-1)*a+o-t,c=(p-1)*s+u-n,m=(f-1)*i+l-r,g=Math.floor(e/2),y=e-g,b=Math.floor(c/2),x=c-b,v=Math.floor(m/2);h={top:b,bottom:x,left:v,right:m-v,front:g,back:y,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-o+1)/a),p=Math.ceil((n-u+1)/s),f=Math.ceil((r-l+1)/i)}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}function qu(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Ku(e){const[t,n,r]=Vu(e);return 1===t&&1===n&&1===r}function Xu(e,t){return Ku(e)||Ku(t)}function Yu(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function Zu(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)ee(oe(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{ee(oe(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}var Ju=Fs({reshape_:function(e,t){const n={x:_s(e,"x","reshape","string_or_numeric")},r={shape:t};return bs.runKernel(rr,n,r)}}),Qu=Fs({avgPool_:function(e,t,n,r,a){const s=_s(e,"x","avgPool","float32");ee(Xu(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=s,o=!1;3===s.rank&&(o=!0,i=Ju(s,[1,s.shape[0],s.shape[1],s.shape[2]])),ee(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),Zu("avgPool",r,a);const u={x:i},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a};let c=bs.runKernel(ut,u,l);return c=Ci(c,s.dtype),o?Ju(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),el=Fs({avgPool3d_:function(e,t,n,r,a){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const i=_s(e,"x","avgPool3d","float32");let o=i,u=!1;4===i.rank&&(u=!0,o=Ju(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),ee(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),ee("NDHWC"===s,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),Zu("avgPool3d",r,a);const l={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s};let h=bs.runKernel(ct,l,c);return h=Ci(h,o.dtype),u?Ju(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),tl=Fs({concat_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;ee(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=$s(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return _i(n[0]);const r=n,a={axis:t};return bs.runKernel(kt,r,a)}}),nl=Fs({sigmoid_:function(e){const t={x:_s(e,"x","sigmoid","float32")};return bs.runKernel(xr,t)}}),rl=Fs({slice_:function(e,t,n){const r=_s(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const a={x:r},s={begin:t,size:n};return bs.runKernel(mr,a,s)}}),al=Fs({tanh_:function(e){const t={x:_s(e,"x","tanh","float32")};return bs.runKernel(Pr,t)}}),sl=Fs({basicLSTMCell_:function(e,t,n,r,a,s){const i=_s(e,"forgetBias","basicLSTMCell"),o=_s(t,"lstmKernel","basicLSTMCell"),u=_s(n,"lstmBias","basicLSTMCell"),l=_s(r,"data","basicLSTMCell"),c=_s(a,"c","basicLSTMCell"),h=_s(s,"h","basicLSTMCell"),d=tl([l,h],1),p=Ki(d,o),f=xu(p,u),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=rl(f,[0,0],y),x=rl(f,[0,g],y),v=rl(f,[0,2*g],y),w=rl(f,[0,3*g],y),k=xu(ku(nl(b),al(x)),ku(c,nl(xu(i,v))));return[k,ku(al(k),nl(w))]}}),il=Fs({batchToSpaceND_:function(e,t,n){const r=_s(e,"x","batchToSpaceND"),a=t.reduce(((e,t)=>e*t));ee(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),ee(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),ee(r.shape[0]%a==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`));const s={x:r},i={blockShape:t,crops:n};return bs.runKernel(pt,s,i)}}),ol=Fs({batchNorm_:function(e,t,n,r,a,s){null==s&&(s=.001);const i=_s(e,"x","batchNorm"),o=_s(t,"mean","batchNorm"),u=_s(n,"variance","batchNorm");let l,c;null!=a&&(l=_s(a,"scale","batchNorm")),null!=r&&(c=_s(r,"offset","batchNorm")),ee(o.rank===u.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),ee(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),ee(null==l||o.rank===l.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h=function(e){let t;return t=0===e.rank||1===e.rank?Ju(e,[1,1,1,e.size]):2===e.rank?Ju(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Ju(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),d={x:h,scale:l,offset:c,mean:o,variance:u},p={varianceEpsilon:s},f=bs.runKernel(nn,d,p);return Ju(f,i.shape)}}),ul=Fs({batchNorm2d_:function(e,t,n,r,a,s){const i=_s(e,"x","batchNorm"),o=_s(t,"mean","batchNorm"),u=_s(n,"variance","batchNorm");let l,c;return null!=a&&(l=_s(a,"scale","batchNorm")),null!=r&&(c=_s(r,"offset","batchNorm")),ee(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),ee(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),ee(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=l&&ee(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=c&&ee(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),ol(i,o,u,c,l,s)}}),ll=Fs({batchNorm3d_:function(e,t,n,r,a,s){const i=_s(e,"x","batchNorm"),o=_s(t,"mean","batchNorm"),u=_s(n,"variance","batchNorm");let l,c;return null!=a&&(l=_s(a,"scale","batchNorm")),null!=r&&(c=_s(r,"offset","batchNorm")),ee(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),ee(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),ee(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=l&&ee(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=c&&ee(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),ol(i,o,u,c,l,s)}}),cl=Fs({batchNorm4d_:function(e,t,n,r,a,s){const i=_s(e,"x","batchNorm"),o=_s(t,"mean","batchNorm"),u=_s(n,"variance","batchNorm");let l,c;return null!=a&&(l=_s(a,"scale","batchNorm")),null!=r&&(c=_s(r,"offset","batchNorm")),ee(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),ee(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),ee(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=l&&ee(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=c&&ee(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),ol(i,o,u,c,l,s)}}),hl=Fs({bincount_:function(e,t,n){const r=_s(e,"x","bincount"),a=_s(t,"weights","bincount");ee("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),ee(n>=0,(()=>`size must be non-negative, but got ${n}.`)),ee(a.size===r.size||0===a.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`));const s={x:r,weights:a},i={size:n};return bs.runKernel(ft,s,i)}}),dl=Fs({broadcastArgs_:function(e,t){const n=_s(e,"s0","broadcastArgs","int32"),r=_s(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const a={s0:n,s1:r};return bs.runKernel(gt,a)}}),pl=Fs({broadcastTo_:function(e,t){let n=_s(e,"broadcastTo","x");const r=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Ju(n,e)}const a=n.shape,s=Array.from(t);for(let e=t.length-1;e>=0;e--)if(a[e]===t[e])s[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===s.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return _i(n);const i={x:n},o={reps:s};return bs.runKernel(Br,i,o)}}),fl=Fs({ceil_:function(e){const t={x:_s(e,"x","ceil","float32")};return bs.runKernel(bt,t)}}),ml=Fs({clipByValue_:function(e,t,n){const r=_s(e,"x","clipByValue");ee(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const a={x:r},s={clipValueMin:t,clipValueMax:n};return bs.runKernel(xt,a,s)}}),gl=Fs({concat1d_:function(e){return tl(e,0)}}),yl=Fs({concat2d_:function(e,t){return tl(e,t)}}),bl=Fs({concat3d_:function(e,t){return tl(e,t)}}),xl=Fs({concat4d_:function(e,t){return tl(e,t)}}),vl=Fs({conv2d_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],i=arguments.length>6?arguments[6]:void 0;const o=_s(e,"x","conv2d","float32"),u=_s(t,"filter","conv2d","float32");let l=o,c=!1;3===o.rank&&(c=!0,l=Ju(o,[1,o.shape[0],o.shape[1],o.shape[2]])),ee(4===l.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`)),ee(4===u.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`)),Zu("conv2d",r,i);const h="NHWC"===a?l.shape[3]:l.shape[1];ee(h===u.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${u.shape[2]}.`)),ee(Xu(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`));const d={x:l,filter:u},p={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},f=bs.runKernel(It,d,p);return c?Ju(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),wl=Fs({conv1d_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,i=arguments.length>6?arguments[6]:void 0;const o=_s(e,"x","conv1d"),u=_s(t,"filter","conv1d");let l=o,c=!1;2===o.rank&&(c=!0,l=Ju(o,[1,o.shape[0],o.shape[1]])),ee(3===l.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`)),ee(3===u.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`)),Zu("conv1d",r,i),ee(l.shape[2]===u.shape[1],(()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`)),ee(Xu(n,s),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`)),ee("NWC"===a,(()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`));const h=Ju(u,[1,u.shape[0],u.shape[1],u.shape[2]]),d=Ju(l,[l.shape[0],1,l.shape[1],l.shape[2]]),p=[1,n],f=[1,s],m="NHWC",g=vl(d,h,p,r,m,f,i);return Ju(g,c?[g.shape[2],g.shape[3]]:[g.shape[0],g.shape[2],g.shape[3]])}}),kl=Fs({conv2DBackpropInput_:function(e,t,n,r,a){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",i=arguments.length>6?arguments[6]:void 0;ee(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,u=t,l=!1;3===t.rank&&(l=!0,u=Ju(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),ee(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),ee(4===u.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`)),ee(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===s?o[3]:o[1],h="NHWC"===s?u.shape[3]:u.shape[1];ee(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),ee(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),Zu("conv2dDerInput",a,i);const d={dy:u,filter:n},p={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,inputShape:o},f=bs.runKernel(Nt,d,p);return l?Ju(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Il=Fs({conv2dTranspose_:function(e,t,n,r,a,s){const i=_s(e,"x","conv2dTranspose"),o=_s(t,"filter","conv2dTranspose");return kl(n,i,o,r,a,"NHWC",s)}}),Sl=Fs({conv3d_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NDHWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1,1];const i=_s(e,"x","conv3d"),o=_s(t,"filter","conv3d");let u=i,l=!1;4===i.rank&&(l=!0,u=Ju(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),ee(5===u.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`)),ee(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),ee(u.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),ee(Xu(n,s),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),ee("NDHWC"===a,(()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`));const c={x:u,filter:o},h={strides:n,pad:r,dataFormat:a,dilations:s},d=bs.runKernel(Tt,c,h);return l?Ju(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Nl=Fs({conv3DBackpropInput_:function(e,t,n,r,a){ee(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let s=e,i=t,o=!1;4===t.rank&&(o=!0,i=Ju(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);const u=s[4],l=i.shape[4];ee(5===s.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`)),ee(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),ee(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),ee(u===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`)),ee(l===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`));const c={dy:i,filter:n},h={pad:a,strides:r,inputShape:s},d=bs.runKernel(Ct,c,h);return o?Ju(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Tl=Fs({conv3dTranspose_:function(e,t,n,r,a){const s=_s(e,"x","conv3dTranspose"),i=_s(t,"filter","conv3dTranspose");return Nl(n,s,i,r,a)}}),El=Fs({cos_:function(e){const t={x:_s(e,"x","cos","float32")};return bs.runKernel(_t,t)}}),Cl=Fs({cosh_:function(e){const t={x:_s(e,"x","cosh","float32")};return bs.runKernel($t,t)}}),_l=Fs({cumsum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=_s(e,"x","cumsum"),s={x:a},i={axis:t,exclusive:n,reverse:r};return bs.runKernel(At,s,i)}}),$l=Fs({denseBincount_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=_s(e,"x","denseBincount"),s=_s(t,"weights","denseBincount");ee("int32"===a.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`)),ee(a.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`)),ee(n>=0,(()=>`size must be non-negative, but got ${n}.`)),ee(s.size===a.size||0===s.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${s.shape}.`));const i={x:a,weights:s},o={size:n,binaryOutput:r};return bs.runKernel(Rt,i,o)}}),Al=Fs({depthToSpace_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"NHWC";const r=_s(e,"x","depthToSpace","float32"),a="NHWC"===n?r.shape[1]:r.shape[2],s="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];ee(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),ee(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),ee(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),ee(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`));const o={x:r},u={blockSize:t,dataFormat:n};return bs.runKernel(Dt,o,u)}}),Fl=Fs({depthwiseConv2d_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],i=arguments.length>6?arguments[6]:void 0;const o=_s(e,"x","depthwiseConv2d","float32"),u=_s(t,"filter","depthwiseConv2d","float32");let l=o,c=!1;3===o.rank&&(c=!0,l=Ju(o,[1,o.shape[0],o.shape[1],o.shape[2]])),ee(4===l.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`)),ee(4===u.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`)),ee(l.shape[3]===u.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),Zu("depthwiseConv2d",r,i);const h={x:l,filter:u},d={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},p=bs.runKernel(Mt,h,d);return c?Ju(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),Rl=Fs({diag_:function(e){const t={x:_s(e,"x","diag")};return bs.runKernel(zt,t)}}),Dl=Fs({dilation2d_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[1,1],s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC";const i=_s(e,"x","dilation2d"),o=_s(t,"filter","dilation2d");ee(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),ee(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),ee("NHWC"===s,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`));let u=i,l=!1;3===i.rank&&(u=Ju(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=!0);const c={x:u,filter:o},h={strides:n,pad:r,dilations:a},d=bs.runKernel(Pt,c,h);return l?Ju(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Ml=Fs({equal_:function(e,t){let n=_s(e,"a","equal","string_or_numeric"),r=_s(t,"b","equal","string_or_numeric");[n,r]=ls(n,r),to(n.shape,r.shape);const a={a:n,b:r};return bs.runKernel(qt,a)}}),Ol=Fs({where_:function(e,t,n){const r=_s(t,"a","where"),a=_s(n,"b","where"),s=_s(e,"condition","where","bool"),i=to(to(s.shape,r.shape),a.shape),o={condition:pl(s,i),t:pl(r,i),e:pl(a,i)};return bs.runKernel(pr,o)}}),Ll=Fs({zerosLike_:function(e){const t={x:_s(e,"x","zerosLike")};return bs.runKernel(qr,t)}}),zl=Fs({divNoNan_:function(e,t){let n=_s(e,"a","div"),r=_s(t,"b","div");[n,r]=ls(n,r);const a=wu(n,r),s=Ll(a),i=Ml(r,s);return Ol(i,s,a)}}),Pl=Fs({dot_:function(e,t){const n=_s(e,"t1","dot"),r=_s(t,"t2","dot");ee(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const a=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];if(ee(a===s,(()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`)),1===n.rank&&1===r.rank){const e=Ju(n,[1,-1]),t=Ju(r,[-1,1]),a=Ki(e,t);return Ju(a,[])}if(1===n.rank&&2===r.rank){const e=Ju(n,[1,-1]),t=Ju(r,[r.shape[0],r.shape[1]]),a=Ki(e,t);return Ju(a,[a.size])}if(2===n.rank&&1===r.rank){const e=Ju(r,[-1,1]),t=Ki(n,e);return Ju(t,[t.size])}{const e=Ju(r,[r.shape[0],r.shape[1]]);return Ki(n,e)}}}),Bl=Fs({einsum_:function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];const a=n.map(((e,t)=>_s(e,`tensors${t}`,"einsum"))),s={equation:e};return bs.runKernel(Ut,a,s)}}),Wl=Fs({elu_:function(e){const t={x:_s(e,"x","elu","float32")};return bs.runKernel(Gt,t)}}),Vl=Fs({erf_:function(e){let t=_s(e,"x","erf");ee("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=Ci(t,"float32"));const n={x:t};return bs.runKernel(jt,n)}}),Ul=Fs({exp_:function(e){const t={x:_s(e,"x","exp")};return bs.runKernel(Kt,t)}}),Gl=Fs({expandDims_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=_s(e,"x","expandDims","string_or_numeric");ee(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},a={dim:t};return bs.runKernel(Xt,r,a)}}),Hl=Fs({expm1_:function(e){const t={x:_s(e,"x","expm1")};return bs.runKernel(Yt,t)}}),jl=Fs({tile_:function(e,t){const n=_s(e,"x","tile","string_or_numeric");ee(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},a={reps:t};return bs.runKernel(Br,r,a)}}),ql=Fs({eye_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";null==t&&(t=e);const a=Ei([e,t],r),s=e<=t?e:t;for(let e=0;e<s;++e)a.set(1,e,e);const i=Ju(a.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return jl(Gl(i,0),[n[0],1,1]);if(2===n.length)return jl(Gl(Gl(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return jl(Gl(Gl(Gl(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function Kl(e,t,n){const r={shape:e,value:t,dtype:n};return bs.runKernel(Jt,{},r)}var Xl=Fs({floor_:function(e){const t={x:_s(e,"x","floor","float32")};return bs.runKernel(en,t)}}),Yl=Fs({gather_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;const a=_s(e,"x","gather"),s=_s(t,"indices","gather","int32"),i={x:a,indices:s},o={axis:n,batchDims:r};return bs.runKernel(rn,i,o)}}),Zl=Fs({greater_:function(e,t){let n=_s(e,"a","greater","string_or_numeric"),r=_s(t,"b","greater","string_or_numeric");[n,r]=ls(n,r),to(n.shape,r.shape);const a={a:n,b:r};return bs.runKernel(sn,a)}}),Jl=Fs({greaterEqual_:function(e,t){let n=_s(e,"a","greaterEqual","string_or_numeric"),r=_s(t,"b","greaterEqual","string_or_numeric");[n,r]=ls(n,r),to(n.shape,r.shape);const a={a:n,b:r};return bs.runKernel(on,a)}}),Ql=Fs({imag_:function(e){const t={input:_s(e,"input","imag")};return bs.runKernel(cn,t)}}),ec=Fs({isFinite_:function(e){const t={x:_s(e,"x","isFinite")};return bs.runKernel(hn,t)}}),tc=Fs({isInf_:function(e){const t={x:_s(e,"x","isInf")};return bs.runKernel(dn,t)}}),nc=Fs({isNaN_:function(e){const t={x:_s(e,"x","isNaN")};return bs.runKernel(pn,t)}}),rc=Fs({leakyRelu_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.2;const n=_s(e,"x","leakyRelu"),r={x:n},a={alpha:t};return bs.runKernel(fn,r,a)}}),ac=Fs({less_:function(e,t){let n=_s(e,"a","less","string_or_numeric"),r=_s(t,"b","less","string_or_numeric");[n,r]=ls(n,r),to(n.shape,r.shape);const a={a:n,b:r};return bs.runKernel(mn,a)}}),sc=Fs({lessEqual_:function(e,t){let n=_s(e,"a","lessEqual","string_or_numeric"),r=_s(t,"b","lessEqual","string_or_numeric");[n,r]=ls(n,r),to(n.shape,r.shape);const a={a:n,b:r};return bs.runKernel(gn,a)}});function ic(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return bs.runKernel(yn,{},r)}var oc=Fs({localResponseNormalization_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.5;const s=_s(e,"x","localResponseNormalization");ee(4===s.rank||3===s.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${s.rank}.`)),ee(oe(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=s,o=!1;3===s.rank&&(o=!0,i=Ju(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const u={x:i},l={depthRadius:t,bias:n,alpha:r,beta:a},c=bs.runKernel(Sn,u,l);return o?Ju(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),uc=Fs({log_:function(e){const t={x:_s(e,"x","log","float32")};return bs.runKernel(bn,t)}}),lc=Fs({log1p_:function(e){const t={x:_s(e,"x","log1p")};return bs.runKernel(xn,t)}});function cc(e){return ee(Ce(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{const r=_s(t,"x","tf.grad","string_or_numeric"),a=null!=n?_s(n,"dy","tf.grad"):null;return bs.tidy((()=>{const{value:t,grads:n}=bs.gradients((()=>e(r)),[r],a);return null!=a&&te(t.shape,a.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),gc(n),n[0]}))}}function hc(e){return ee(Ce(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{ee(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const r=$s(t,"args","tf.grads","string_or_numeric"),a=null!=n?_s(n,"dy","tf.grads"):null;return bs.tidy((()=>{const{value:t,grads:n}=bs.gradients((()=>e(...r)),r,a);return null!=a&&te(t.shape,a.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),gc(n),n}))}}function dc(e){return ee(Ce(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{ee(t instanceof ja,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),ee(null==n||n instanceof ja,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:r,value:a}=bs.gradients((()=>e(t)),[t],n);return gc(r),{grad:r[0],value:a}}}function pc(e){return ee(Ce(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{ee(Array.isArray(t)&&t.every((e=>e instanceof ja)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),ee(null==n||n instanceof ja,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const r=bs.gradients((()=>e(...t)),t,n);return null!=n&&te(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),gc(r.grads),r}}function fc(e,t){ee(Ce(e),(()=>"The f passed in variableGrads(f) must be a function")),ee(null==t||Array.isArray(t)&&t.every((e=>e instanceof Ka)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in bs.registeredVariables)t.push(bs.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,a=t.length;ee((t=t.filter((e=>e.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`));const{value:s,grads:i}=bs.gradients(e,t,null,!0);ee(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),ee(0===s.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${s.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=r&&r.forEach((e=>o[e.name]=null)),{value:s,grads:o}}function mc(e){return bs.customGrad(e)}function gc(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}var yc=Fs({neg_:function(e){const t={x:_s(e,"x","neg")};return bs.runKernel(Bn,t)}}),bc=Fs({softplus_:function(e){const t={x:_s(e,"x","softplus")};return bs.runKernel(vr,t)}}),xc=Fs({logSigmoid_:function(e){const t=_s(e,"x","logSigmoid");return mc((e=>({value:yc(bc(yc(e))),gradFunc:t=>ku(t,nl(yc(e)))})))(t)}}),vc=Fs({max_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r=_s(e,"x","max"),a={x:r},s={reductionIndices:t,keepDims:n};return bs.runKernel(Tn,a,s)}}),wc=Fs({sub_:function(e,t){let n=_s(e,"a","sub"),r=_s(t,"b","sub");[n,r]=ls(n,r);const a={a:n,b:r};return bs.runKernel(Lr,a)}}),kc=Fs({sum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=_s(e,"x","sum");"bool"===r.dtype&&(r=Ci(r,"int32"));const a={x:r},s={axis:t,keepDims:n};return bs.runKernel(kr,a,s)}}),Ic=Fs({logSoftmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=_s(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r=mc(((e,n)=>{const r=vc(e,t,!0),a=wc(e,r),s=wc(Ci(a,"float32"),uc(kc(Ul(a),t,!0)));return n([s]),{value:s,gradFunc:(e,n)=>{const[r]=n,a=Ul(r);return wc(e,ku(kc(e,t,!0),a))}}}));return r(n)}});function Sc(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Nc(e,t,n){const r=e.length+t.length,a=[];let s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}function Tc(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function Ec(e,t){return Nc(e,t.map((e=>1)),t)}function Cc(e,t,n){ee(Sc(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function _c(e,t){if(Sc(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function $c(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Ac(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}var Fc=Fs({logSumExp_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r=_s(e,"x","logSumExp"),a=fe(t,r.shape),s=vc(r,a,!0),i=wc(r,s),o=Ul(i),u=kc(o,a),l=uc(u),c=xu(Ju(s,l.shape),l);if(n){const e=Ec(c.shape,a);return Ju(c,e)}return c}}),Rc=Fs({logicalAnd_:function(e,t){const n=_s(e,"a","logicalAnd","bool"),r=_s(t,"b","logicalAnd","bool");to(n.shape,r.shape);const a={a:n,b:r};return bs.runKernel(vn,a)}}),Dc=Fs({logicalNot_:function(e){const t={x:_s(e,"x","logicalNot","bool")};return bs.runKernel(wn,t)}}),Mc=Fs({logicalOr_:function(e,t){const n=_s(e,"a","logicalOr","bool"),r=_s(t,"b","logicalOr","bool");to(n.shape,r.shape);const a={a:n,b:r};return bs.runKernel(kn,a)}}),Oc=Fs({logicalXor_:function(e,t){const n=_s(e,"a","logicalXor","bool"),r=_s(t,"b","logicalXor","bool");return to(n.shape,r.shape),Rc(Mc(e,t),Dc(Rc(e,t)))}}),Lc=Fs({maxPool_:function(e,t,n,r,a){const s=_s(e,"x","maxPool");let i=s,o=!1;3===s.rank&&(o=!0,i=Ju(s,[1,s.shape[0],s.shape[1],s.shape[2]])),ee(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),ee(Xu(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),Zu("maxPool",r,a);const u={x:i},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a},c=bs.runKernel(Cn,u,l);return o?Ju(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),zc=Fs({maxPool3d_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[1,1,1],n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0,a=arguments.length>4?arguments[4]:void 0,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const i=_s(e,"x","maxPool3d");let o=i,u=!1;4===i.rank&&(u=!0,o=Ju(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),ee(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),ee("NDHWC"===s,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),Zu("maxPool3d",r,a);const l={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},h=bs.runKernel($n,l,c);return u?Ju(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Pc=Fs({maxPoolWithArgmax_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];const s=_s(e,"x","maxPoolWithArgmax"),i={x:s},o={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},u=bs.runKernel(Fn,i,o);return{result:u[0],indexes:u[1]}}}),Bc=Fs({maximum_:function(e,t){let n=_s(e,"a","maximum"),r=_s(t,"b","maximum");[n,r]=ls(n,r),"bool"===n.dtype&&(n=Ci(n,"int32"),r=Ci(r,"int32")),to(n.shape,r.shape);const a={a:n,b:r};return bs.runKernel(En,a)}}),Wc=Fs({mean_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r=_s(e,"x","mean"),a={x:r},s={axis:t,keepDims:n};return bs.runKernel(Rn,a,s)}});function Vc(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if("complex64"===t){const t=Vc(e,"float32"),n=Vc(e,"float32");return Rs(t,n)}const n=De(ae(e),t);return bs.makeTensor(n,e,t)}function Uc(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if("complex64"===t){const t=Uc(e,"float32"),n=Vc(e,"float32");return Rs(t,n)}const n=Re(ae(e),t);return bs.makeTensor(n,e,t)}function Gc(e,t){let{indexing:n="xy"}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=_s(e,"x","meshgrid",e instanceof ja?e.dtype:"float32");if(void 0===t)return[r];let a=_s(t,"y","meshgrid",t instanceof ja?t.dtype:"float32");const s=ae(r.shape),i=ae(a.shape);return"xy"===n?(r=Ju(r,[1,-1]),a=Ju(a,[-1,1]),[Ki(Uc([i,1],r.dtype),r),Ki(a,Uc([1,s],a.dtype))]):(r=Ju(r,[-1,1]),a=Ju(a,[1,-1]),[Ki(r,Uc([1,i],r.dtype)),Ki(Uc([s,1],a.dtype),a)])}var Hc=Fs({min_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r=_s(e,"x","min"),a={x:r},s={axis:t,keepDims:n};return bs.runKernel(Dn,a,s)}}),jc=Fs({minimum_:function(e,t){let n=_s(e,"a","minimum"),r=_s(t,"b","minimum");[n,r]=ls(n,r),"bool"===n.dtype&&(n=Ci(n,"int32"),r=Ci(r,"int32")),to(n.shape,r.shape);const a={a:n,b:r};return bs.runKernel(Mn,a)}}),qc=Fs({mirrorPad_:function(e,t,n){ee("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=_s(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");ee(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const a="reflect"===n?1:0;for(let e=0;e<r.rank;e++)ee(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),ee(t[e][0]>=0&&t[e][0]<=r.shape[e]-a&&t[e][1]>=0&&t[e][1]<=r.shape[e]-a,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-a} or less than 0 for input of shape ${r.shape}`));const s={paddings:t,mode:n},i={x:r};return bs.runKernel(On,i,s)}}),Kc=Fs({mod_:function(e,t){let n=_s(e,"a","mod"),r=_s(t,"b","mod");[n,r]=ls(n,r);const a={a:n,b:r};return bs.runKernel(Ln,a)}}),Xc=Fs({square_:function(e){const t=_s(e,"x","square");return bs.runKernel("Square",{x:t},{})}}),Yc=Fs({moments_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r=fe(t,(e=_s(e,"x","moments")).shape),a=Wc(e,r,n);let s=a.shape;n||(s=Ec(a.shape,r));const i=Xc(wc(Ci(e,"float32"),Ju(a,s))),o=Wc(i,r,n);return{mean:a,variance:o}}}),Zc=Fs({multiRNNCell_:function(e,t,n,r){const a=_s(t,"data","multiRNNCell"),s=$s(n,"c","multiRNNCell"),i=$s(r,"h","multiRNNCell");let o=a;const u=[];for(let t=0;t<e.length;t++){const n=e[t](o,s[t],i[t]);u.push(n[0]),u.push(n[1]),o=n[1]}const l=[],c=[];for(let e=0;e<u.length;e+=2)l.push(u[e]),c.push(u[e+1]);return[l,c]}}),Jc=Fs({multinomial_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=_s(e,"logits","multinomial"),s=a.size,i=a.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();const o=1===i?Ju(a,[1,-1]):a,u={logits:o},l={numSamples:t,seed:n,normalized:r},c=bs.runKernel(zn,u,l);return 1===i?Ju(c,[c.size]):c}}),Qc=Fs({notEqual_:function(e,t){let n=_s(e,"a","notEqual","string_or_numeric"),r=_s(t,"b","notEqual","string_or_numeric");[n,r]=ls(n,r),to(n.shape,r.shape);const a={a:n,b:r};return bs.runKernel(Wn,a)}}),eh=Fs({onesLike_:function(e){const t={x:_s(e,"x","onesLike")};return bs.runKernel(Hn,t)}}),th=Fs({outerProduct_:function(e,t){const n=_s(e,"v1","outerProduct"),r=_s(t,"v2","outerProduct");ee(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const a=Ju(n,[-1,1]),s=Ju(r,[1,-1]);return Ki(a,s)}}),nh=Fs({pad_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const r=_s(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const a={paddings:t,constantValue:n},s={x:r};return bs.runKernel(Kn,s,a)}}),rh=Fs({pad1d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return ee(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),nh(e,[t],n)}}),ah=Fs({pad2d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return ee(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),nh(e,t,n)}}),sh=Fs({pad3d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return ee(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),nh(e,t,n)}}),ih=Fs({pad4d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return ee(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),nh(e,t,n)}}),oh=Fs({spaceToBatchND_:function(e,t,n){const r=_s(e,"x","spaceToBatchND");ee(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),ee(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),ee(r.shape.reduce(((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const a={x:r},s={blockShape:t,paddings:n};return bs.runKernel(Ir,a,s)}}),uh=Fs({pool_:function(e,t,n,r,a,s,i){null==a&&(a=[1,1]),null==s&&(s=1),0===r&&(r="valid");const o=_s(e,"x","maxPool");let u=o,l=!1;3===o.rank&&(l=!0,u=Ju(o,[1,o.shape[0],o.shape[1],o.shape[2]])),ee(Xu(s,a),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`));const c=Lu(u.shape,t,s,a,r),h=[c.dilationHeight,c.dilationWidth];let d;d="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),a=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],a[t]]))}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const p=1===h[0]&&1===h[1],[f,m]=function(e,t,n){const r=n.map((e=>e[0])),a=n.map((e=>e[1])),s=e.concat(r,a),i=t.map(((e,t)=>(e-s[t]%e)%e)),o=a.map(((e,t)=>e+i[t]));return[t.map(((e,t)=>[r[t],o[t]])),t.map(((e,t)=>[0,i[t]]))]}([c.inHeight,c.inWidth],h,d),g=p?r:"valid",y=p?u:oh(u,h,f),b=("avg"===n?()=>Qu(y,t,s,g,i):()=>Lc(y,t,s,g,i))(),x=p?b:il(b,h,m);return l?Ju(x,[x.shape[1],x.shape[2],x.shape[3]]):x}}),lh=Fs({pow_:function(e,t){let n=_s(e,"base","pow"),r=_s(t,"exp","pow");[n,r]=ls(n,r);const a={a:n,b:r};return bs.runKernel(Yn,a)}}),ch=Fs({prelu_:function(e,t){const n={x:_s(e,"x","prelu"),alpha:_s(t,"alpha","prelu")};return bs.runKernel(Zn,n)}}),hh=Fs({prod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=_s(e,"x","prod");"bool"===r.dtype&&(r=Ci(r,"int32"));const a={x:r},s={axis:t,keepDims:n};return bs.runKernel(Jn,a,s)}}),dh=Fs({rand_:function(e,t,n){const r=ae(e);let a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);a=new Uint8Array(r)}for(let e=0;e<r;e++)a[e]=t();return bs.makeTensor(a,e,n)}}),ph=f(T()),fh=class{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=a||Math.random();this.random=ph.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);const i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},mh=class{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const a=r||Math.random();this.randu=ph.alea(a.toString()),this.randn=new fh(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}},gh=class{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=ph.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}},yh=Fs({randomGamma_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",a=arguments.length>4?arguments[4]:void 0;if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const s=new mh(t,n,r,a),i=Ei(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),bh=Fs({randomNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3?arguments[3]:void 0,a=arguments.length>4?arguments[4]:void 0;if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const s=new fh(t,n,r,!1,a),i=Ei(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),xh=Fs({randomUniform_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",a=arguments.length>4?arguments[4]:void 0;const s=Ei(e,r),i=new gh(t,n,null,a);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}});function vh(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";if(0===n)throw new Error("Cannot have a step of zero");const a={start:e,stop:t,step:n,dtype:r};return bs.runKernel(Qn,{},a)}var wh=Fs({real_:function(e){const t={input:_s(e,"input","real")};return bs.runKernel(er,t)}}),kh=Fs({reciprocal_:function(e){const t={x:_s(e,"x","reciprocal")};return bs.runKernel(tr,t)}}),Ih=Fs({relu_:function(e){const t={x:_s(e,"x","relu")};return bs.runKernel(nr,t)}}),Sh=Fs({relu6_:function(e){const t={x:_s(e,"x","relu6")};return bs.runKernel(ur,t)}}),Nh=Fs({reverse_:function(e,t){const n={x:_s(e,"x","reverse")},r={dims:t};return bs.runKernel(lr,n,r)}}),Th=Fs({reverse1d_:function(e){const t=_s(e,"x","reverse");return ee(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),Nh(t,0)}}),Eh=Fs({reverse2d_:function(e,t){const n=_s(e,"x","reverse");return ee(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),Nh(n,t)}}),Ch=Fs({reverse3d_:function(e,t){const n=_s(e,"x","reverse");return ee(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),Nh(n,t)}}),_h=Fs({reverse4d_:function(e,t){const n=_s(e,"x","reverse");return ee(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),Nh(n,t)}}),$h=Fs({round_:function(e){const t={x:_s(e,"x","round")};return bs.runKernel(cr,t)}}),Ah=Fs({rsqrt_:function(e){const t={x:_s(e,"x","rsqrt","float32")};return bs.runKernel(hr,t)}});function Fh(e,t){if((we(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&we(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Ds(e,[],[],t)}var Rh=Fs({selu_:function(e){const t={x:_s(e,"x","selu")};return bs.runKernel(fr,t)}}),Dh=Fs({separableConv2d_:function(e,t,n,r,a){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NHWC";const o=_s(e,"x","separableConv2d"),u=_s(t,"depthwiseFilter","separableConv2d"),l=_s(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=Ju(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");ee(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),ee(4===u.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`)),ee(4===l.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`)),ee(1===l.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`)),ee(1===l.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`));const d=u.shape[2],p=u.shape[3];ee(l.shape[2]===d*p,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${l.shape[2]}.`));const f=Fl(c,u,r,a,i,s),m=1,g=vl(f,l,m,"valid",i);return h?Ju(g,[g.shape[1],g.shape[2],g.shape[3]]):g}}),Mh=async function(e,t){const n=_s(e,"x","setdiff1d"),r=_s(t,"y","setdiff1d");ee(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),ee(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),ee(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const a=await n.data(),s=await r.data(),i=new Set(s);let o=0;for(let e=0;e<a.length;e++)i.has(a[e])||o++;const u=new Ua([o],n.dtype),l=new Ua([o],"int32");for(let e=0,t=0;e<a.length;e++)i.has(a[e])||(u.values[t]=a[e],l.values[t]=e,t++);return[u.toTensor(),l.toTensor()]},Oh=Fs({sign_:function(e){const t={x:_s(e,"x","sign")};return bs.runKernel(br,t)}}),Lh=Fs({sin_:function(e){const t={x:_s(e,"x","sin","float32")};return bs.runKernel(gr,t)}}),zh=Fs({sinh_:function(e){const t={x:_s(e,"x","sinh")};return bs.runKernel(yr,t)}}),Ph=Fs({slice1d_:function(e,t,n){const r=_s(e,"x","slice1d");return ee(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),rl(r,[t],[n])}}),Bh=Fs({slice2d_:function(e,t,n){const r=_s(e,"x","slice2d");return ee(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),rl(r,t,n)}}),Wh=Fs({slice3d_:function(e,t,n){const r=_s(e,"x","slice3d");return ee(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),rl(r,t,n)}}),Vh=Fs({slice4d_:function(e,t,n){const r=_s(e,"x","slice4d");return ee(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),rl(r,t,n)}}),Uh=Fs({softmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=_s(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},a={dim:t};return bs.runKernel(Nr,r,a)}}),Gh=Fs({fft_:function(e){ee("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return bs.runKernel(Zt,t)}}),Hh=Fs({ifft_:function(e){ee("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return bs.runKernel(ln,t)}}),jh=Fs({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const a=Ju(e,[n,t]);r=Hh(a)}else{const a=[n,2*(t-1)],s=Ju(wh(e),[n,t]),i=Ju(Ql(e),[n,t]),o=Nh(rl(s,[0,1],[n,t-2]),1),u=ku(Nh(rl(i,[0,1],[n,t-2]),1),Fh(-1)),l=tl([s,o],1),c=tl([i,u],1),h=Ju(Rs(l,c),[a[0],a[1]]);r=Hh(h)}if(r=wh(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=Ju(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),qh=Fs({split_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const r=_s(e,"x","split"),a={x:r},s={numOrSizeSplits:t,axis:n};return bs.runKernel(Sr,a,s)}}),Kh=Fs({rfft_:function(e,t){ee("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let a;if(null!=t&&t<n){const r=e.shape.map((e=>0)),s=e.shape.map((e=>e));s[e.shape.length-1]=t,a=rl(e,r,s),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,a=tl([e,Vc(r)],e.shape.length-1),n=t}else a=e;const s=Ll(a),i=Ju(Rs(a,s),[r,n]),o=Gh(i),u=Math.floor(n/2)+1,l=wh(o),c=Ql(o),h=qh(l,[u,n-u],l.shape.length-1),d=qh(c,[u,n-u],c.shape.length-1),p=a.shape.slice();return p[a.shape.length-1]=u,Ju(Rs(h[0],d[0]),p)}}),Xh=Fs({sqrt_:function(e){const t={x:_s(e,"x","sqrt","float32")};return bs.runKernel(wr,t)}}),Yh=Fs({squaredDifference_:function(e,t){let n=_s(e,"a","squaredDifference"),r=_s(t,"b","squaredDifference");[n,r]=ls(n,r),to(n.shape,r.shape);const a={a:n,b:r};return bs.runKernel(Ar,a,{})}}),Zh=Fs({squeeze_:function(e,t){const n=_s(e,"x","squeeze");return Ju(n,me(n.shape,t).newShape)}}),Jh=Fs({stack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=$s(e,"tensors","stack","string_or_numeric");ee(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&ee(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,a={axis:t};return bs.runKernel(qn,r,a)}}),Qh=Fs({step_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=_s(e,"x","step"),r={x:n},a={alpha:t};return bs.runKernel(Kr,r,a)}}),ed=Fs({stridedSlice_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:0,u=arguments.length>8&&void 0!==arguments[8]?arguments[8]:0;const l=_s(e,"x","stridedSlice","string_or_numeric"),c={x:l},h={begin:t,end:n,strides:r,beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};return bs.runKernel(Rr,c,h)}}),td=Fs({tan_:function(e){const t={x:_s(e,"x","tan","float32")};return bs.runKernel(zr,t)}});function nd(e,t){ne(e);const n=Ts(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Ds(e,null,n,t)}function rd(e,t,n){if(ne(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Ts(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Ds(e,t,r,n)}function ad(e,t,n){if(ne(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=Ts(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Ds(e,t,r,n)}function sd(e,t,n){if(ne(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=Ts(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Ds(e,t,r,n)}function id(e,t,n){if(ne(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=Ts(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Ds(e,t=t||r,r,n)}var od=Fs({topk_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const r=_s(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const a=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);const s={x:r},i={k:t,sorted:n},[o,u]=bs.runKernel(Wr,s,i);return{values:o,indices:u}}}),ud=Fs({truncatedNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3?arguments[3]:void 0,a=arguments.length>4?arguments[4]:void 0;if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const s=new fh(t,n,r,!0,a),i=Ei(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),ld=Fs({unique_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=_s(e,"x","unique","string_or_numeric");ee(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},a={axis:t},[s,i]=bs.runKernel(Gr,r,a);return{values:s,indices:i}}}),cd=Fs({unsortedSegmentSum_:function(e,t,n){const r=_s(e,"x","unsortedSegmentSum"),a=_s(t,"segmentIds","unsortedSegmentSum","int32");ee(oe(n),(()=>"numSegments must be of dtype int"));const s={x:r,segmentIds:a},i={numSegments:n};return bs.runKernel(jr,s,i)}}),hd=Fs({unstack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=_s(e,"x","unstack","string_or_numeric");ee(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},a={axis:t};return bs.runKernel(Hr,r,a)}});function dd(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;return bs.makeVariable(e,t,n,r)}function pd(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=Ei(e,"int32"),a=Ei([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const s=r.indexToLoc(n[t]),i=t*e.length;a.values.set(s,i)}return a.toTensor()}var fd=async function(e){const t=_s(e,"condition","whereAsync","bool"),n=await t.data(),r=pd(t.shape,n);return e!==t&&t.dispose(),r},md=async function(e,t,n){const r=_s(e,"tensor","boolMask"),a=_s(t,"mask","boolMask","bool"),s=null==n?0:n,i=a.rank,o=r.shape;ee(i>0,(()=>"mask cannot be scalar")),te(o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let e=s;e<s+i;e++)u*=o[e];const l=o.slice(0,s).concat([u],o.slice(s+i)),c=Ju(r,l),h=Ju(a,[-1]),d=await fd(h),p=Zh(d,[1]),f=Yl(c,p,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),p.dispose(),c.dispose(),h.dispose(),d.dispose(),f};function gd(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(0===e.rank)return Iu(e);if(1!==e.rank&&null===n)return gd(Ju(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return kc(Iu(e),n);if(t===1/0)return vc(Iu(e),n);if(t===-1/0)return Hc(Iu(e),n);if("euclidean"===t||2===t)return Xh(kc(lh(Iu(e),Fh(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return vc(kc(Iu(e),n[0]),n[1]-1);if(t===1/0)return vc(kc(Iu(e),n[1]),n[0]);if(t===-1/0)return Hc(kc(Iu(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Xh(kc(Xc(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}var yd=Fs({norm_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"euclidean",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=gd(e=_s(e,"x","norm"),t,n);let s=a.shape;if(r){const t=fe(n,e.shape);s=Ec(a.shape,t)}return Ju(a,s)}}),bd=Fs({movingAverage_:function(e,t,n,r){let a=!(arguments.length>4&&void 0!==arguments[4])||arguments[4];const s=_s(e,"v","movingAverage"),i=_s(t,"x","movingAverage"),o=_s(n,"decay","movingAverage");cs(s,i),ee(ie(s.shape,i.shape),(()=>"Shape mismatch in v and x"));const u=Fh(1),l=wc(u,o);let c=ku(wc(i,s),l);if(a){ee(null!=r,(()=>"When using zeroDebias: true, step is required."));const e=_s(r,"step","movingAverage");c=wu(c,wc(u,lh(o,e)))}return xu(s,c)}}),xd=Fs({scatterND_:function(e,t,n){const r=_s(e,"indices","scatterND","int32"),a=_s(t,"updates","scatterND");mo(a,r,n);const s={indices:r,updates:a},i={shape:n};return bs.runKernel(dr,s,i)}});function vd(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);const i=t.size;if(0!==t.rank&&(1!==t.rank||i!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}var wd=Fs({sparseToDense_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;const a=_s(e,"sparseIndices","sparseToDense","int32"),s=_s(t,"sparseValues","sparseToDense"),i=_s(r,"defaultValue","sparseToDense",s.dtype);vd(a,s,n,i);const o={sparseIndices:a,sparseValues:s,defaultValue:i},u={outputShape:n};return bs.runKernel($r,o,u)}}),kd=Fs({gatherND_:function(e,t){const n=_s(t,"indices","gatherND","int32"),r={params:_s(e,"x","gatherND","string_or_numeric"),indices:n};return bs.runKernel(an,r)}}),Id=Fs({dropout_:function(e,t,n,r){const a=_s(e,"x","dropout");if(ee("float32"===a.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`)),ee(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof ja?a.clone():a;const s=function(e,t){if(null==t)return e.shape.slice();if(ie(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),i=1-t,o=wu(Xl(xu(xh(s,0,1,"float32",r),i)),i);return ku(a,o)}});function Sd(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Nd(e,t,n){const r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){const i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return nd(a,"float32")}var Td=async function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;const r=_s(e,"predictions","inTopK"),a=_s(t,"targets","inTopK");ee(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),ee(r.rank-1===a.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`)),te(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=r.shape[r.shape.length-1];ee(n>0&&n<=s,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`));const i=await r.data(),o=await a.data(),[u,l]=[i.length/s,s],c=ge("bool",u);for(let e=0;e<u;e++){const t=e*l,r=i.subarray(t,t+l),a=[];for(let e=0;e<r.length;e++)a.push({value:r[e],index:e});a.sort(((e,t)=>t.value-e.value)),c[e]=0;for(let t=0;t<n;t++)if(a[t].index===o[e]){c[e]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),Ms(c,a.shape,"bool")},Ed={};p(Ed,{conv2d:()=>Rd,depthwiseConv2d:()=>Od,matMul:()=>Ld});var Cd=Fs({conv2DBackpropFilter_:function(e,t,n,r,a){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",i=arguments.length>6?arguments[6]:void 0,o=e;3===e.rank&&(o=Ju(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=Ju(t,[1,t.shape[0],t.shape[1],t.shape[2]])),ee(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),ee(4===u.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`)),ee(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const l="NHWC"===s?o.shape[3]:o.shape[1],c="NHWC"===s?u.shape[3]:u.shape[1];ee(l===n[2],(()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`)),ee(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),Zu("conv2dDerFilter",a,i);const h={x:o,dy:u},d={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,filterShape:n};return bs.runKernel(St,h,d)}});function _d(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return ku(e,Qh(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function $d(e,t){let n=t;const r=eo(e.shape,t.shape);return r.length>0&&(n=kc(n,r)),Ju(n,e.shape)}function Ad(e,t,n,r){if("linear"===t)return e;if("relu"===t)return Ih(e);if("elu"===t)return Wl(e);if("relu6"===t)return Sh(e);if("prelu"===t)return ch(e,n);if("leakyrelu"===t)return rc(e,r);if("sigmoid"===t)return nl(e);throw new Error(`Unknown fused activation ${t}.`)}var Fd=(e,t)=>!(e>0)||"linear"===t,Rd=Fs({fusedConv2d_:function(e){let{x:t,filter:n,strides:r,pad:a,dataFormat:s="NHWC",dilations:i=[1,1],dimRoundingMode:o,bias:u,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:h}=e;if(l=l||"linear",!1===Fd(bs.state.gradientDepth,l)){let e=vl(t,n,r,a,s,i,o);return null!=u&&(e=xu(e,u)),Ad(e,l,c,h)}const d=_s(t,"x","conv2d","float32"),p=_s(n,"filter","conv2d","float32");let f=d,m=!1;3===d.rank&&(m=!0,f=Ju(d,[1,d.shape[0],d.shape[1],d.shape[2]])),ee(4===f.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`)),ee(4===p.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`)),Zu("fused conv2d",a,o),ee(f.shape[3]===p.shape[2],(()=>`Error in conv2d: depth of input (${f.shape[3]}) must match input depth for filter ${p.shape[2]}.`)),ee(Xu(r,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${r} and dilations '${i}'`)),ee("NHWC"===s,(()=>`Error in conv2d: got dataFormat of ${s} but only NHWC is currently supported.`));const g=Pu(f.shape,p.shape,r,i,a,o);let y,b;null!=u&&(y=_s(u,"bias","fused conv2d"),[y]=ls(y,d),to(g.outShape,y.shape)),null!=c&&(b=_s(c,"prelu weights","fused conv2d"));const x=(e,t)=>{const[n,s,o,u]=t,c=_d(e,o,l);ee(Ku(i),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`));const h=[kl(s.shape,c,n,r,a),Cd(s,c,n.shape,r,a)];if(null!=u){const e=$d(u,c);h.push(e)}return h},v={x:f,filter:p,bias:y,preluActivationWeights:b},w={strides:r,pad:a,dataFormat:s,dilations:i,dimRoundingMode:o,activation:l,leakyreluAlpha:h};return null==u?mc(((e,t,n)=>{let r=bs.runKernel(Jr,v,w);return n([t,e,r]),m&&(r=Ju(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}))(f,p):mc(((e,t,n,r)=>{let a=bs.runKernel(Jr,v,w);return r([t,e,a,n]),m&&(a=Ju(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}}))(f,p,y)}}),Dd=Fs({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,a){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],i=arguments.length>6?arguments[6]:void 0,o=e;3===e.rank&&(o=Ju(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=Ju(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={x:o,dy:u},c={strides:r,pad:a,dimRoundingMode:i,dilations:s,filterShape:n};return bs.runKernel(Ot,l,c)}}),Md=Fs({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,a){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],i=arguments.length>6?arguments[6]:void 0,o=t,u=!1;3===t.rank&&(u=!0,o=Ju(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={dy:o,filter:n},c={strides:r,pad:a,dimRoundingMode:i,dilations:s,inputShape:e},h=bs.runKernel(Lt,l,c);return u?Ju(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),Od=Fs({fusedDepthwiseConv2d_:function(e){let{x:t,filter:n,strides:r,pad:a,dataFormat:s="NHWC",dilations:i=[1,1],dimRoundingMode:o,bias:u,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:h}=e;if(!1===Fd(bs.state.gradientDepth,l)){let e=Fl(t,n,r,a,s,i,o);return null!=u&&(e=xu(e,u)),Ad(e,l,c,h)}const d=_s(t,"x","depthwiseConv2d","float32"),p=_s(n,"filter","depthwiseConv2d","float32");let f=d,m=!1;3===d.rank&&(m=!0,f=Ju(d,[1,d.shape[0],d.shape[1],d.shape[2]])),ee(4===f.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`)),ee(4===p.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`)),ee(f.shape[3]===p.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`)),null==i&&(i=[1,1]),ee(Xu(r,i),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${r} and dilations '${i}'`)),Zu("fused depthwiseConv2d",a,o);const g=Pu(f.shape,p.shape,r,i,a,o,!0);let y,b;null!=u&&(y=_s(u,"bias","fused conv2d"),[y]=ls(y,d),to(g.outShape,y.shape)),null!=c&&(b=_s(c,"prelu weights","fused depthwiseConv2d"));const x=(e,t)=>{ee(Ku(i),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`));const[n,s,u,c]=t,h=_d(e,u,l),d=Md(s.shape,h,n,r,a,i,o),p=Dd(s,h,n.shape,r,a,i,o);return null!=c?[d,p,$d(y,h)]:[d,p]},v={x:f,filter:p,bias:y,preluActivationWeights:b},w={strides:r,pad:a,dataFormat:s,dilations:i,dimRoundingMode:o,activation:l,leakyreluAlpha:h};return null==u?mc(((e,t,n)=>{let r=bs.runKernel(Qr,v,w);return n([t,e,r]),m&&(r=Ju(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}))(f,p):mc(((e,t,n,r)=>{let a=bs.runKernel(Qr,v,w);return r([t,e,a,n]),m&&(a=Ju(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}}))(f,p,y)}}),Ld=Fs({fusedMatMul_:function(e){let{a:t,b:n,transposeA:r=!1,transposeB:a=!1,bias:s,activation:i="linear",preluActivationWeights:o,leakyreluAlpha:u}=e;if(!1===Fd(bs.state.gradientDepth,i)){let e=Ki(t,n,r,a);return null!=s&&(e=xu(e,s)),Ad(e,i,o,u)}let l=_s(t,"a","fused matMul"),c=_s(n,"b","fused matMul");[l,c]=ls(l,c);const h=r?l.shape[l.rank-2]:l.shape[l.rank-1],d=a?c.shape[c.rank-1]:c.shape[c.rank-2],p=r?l.shape[l.rank-1]:l.shape[l.rank-2],f=a?c.shape[c.rank-2]:c.shape[c.rank-1],m=l.shape.slice(0,-2),g=c.shape.slice(0,-2),y=ae(m),b=ae(g);ee(h===d,(()=>`Error in fused matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${l.shape} and ${c.shape} and transposeA=${r} and transposeB=${a} must match.`));const x=to(l.shape.slice(0,-2),c.shape.slice(0,-2)).concat([p,f]),v=Ju(l,r?[y,h,p]:[y,p,h]),w=Ju(c,a?[b,f,d]:[b,d,f]);let k,I;null!=s&&(k=_s(s,"bias","fused matMul"),[k]=ls(k,l),to(x,k.shape)),null!=o&&(I=_s(o,"prelu weights","fused matMul"));const S=(e,t)=>{const[n,o,u,l]=t,c=_d(Ju(e,u.shape),u,i);let h,d;return r||a?!r&&a?(h=Ki(c,o,!1,!1),d=Ki(c,n,!0,!1)):r&&!a?(h=Ki(o,c,!1,!0),d=Ki(n,c,!1,!1)):(h=Ki(o,c,!0,!0),d=Ki(c,n,!0,!0)):(h=Ki(c,o,!1,!0),d=Ki(n,c,!0,!1)),null!=s?[h,d,$d(l,c)]:[h,d]},N={a:v,b:w,bias:k,preluActivationWeights:I},T={transposeA:r,transposeB:a,activation:i,leakyreluAlpha:u};return null==s?mc(((e,t,n)=>{const r=bs.runKernel(Zr,N,T);return n([e,t,r]),{value:Ju(r,x),gradFunc:S}}))(v,w):mc(((e,t,n,r)=>{const a=bs.runKernel(Zr,N,T);return r([e,t,a,n]),{value:Ju(a,x),gradFunc:S}}))(v,w,k)}}),zd=Fs({hammingWindow_:function(e){return Nd(e,.54,.46)}}),Pd=Fs({hannWindow_:function(e){return Nd(e,.5,.5)}}),Bd=Fs({frame_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=0;const i=[];for(;s+t<=e.size;)i.push(rl(e,s,t)),s+=n;if(r)for(;s<e.size;){const r=s+t-e.size,o=tl([rl(e,s,t-r),Kl([r],a)]);i.push(o),s+=n}return 0===i.length?rd([],[0,t]):Ju(tl(i),[i.length,t])}}),Wd=Fs({stft_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Pd;null==r&&(r=Sd(t));const s=Bd(e,t,n),i=ku(s,a(t));return Kh(i,r)}}),Vd=Fs({cropAndResize_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"bilinear",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const i=_s(e,"image","cropAndResize"),o=_s(t,"boxes","cropAndResize","float32"),u=_s(n,"boxInd","cropAndResize","int32"),l=o.shape[0];ee(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),ee(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${o.shape}.`)),ee(1===u.rank&&u.shape[0]===l,(()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${o.shape}.`)),ee(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),ee(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),ee("bilinear"===a||"nearest"===a,(()=>`method must be bilinear or nearest, but was ${a}`));const c={image:i,boxes:o,boxInd:u},h={method:a,extrapolationValue:s,cropSize:r},d=bs.runKernel(Ft,c,h);return d}}),Ud=Fs({flipLeftRight_:function(e){const t=_s(e,"image","flipLeftRight","float32");ee(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return bs.runKernel(Qt,n,{})}}),Gd=Fs({grayscaleToRGB_:function(e){const t=_s(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];ee(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),ee(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,jl(t,a)}}),Hd=Fs({rotateWithOffset_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const a=_s(e,"image","rotateWithOffset","float32");ee(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));const s={image:a},i={radians:t,fillValue:n,center:r},o=bs.runKernel(Yr,s,i);return o}});function jd(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);const i=e.shape[0];return n=Math.min(n,i),ee(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),ee(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),ee(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),ee(1===t.rank,(()=>"scores must be a 1D tensor")),ee(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),ee(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}var qd=Fs({nonMaxSuppression_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const s=_s(e,"boxes","nonMaxSuppression","float32"),i=_s(t,"scores","nonMaxSuppression","float32"),o=jd(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;const u={maxOutputSize:n,iouThreshold:r,scoreThreshold:a};return bs.runKernel(Vn,{boxes:s,scores:i},u)}});function Kd(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);const o=n(t,e[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}(e,t,n||Xd)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function Xd(e,t){return e>t?1:e<t?-1:0}function Yd(e,t,n,r,a){return Qd(e,t,n,r,a,0)}function Zd(e,t,n,r,a,s){return Qd(e,t,n,r,a,0,!1,s,!0)}function Jd(e,t,n,r,a,s){return Qd(e,t,n,r,a,s,!0)}function Qd(e,t,n,r,a,s){let i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7&&void 0!==arguments[7]&&arguments[7],u=arguments.length>8&&void 0!==arguments[8]&&arguments[8];const l=[];for(let e=0;e<t.length;e++)t[e]>a&&l.push({score:t[e],boxIndex:e,suppressBeginIndex:0});l.sort(np);const c=s>0?-.5/s:0,h=[],d=[];for(;h.length<n&&l.length>0;){const t=l.pop(),{score:n,boxIndex:s,suppressBeginIndex:i}=t;if(n<a)break;let o=!1;for(let n=h.length-1;n>=i;--n){const i=ep(e,s,h[n]);if(i>=r){o=!0;break}if(t.score=t.score*tp(r,c,i),t.score<=a)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(s),d.push(t.score)):t.score>a&&Kd(l,t,np))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return i&&(m.selectedScores=d),u&&(m.validOutputs=p),m}function ep(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(a[0],a[2]),c=Math.min(a[1],a[3]),h=Math.max(a[0],a[2]),d=Math.max(a[1],a[3]),p=(o-s)*(u-i),f=(h-l)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(s,l),g=Math.max(i,c),y=Math.min(o,h),b=Math.min(u,d),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(p+f-x)}function tp(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function np(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}var rp=Fs({nonMaxSuppressionWithScore_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const i=_s(e,"boxes","nonMaxSuppression"),o=_s(t,"scores","nonMaxSuppression"),u=jd(i,o,n,r,a,s);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,s=u.softNmsSigma;const l={boxes:i,scores:o},c={maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s},h=bs.runKernel(Gn,l,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),ap=Fs({nonMaxSuppressionPadded_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const i=_s(e,"boxes","nonMaxSuppression"),o=_s(t,"scores","nonMaxSuppression"),u=jd(i,o,n,r,a,null),l=u.maxOutputSize,c=u.iouThreshold,h=u.scoreThreshold,d={boxes:i,scores:o},p={maxOutputSize:l,iouThreshold:c,scoreThreshold:h,padToMaxOutputSize:s},f=bs.runKernel(Un,d,p);return{selectedIndices:f[0],validOutputs:f[1]}}}),sp=Fs({resizeBilinear_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=_s(e,"images","resizeBilinear");ee(3===a.rank||4===a.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`)),ee(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),ee(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let s=a,i=!1;3===a.rank&&(i=!0,s=Ju(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,o={images:s},u={alignCorners:n,halfPixelCenters:r,size:t},l=bs.runKernel(ir,o,u);return i?Ju(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),ip=Fs({resizeNearestNeighbor_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=_s(e,"images","resizeNearestNeighbor");ee(3===a.rank||4===a.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`)),ee(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),ee("float32"===a.dtype||"int32"===a.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),ee(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let s=a,i=!1;3===a.rank&&(i=!0,s=Ju(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,o={images:s},u={alignCorners:n,halfPixelCenters:r,size:t},l=bs.runKernel(ar,o,u);return i?Ju(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});function op(e,t){let n,r,a,s,i,o,u=nd([-1]),l=nd([0]),c=nd([0]);for(let h=0;h<e.size-1;h++){n=rl(e,0,h+1),r=rl(e,h+1),i=wu(kc(n),t),o=wu(kc(r),t);const d=kc(ku(n,vh(0,n.size)));a=wu(d,kc(n));const p=Kl(r.shape,n.size),f=xu(vh(0,r.size),p),m=ku(r,f);s=wu(kc(m),kc(r));const g=wc(a,s),y=wc(a,s),b=ku(i,o);c=ku(ku(b,g),y);const x=Zl(c,l);l=Ol(x,c,l),u=Ol(x,nd([h]),u)}return u}var up=Fs({threshold_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"binary",n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const a=_s(e,"image","threshold"),s=.2989,i=.587,o=.114,u=a.shape[0]*a.shape[1];let l,c,h,d,p=ku(nd([r]),255);if(ee(3===a.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`)),ee(3===a.shape[2]||1===a.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`)),ee("int32"===a.dtype||"float32"===a.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`)),ee("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===a.shape[2]){[l,c,h]=qh(a,[1,1,1],-1);const e=ku(l,s),t=ku(c,i),n=ku(h,o);d=xu(xu(e,t),n)}else d=e;"otsu"===t&&(p=op(hl(Ci($h(d),"int32"),Ms([]),256),u));const f=n?sc(d,p):Zl(d,p),m=Ci(ku(f,255),"int32");return m}}),lp=Fs({transform_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"nearest",r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"constant",a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=arguments.length>5?arguments[5]:void 0;const i=_s(e,"image","transform","float32"),o=_s(t,"transforms","transform","float32");ee(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),ee(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),ee(null==s||2===s.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`));const u={image:i,transforms:o},l={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return bs.runKernel(Vr,u,l)}}),cp=Fs({bandPart_:function(e,t,n){ee(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),ee(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=_s(e,"a","bandPart");ee(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const a=r.shape,[s,i]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=s),n<0&&(n=i);const o=Ju(vh(0,s,1,"int32"),[-1,1]),u=vh(0,i,1,"int32"),l=wc(o,u),c=Rc(sc(l,Fh(+t,"int32")),Jl(l,Fh(-n,"int32"))),h=Vc([s,i],r.dtype);return Ju(Jh(hd(Ju(r,[-1,s,i])).map((e=>Ol(c,e,h)))),a)}}),hp=Fs({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,ee(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)ee(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=qh(e,e.shape[0],0).map((e=>Zh(e,[0])));ee(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(bs.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=ku(kc(ku(n[r],e)),n[r]);e=wc(e,t)}return wu(e,yd(e,"euclidean"))})));return t?Jh(n,0):n}});function dp(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return bs.tidy((()=>{ee(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let a=ql(n),s=_i(e);const i=rd([[1]],[1,1]);let o=_i(i);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=s,u=o,l=a;[o,s,a]=bs.tidy((()=>{const t=rl(s,[e,e],[n-e,1]),u=yd(t),l=rl(s,[e,e],[1,1]),c=Ol(Zl(l,0),rd([[-1]]),rd([[1]])),h=wc(l,ku(c,u)),d=wu(t,h);o=1===d.shape[0]?_i(i):tl([i,rl(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=yc(wu(Ki(c,h),u)),f=rl(s,[e,0],[n-e,r]),m=ku(p,o),g=Yi(o);if(0===e)s=wc(f,Ki(m,Ki(g,f)));else{const t=wc(f,Ki(m,Ki(g,f)));s=tl([rl(s,[0,0],[e,r]),t],0)}const y=Yi(m),b=rl(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=wc(b,Ki(Ki(b,o),y));else{const t=wc(b,Ki(Ki(b,o),y));a=tl([rl(a,[0,0],[n,e]),t],1)}return[o,s,a]})),ou([t,u,l])}return!t&&n>r&&(a=rl(a,[0,0],[n,r]),s=rl(s,[0,0],[r,r])),[a,s]}))}var pp,fp,mp=Fs({qr_:function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(ee(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return dp(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=hd(Ju(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];return r.forEach((e=>{const[n,r]=dp(e,t);a.push(n),s.push(r)})),[Ju(Jh(a,0),e.shape),Ju(Jh(s,0),e.shape)]}}});(fp=pp||(pp={}))[fp.NONE=0]="NONE",fp[fp.MEAN=1]="MEAN",fp[fp.SUM=2]="SUM",fp[fp.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS";var gp=Fs({computeWeightedLoss_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:pp.SUM_BY_NONZERO_WEIGHTS;const r=_s(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=_s(t,"weights","computeWeightedLoss"));const s=null==a?r:ku(r,a);if(n===pp.NONE)return s;if(n===pp.SUM)return kc(s);if(n===pp.MEAN){if(null==a)return Wc(s);{const e=r.size/a.size,t=wu(kc(s),kc(a));return e>1?wu(t,Fh(e)):t}}if(n===pp.SUM_BY_NONZERO_WEIGHTS){if(null==a)return wu(kc(s),Fh(r.size));{const e=ku(a,Uc(r.shape)),t=Ci(kc(Qc(e,Fh(0))),"float32");return wu(kc(s),t)}}throw Error(`Unknown reduction: ${n}`)}}),yp=Fs({absoluteDifference_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:pp.SUM_BY_NONZERO_WEIGHTS;const a=_s(e,"labels","absoluteDifference"),s=_s(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=_s(n,"weights","absoluteDifference")),te(a.shape,s.shape,"Error in absoluteDifference: ");const o=Iu(wc(a,s));return gp(o,i,r)}}),bp=Fs({cosineDistance_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:pp.SUM_BY_NONZERO_WEIGHTS;const s=_s(e,"labels","cosineDistance"),i=_s(t,"predictions","cosineDistance");let o=null;null!=r&&(o=_s(r,"weights","cosineDistance")),te(s.shape,i.shape,"Error in cosineDistance: ");const u=Fh(1),l=wc(u,kc(ku(s,i),n,!0));return gp(l,o,a)}}),xp=Fs({hingeLoss_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:pp.SUM_BY_NONZERO_WEIGHTS,a=_s(e,"labels","hingeLoss");const s=_s(t,"predictions","hingeLoss");let i=null;null!=n&&(i=_s(n,"weights","hingeLoss")),te(a.shape,s.shape,"Error in hingeLoss: ");const o=Fh(1);a=wc(ku(Fh(2),a),o);const u=Ih(wc(o,ku(a,s)));return gp(u,i,r)}}),vp=Fs({huberLoss_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:pp.SUM_BY_NONZERO_WEIGHTS;const s=_s(e,"labels","huberLoss"),i=_s(t,"predictions","huberLoss");let o=null;null!=n&&(o=_s(n,"weights","huberLoss")),te(s.shape,i.shape,"Error in huberLoss: ");const u=Fh(r),l=Iu(wc(i,s)),c=jc(l,u),h=wc(l,c),d=xu(ku(Fh(.5),Xc(c)),ku(u,h));return gp(d,o,a)}}),wp=Fs({logLoss_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1e-7,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:pp.SUM_BY_NONZERO_WEIGHTS;const s=_s(e,"labels","logLoss"),i=_s(t,"predictions","logLoss");let o=null;null!=n&&(o=_s(n,"weights","logLoss")),te(s.shape,i.shape,"Error in logLoss: ");const u=Fh(1),l=Fh(r),c=yc(ku(s,uc(xu(i,l)))),h=ku(wc(u,s),uc(xu(wc(u,i),l))),d=wc(c,h);return gp(d,o,a)}}),kp=Fs({meanSquaredError_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:pp.SUM_BY_NONZERO_WEIGHTS;const a=_s(e,"labels","meanSquaredError"),s=_s(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=_s(n,"weights","meanSquaredError")),te(a.shape,s.shape,"Error in meanSquaredError: ");const o=Yh(a,s);return gp(o,i,r)}});function Ip(e,t){const n=_s(e,"labels","sigmoidCrossEntropyWithLogits"),r=_s(t,"logits","sigmoidCrossEntropyWithLogits");te(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const a=Ih(r),s=ku(r,n),i=lc(Ul(yc(Iu(r))));return xu(wc(a,s),i)}var Sp=Fs({sigmoidCrossEntropy_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:pp.SUM_BY_NONZERO_WEIGHTS,s=_s(e,"multiClassLabels","sigmoidCrossEntropy");const i=_s(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=_s(n,"weights","sigmoidCrossEntropy")),te(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=Fh(r),t=Fh(1),n=Fh(.5);s=xu(ku(s,wc(t,e)),ku(n,e))}const u=Ip(s,i);return gp(u,o,a)}});function Np(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=mc(((e,t,r)=>{const a=Fc(t,[n],!0),s=wc(Ci(t,"float32"),a);r([e,s]);const i=yc(ku(s,e));return{value:kc(i,[n]),gradFunc:(e,t)=>{const[r,a]=t,s=Ec(e.shape,[n]);return[ku(Ju(e,s),wc(Ci(r,"float32"),Ul(a))),ku(Ju(e,s),wc(Ul(a),Ci(r,"float32")))]}}}));return r(e,t)}var Tp=Fs({softmaxCrossEntropy_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:pp.SUM_BY_NONZERO_WEIGHTS,s=_s(e,"onehotLabels","softmaxCrossEntropy");const i=_s(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=_s(n,"weights","softmaxCrossEntropy")),te(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=Fh(r),t=Fh(1),n=Fh(s.shape[1]);s=xu(ku(s,wc(t,e)),wu(e,n))}const u=Np(s,i);return gp(u,o,a)}}),Ep=Fs({sparseFillEmptyRows_:function(e,t,n,r){const a=_s(e,"indices","sparseFillEmptyRows","int32"),s=_s(t,"values","sparseFillEmptyRows"),i=_s(n,"denseShape","sparseFillEmptyRows","int32"),o=_s(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==a.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==s.rank)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const u={indices:a,values:s,denseShape:i,defaultValue:o},l=bs.runKernel(Tr,u);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}}),Cp=Fs({sparseReshape_:function(e,t,n){const r=_s(e,"inputIndices","sparseReshape","int32"),a=_s(t,"inputShape","sparseReshape","int32"),s=_s(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==s.rank)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);const i={inputIndices:r,inputShape:a,newShape:s},o=bs.runKernel(Er,i);return{outputIndices:o[0],outputShape:o[1]}}}),_p=Fs({sparseSegmentMean_:function(e,t,n){const r=_s(e,"data","sparseSegmentMean"),a=_s(t,"indices","sparseSegmentMean","int32"),s=_s(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${s.shape}`);const i={data:r,indices:a,segmentIds:s};return bs.runKernel(Cr,i)}}),$p=Fs({sparseSegmentSum_:function(e,t,n){const r=_s(e,"data","sparseSegmentSum"),a=_s(t,"indices","sparseSegmentSum","int32"),s=_s(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${s.shape}`);const i={data:r,indices:a,segmentIds:s};return bs.runKernel(_r,i)}}),Ap=Fs({stringNGrams_:function(e,t,n,r,a,s,i,o){const u=_s(e,"data","stringNGrams","string");if("string"!==u.dtype)throw new Error("Data must be of datatype string");if(1!==u.shape.length)throw new Error(`Data must be a vector, saw: ${u.shape}`);const l=_s(t,"dataSplits","stringNGrams");if("int32"!==l.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:i,preserveShortSequences:o},h={data:u,dataSplits:l},d=bs.runKernel(Dr,h,c);return{nGrams:d[0],nGramsSplits:d[1]}}}),Fp=Fs({stringSplit_:function(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const r=_s(e,"input","stringSplit","string"),a=_s(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==a.rank)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);const s={skipEmpty:n},i={input:r,delimiter:a},o=bs.runKernel(Mr,i,s);return{indices:o[0],values:o[1],shape:o[2]}}}),Rp=Fs({stringToHashBucketFast_:function(e,t){const n=_s(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const a={input:n};return bs.runKernel(Or,a,r)}}),Dp={fft:Gh,ifft:Hh,rfft:Kh,irfft:jh},Mp={hammingWindow:zd,hannWindow:Pd,frame:Bd,stft:Wd},Op={flipLeftRight:Ud,grayscaleToRGB:Gd,resizeNearestNeighbor:ip,resizeBilinear:sp,rotateWithOffset:Hd,cropAndResize:Vd,nonMaxSuppression:qd,nonMaxSuppressionAsync:async function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const s=_s(e,"boxes","nonMaxSuppressionAsync"),i=_s(t,"scores","nonMaxSuppressionAsync"),o=jd(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;const u=await Promise.all([s.data(),i.data()]),l=u[0],c=u[1],{selectedIndices:h}=Yd(l,c,n,r,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),nd(h,"int32")},nonMaxSuppressionWithScore:rp,nonMaxSuppressionWithScoreAsync:async function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const i=_s(e,"boxes","nonMaxSuppressionAsync"),o=_s(t,"scores","nonMaxSuppressionAsync"),u=jd(i,o,n,r,a,s);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,s=u.softNmsSigma;const l=await Promise.all([i.data(),o.data()]),c=l[0],h=l[1],{selectedIndices:d,selectedScores:p}=Jd(c,h,n,r,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:nd(d,"int32"),selectedScores:nd(p)}},nonMaxSuppressionPadded:ap,nonMaxSuppressionPaddedAsync:async function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const i=_s(e,"boxes","nonMaxSuppressionAsync"),o=_s(t,"scores","nonMaxSuppressionAsync"),u=jd(i,o,n,r,a,null),l=u.maxOutputSize,c=u.iouThreshold,h=u.scoreThreshold,[d,p]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=Zd(d,p,l,c,h,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:nd(f,"int32"),validOutputs:Fh(m,"int32")}},threshold:up,transform:lp},Lp={bandPart:cp,gramSchmidt:hp,qr:mp},zp={absoluteDifference:yp,computeWeightedLoss:gp,cosineDistance:bp,hingeLoss:xp,huberLoss:vp,logLoss:wp,meanSquaredError:kp,sigmoidCrossEntropy:Sp,softmaxCrossEntropy:Tp},Pp={sparseFillEmptyRows:Ep,sparseReshape:Cp,sparseSegmentMean:_p,sparseSegmentSum:$p},Bp={stringNGrams:Ap,stringSplit:Fp,stringToHashBucketFast:Rp},Wp=class extends Oo{minimize(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2?arguments[2]:void 0;const{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:a[e.name]})));this.applyGradients(e)}else this.applyGradients(a);return ou(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return fc(e,t)}dispose(){null!=this.iterations_&&ou(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Fh(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(Wp,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});var Vp=class extends Wp{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=bs.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=bs.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:iu((()=>Ll(r).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:iu((()=>Ll(r).variable(!1)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;iu((()=>{const e=xu(ku(s,this.rho),ku(Xc(a),1-this.rho)),t=ku(wu(Xh(xu(i,this.epsilon)),Xh(xu(s,this.epsilon))),a),n=xu(ku(i,this.rho),ku(Xc(t),1-this.rho));s.assign(e),i.assign(n);const o=xu(ku(t,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(ou(this.accumulatedGrads.map((e=>e.variable))),ou(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};Vp.className="Adadelta",zo(Vp);var Up=class extends Wp{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1;super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=bs.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:iu((()=>Kl(r.shape,this.initialAccumulatorValue).variable(e)))}}const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable;iu((()=>{const e=xu(s,Xc(a));s.assign(e);const t=xu(ku(wu(a,Xh(xu(e,bs.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&ou(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};Up.className="Adagrad",zo(Up);var Gp=class extends Wp{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],iu((()=>{this.accBeta1=Fh(t).variable(),this.accBeta2=Fh(n).variable()})),null==r&&(this.epsilon=bs.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);iu((()=>{const n=wc(1,this.accBeta1),r=wc(1,this.accBeta2);t.forEach(((t,a)=>{const s=bs.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:iu((()=>Ll(s).variable(!1)))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:iu((()=>Ll(s).variable(!1)))});const i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,l=xu(ku(o,this.beta1),ku(i,1-this.beta1)),c=xu(ku(u,this.beta2),ku(Xc(i),1-this.beta2)),h=wu(l,n),d=wu(c,r);o.assign(l),u.assign(c);const p=xu(ku(wu(h,xu(Xh(d),this.epsilon)),-this.learningRate),s);s.assign(p)})),this.accBeta1.assign(ku(this.accBeta1,this.beta1)),this.accBeta2.assign(ku(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&ou(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&ou(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),iu((()=>{this.accBeta1.assign(lh(this.beta1,this.iterations_+1)),this.accBeta2.assign(lh(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};Gp.className="Adam",zo(Gp);var Hp=class extends Wp{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],iu((()=>{this.iteration=Fh(0).variable(),this.accBeta1=Fh(t).variable()})),null==r&&(this.epsilon=bs.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);iu((()=>{const n=wc(1,this.accBeta1),r=wu(-this.learningRate,xu(ku(this.iteration,this.decay),1));t.forEach(((t,a)=>{const s=bs.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:Ll(s).variable(!1)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:Ll(s).variable(!1)});const i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,l=xu(ku(o,this.beta1),ku(i,1-this.beta1)),c=ku(u,this.beta2),h=Iu(i),d=Bc(c,h);o.assign(l),u.assign(d);const p=xu(ku(wu(r,n),wu(l,xu(d,this.epsilon))),s);s.assign(p)})),this.iteration.assign(xu(this.iteration,1)),this.accBeta1.assign(ku(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&ou(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&ou(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};Hp.className="Adamax",zo(Hp);var jp=class extends Wp{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=bs.registeredVariables[t];iu((()=>{const e=xu(ku(this.c,r),a);a.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=uu(Fh(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};jp.className="SGD",zo(jp);var qp=class extends jp{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Fh(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=bs.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:iu((()=>Ll(r).variable(e)))}}const a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&iu((()=>{let e;const t=xu(ku(this.m,a),s);e=this.useNesterov?xu(ku(this.c,xu(s,ku(t,this.m))),r):xu(ku(this.c,t),r),a.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&ou(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};qp.className="Momentum",zo(qp);var Kp=class extends Wp{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=bs.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=bs.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:iu((()=>Ll(r).variable(a)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:iu((()=>Ll(r).variable(a)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:iu((()=>Ll(r).variable(a)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;iu((()=>{const e=xu(ku(i,this.decay),ku(Xc(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,a=xu(ku(t,this.decay),ku(s,1-this.decay)),u=wu(ku(s,this.learningRate),Xh(wc(e,xu(Xc(a),this.epsilon)))),l=xu(ku(o,this.momentum),u);i.assign(e),t.assign(a),o.assign(l);const c=wc(r,l);r.assign(c)}else{const e=xu(ku(i,this.decay),ku(Xc(s),1-this.decay)),t=xu(ku(o,this.momentum),wu(ku(s,this.learningRate),Xh(xu(e,this.epsilon))));i.assign(e),o.assign(t);const n=wc(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&ou(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&ou(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&ou(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};Kp.className="RMSProp",zo(Kp);var Xp=class{static sgd(e){return new jp(e)}static momentum(e,t){return new qp(e,t,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}static rmsprop(e){return new Kp(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]&&arguments[4])}static adam(){return new Gp(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null)}static adadelta(){return new Vp(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.95,arguments.length>2&&void 0!==arguments[2]?arguments[2]:null)}static adamax(){return new Hp(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.002,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]?arguments[4]:0)}static adagrad(e){return new Up(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1)}},Yp={sgd:Xp.sgd,momentum:Xp.momentum,adadelta:Xp.adadelta,adagrad:Xp.adagrad,rmsprop:Xp.rmsprop,adamax:Xp.adamax,adam:Xp.adam},Zp="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function Jp(){return new Promise((e=>Zp((()=>e()))))}var Qp={};function ef(e,t){const n=e[0].length;e.forEach(((e,t)=>{ee(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),ee(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,a)=>{for(let s=0;s<n;s++)ee(s===t||e[s]===r[s],(()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`))}))}function tf(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}p(Qp,{ERF_A1:()=>ff,ERF_A2:()=>mf,ERF_A3:()=>gf,ERF_A4:()=>yf,ERF_A5:()=>bf,ERF_P:()=>pf,PARALLELIZE_THRESHOLD:()=>nf,SELU_SCALE:()=>df,SELU_SCALEALPHA:()=>hf,applyActivation:()=>Ad,assertAndGetBroadcastShape:()=>to,assertAxesAreInnerMostDims:()=>Cc,assertParamsConsistent:()=>ef,assignToTypedArray:()=>Sf,axesAreInnerMostDims:()=>Sc,calculateShapes:()=>go,checkEinsumDimSizes:()=>$f,checkPadOnDimRoundingMode:()=>Zu,combineLocations:()=>Nc,complexWithEvenIndex:()=>wf,complexWithOddIndex:()=>kf,computeConv2DInfo:()=>Pu,computeConv3DInfo:()=>Bu,computeDefaultPad:()=>Wu,computeDilation2DInfo:()=>Ou,computeOptimalWindowSize:()=>rf,computeOutAndReduceShapes:()=>Tc,computeOutShape:()=>tf,computePool2DInfo:()=>Lu,computePool3DInfo:()=>zu,convertConv2DDataFormat:()=>Yu,decodeEinsumEquation:()=>Cf,eitherStridesOrDilationsAreOne:()=>Xu,expandShapeToKeepDim:()=>Ec,exponent:()=>Tf,exponents:()=>Nf,fromStringArrayToUint8:()=>Jf,fromUint8ToStringArray:()=>Zf,getAxesPermutation:()=>_c,getBroadcastDims:()=>Qi,getComplexWithIndex:()=>If,getEinsumComputePath:()=>Af,getEinsumPermutation:()=>_f,getFusedBiasGradient:()=>$d,getFusedDyActivation:()=>_d,getImageCenter:()=>af,getInnerMostAxes:()=>Ac,getPermuted:()=>of,getReductionAxes:()=>eo,getReshaped:()=>sf,getReshapedPermuted:()=>uf,getSliceBeginCoords:()=>lf,getSliceSize:()=>cf,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>Mf,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>Of,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>Lf,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>Bf,getSparseReshapeInputOutputMismatchErrorMessage:()=>Vf,getSparseReshapeInputOutputMultipleErrorMessage:()=>Wf,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>zf,getSparseReshapeNegativeOutputDimErrorMessage:()=>Pf,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>jf,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>Uf,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>Gf,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>Hf,getUndoAxesPermutation:()=>$c,isIdentityPermutation:()=>Ff,log:()=>ta,mergeRealAndImagArrays:()=>xf,prepareAndValidate:()=>ho,prepareSplitSize:()=>Df,segment_util:()=>qf,shouldFuse:()=>Fd,slice_util:()=>yo,splitRealAndImagArrays:()=>vf,tupleValuesAreOne:()=>Ku,upcastType:()=>os,validateInput:()=>mo,validateUpdateShape:()=>fo,warn:()=>ea});var nf=30;function rf(e){return e<=nf?e:_e(e,Math.floor(Math.sqrt(e)))}function af(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function sf(e,t,n){let r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function of(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function uf(e,t,n){let r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function lf(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function cf(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}var hf=1.7580993408473768,df=1.0507009873554805,pf=.3275911,ff=.254829592,mf=-.284496736,gf=1.421413741,yf=-1.453152027,bf=1.061405429;function xf(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function vf(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function wf(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function kf(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function If(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Sf(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function Nf(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){const s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function Tf(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}var Ef=/->/g;function Cf(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(Ef,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,a]=e.split("->");ee(-1===r.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const s=r.split(","),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<a.length;++e){const t=a[e];if(!s.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===o.indexOf(t)&&","!==t&&o.push(t)}const u=new Array(s.length);for(let e=0;e<i;++e){if(new Set(s[e].split("")).size!==s[e].length)throw new Error(`Found duplicate axes in input component ${s[e]}. Support for duplicate axes in input is not implemented yet.`);u[e]=[];for(let t=0;t<s[e].length;++t)u[e].push(o.indexOf(s[e][t]))}const l=o.length,c=[];for(let e=a.length;e<l;++e)c.push(e);return{allDims:o,summedDims:c,idDims:u}}function _f(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function $f(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const a=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=a[n]:ee(r[t[e][n]]===a[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(a)}, but got dimension ${a[n]}`))}}function Af(e,t){const n=e,r=[];let a=0;0===e.length&&n.push(-1),a=e.length+1;for(let e=0;e<a;++e)r.push([]);const s=[];for(let e=0;e<n.length;++e){const a=Rf(t,n[e]);for(const t of a)-1===s.indexOf(t)&&(r[e].push(t),s.push(t))}return{path:n,steps:r}}function Ff(e){return e.every(((e,t)=>e===t))}function Rf(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function Df(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=[];if("number"==typeof t)ee(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{ee(t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0)<=1,(()=>"There should be only one negative value in split array."));const a=t.indexOf(-1);if(-1!==a){const r=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-r}ee(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function Mf(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function Of(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function Lf(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function zf(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function Pf(e,t){return`size ${e} must be non-negative, not ${t}`}function Bf(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Wf(e,t){return`Input to reshape is a SparseTensor with ${ae(e)}\n  dense values, but the requested shape requires a multiple of ${ae(t)}. inputShape=${e} outputShape= ${t}`}function Vf(e,t){return`Input to reshape is a tensor with ${ae(e)} dense values, but the requested shape has ${ae(t)}. inputShape=${e} outputShape=${t}`}function Uf(){return"segment ids must be >= 0"}function Gf(){return"segment ids are not increasing"}function Hf(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function jf(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}var qf={};function Kf(e,t){let n,r=!1;for(e<=nf?(n=e,r=!0):n=_e(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=_e(e,n+1);return n}function Xf(e,t,n){const r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function Yf(e,t,n,r){const a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let u=1,l=1,c=1;for(let t=0;t<r;++t)o.push(e.shape[t]),u*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),l*=e.shape[t];for(let e=r;e<a;e++)o.push(t.shape[e]);for(let t=n+1;t<s;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:i,outputShape:o}}function Zf(e){try{return e.map((e=>Oa(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Jf(e){return e.map((e=>Ma(e)))}p(qf,{collectGatherOpShapeInfo:()=>Yf,computeOutShape:()=>Xf,segOpComputeOptimalWindowSize:()=>Kf});var Qf={};p(Qf,{nonMaxSuppressionV3Impl:()=>Yd,nonMaxSuppressionV4Impl:()=>Zd,nonMaxSuppressionV5Impl:()=>Jd,whereImpl:()=>pd});var em={kernelName:Ke,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ku(e,Qh(Ci(n,"float32"),-1))}}},tm={kernelName:Xe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Xc(Ci(n,"float32")),r=Xh(wc(Fh(1),t));return yc(wu(e,r))}}}},nm={kernelName:Ye,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Xh(wc(Xc(Ci(n,"float32")),1));return wu(e,t)}}}},rm={kernelName:Ze,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=to(n.shape,r.shape);return{a:()=>{let t=e;const r=eo(n.shape,a);return r.length>0&&(t=kc(t,r)),Ju(t,n.shape)},b:()=>{let t=e;const n=eo(r.shape,a);return n.length>0&&(t=kc(t,n)),Ju(t,r.shape)}}}},am={kernelName:Je,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},sm={kernelName:tt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ll(n)}}},im={kernelName:nt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ll(n)}}},om={kernelName:rt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>wu(e,Xh(wc(Fh(1),Xc(Ci(n,"float32")))))}}},um={kernelName:at,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Xh(xu(Fh(1),Xc(Ci(n,"float32"))));return wu(e,t)}}}},lm={kernelName:ot,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=to(n.shape,r.shape);return{a:()=>{const t=xu(Xc(n),Xc(r));let s=ku(e,wu(r,t));const i=eo(n.shape,a);return i.length>0&&(s=kc(s,i)),Ju(s,n.shape)},b:()=>{const t=xu(Xc(n),Xc(r));let s=yc(ku(e,wu(n,t)));const i=eo(r.shape,a);return i.length>0&&(s=kc(s,i)),Ju(s,r.shape)}}}},cm={kernelName:st,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>wu(e,xu(Xc(Ci(n,"float32")),1))}}},hm={kernelName:it,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>wu(e,wc(Fh(1),Xc(Ci(n,"float32"))))}}},dm=Fs({avgPool3dGrad_:function(e,t,n,r,a,s){const i=_s(e,"dy","avgPool3dGrad"),o=_s(t,"input","avgPool3dGrad");let u=i,l=o,c=!1;4===o.rank&&(c=!0,u=Ju(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),l=Ju(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),ee(5===u.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`)),ee(5===l.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`)),Zu("avgPool3dGrad",a,s);const h={dy:u,input:l},d={filterSize:n,strides:r,pad:a,dimRoundingMode:s},p=bs.runKernel(ht,h,d);return c?Ju(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),pm={kernelName:ct,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>dm(e,r,a,s,i,o)}}},fm=Fs({avgPoolGrad_:function(e,t,n,r,a){const s=_s(e,"dy","avgPoolGrad"),i=_s(t,"input","avgPoolGrad");ee(i.rank===s.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`));let o=i,u=s,l=!1;3===i.rank&&(l=!0,o=Ju(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=Ju(s,[1,s.shape[0],s.shape[1],s.shape[2]])),ee(4===u.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`)),ee(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:u,input:o},h={filterSize:n,strides:r,pad:a},d=bs.runKernel(lt,c,h);return l?Ju(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),mm={kernelName:ut,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i}=n;return{x:()=>fm(e,r,a,s,i)}}},gm={kernelName:dt,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,a]=t,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>Ki(e,a,!1,!1),b:()=>Ki(e,r,!0,!1)}:s&&!i?{a:()=>Ki(a,e,!1,!0),b:()=>Ki(r,e,!1,!1)}:{a:()=>Ki(a,e,!0,!0),b:()=>Ki(e,r,!0,!0)}:{a:()=>Ki(e,a,!1,!0),b:()=>Ki(r,e,!0,!1)}}},ym={kernelName:pt,gradFunc:(e,t,n)=>{const{blockShape:r,crops:a}=n;return{x:()=>oh(e,r,a)}}},bm={kernelName:mt,gradFunc:(e,t,n)=>{const r=n,a=r.inputShape,s=r.shape,i=Array.from(s);for(let e=a.length-1;e>=0;e--)if(a[e]===s[e])i[e]=1;else if(1!==a[e])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>kc(e,o,!0)}}},xm={kernelName:yt,gradFunc:e=>({x:()=>e.clone()})},vm={kernelName:bt,gradFunc:e=>({x:()=>Ll(e)})},wm={kernelName:xt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>Ol(Rc(Jl(r,a),sc(r,s)),e,Ll(e))}}},km={kernelName:wt,inputsToSave:["x"],gradFunc:em.gradFunc},Im={kernelName:kt,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:a}=n,s=fe(a,t[0].shape)[0],i=r.map((e=>e[s]));return qh(e,i,s).map((e=>()=>e))}},Sm={kernelName:It,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{dilations:s,strides:i,pad:o,dataFormat:u}=n;return ee(Ku(s),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`)),{x:()=>kl(r.shape,e,a,i,o,u),filter:()=>Cd(r,e,a.shape,i,o,u)}}},Nm={kernelName:Nt,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>vl(e,a,s,i,o,1,u),filter:()=>Cd(e,r,a.shape,s,i,o,u)}}},Tm=Fs({conv3DBackpropFilter_:function(e,t,n,r,a){let s=e;4===e.rank&&(s=Ju(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=Ju(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),ee(5===s.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`)),ee(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),ee(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),ee(s.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`)),ee(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:s,dy:i},u={strides:r,pad:a,filterShape:n};return bs.runKernel(Et,o,u)}}),Em={kernelName:Tt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s}=n;ee(Ku(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[i,o]=t;return{x:()=>Nl(i.shape,e,o,a,s),filter:()=>Tm(i,e,o.shape,a,s)}}},Cm={kernelName:_t,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ku(yc(Lh(Ci(n,"float32"))),e)}}},_m={kernelName:$t,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ku(zh(Ci(n,"float32")),e)}}},$m={kernelName:At,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{const t=_c([a],r.rank);let n=_l(e,a,s,!i);return null!=t&&(n=Yi(n,t)),n}}}},Am={kernelName:Mt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=null==r?[1,1]:r;ee(Ku(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[u,l]=t;return ee(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`)),ee(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`)),ee(u.shape[3]===l.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),ee(Xu(a,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`)),Zu("depthwiseConv2d",s,i),{x:()=>Md(u.shape,e,l,a,s,o,i),filter:()=>Dd(u,e,l.shape,a,s,o,i)}}},Fm={kernelName:Pt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,s={x:r,filter:a,dy:e},i={x:r,filter:a,dy:e};return{x:()=>bs.runKernel(Bt,s,n),filter:()=>bs.runKernel(Wt,i,n)}}},Rm={kernelName:Gt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>bs.runKernel(Ht,r)}}},Dm={kernelName:jt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=ku(Ul(yc(Xc(n))),2/Math.sqrt(Math.PI));return{x:()=>ku(e,r)}}},Mm={kernelName:Kt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ku(e,n)}}},Om={kernelName:Xt,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>Ju(e,n.shape)}}},Lm={kernelName:Yt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ku(e,Ul(n))}}},zm={kernelName:en,gradFunc:e=>({x:()=>Ll(e)})},Pm={kernelName:tn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=to(n.shape,r.shape);return{a:()=>{const t=wu(e,Ci(r,"float32")),s=eo(n.shape,a);return s.length>0?Ju(kc(t,s),n.shape):t},b:()=>{let t=ku(e,Ci(n,"float32"));const s=eo(r.shape,a);s.length>0&&(t=Ju(kc(t,s),r.shape));const i=Xc(r);return yc(wu(t,Ci(i,"float32")))}}}},Bm={kernelName:nn,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[a,s,i,o]=t,u=null==o?Fh(1):o,l=eo(s.shape,a.shape),c=[];if(1===s.rank){for(let e=0;e<a.shape.length-1;++e)c.push(a.shape[e]);c.push(1)}const h=wc(a,s),d=ku(e,u),p=Ah(xu(i,Fh(r))),f=ku(ku(ku(p,p),p),Fh(-.5));return{x:()=>1===s.rank?Ju(ku(ku(e,jl(Ju(p,[1,1,1,s.shape[0]]),c)),u),a.shape):Ju(ku(ku(e,p),u),a.shape),mean:()=>{let e=ku(ku(p,Fh(-1)),d);return 1===s.rank&&(e=kc(e,l)),Ju(e,s.shape)},variance:()=>{let e=ku(ku(f,h),d);return 1===s.rank&&(e=kc(e,l)),Ju(e,s.shape)},scale:()=>{const t=ku(h,p);let n=ku(e,t);return 1===s.rank&&(n=kc(n,l)),Ju(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=kc(t,l)),Ju(t,s.shape)}}}},Wm={kernelName:rn,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,a]=t,{axis:s}=n,i=fe(s,r.shape)[0];return{x:()=>{const t=r.shape,n=a.size,o=t.slice(0,i),u=o.length,l=t.slice(s,t.length).slice(1),c=l.length,h=Vm(0,u),d=Vm(u+1,u+1+c),p=Um([o,[n],l]),f=Ju(e,p),m=Ju(a,[n]),g=Um([[u],h,d]),y=Yi(f,g);let b=cd(y,m,r.shape[i]);const x=$c(g);return b=Yi(b,x),b},indices:()=>a}}};function Vm(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Um(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}var Gm={kernelName:on,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Ll(n),b:()=>Ll(r)}}},Hm={kernelName:un,gradFunc:e=>({x:()=>Ci(e,"float32")})},jm={kernelName:hn,gradFunc:e=>({x:()=>Ll(e)})},qm={kernelName:dn,gradFunc:e=>({x:()=>Ll(e)})},Km={kernelName:pn,gradFunc:e=>({x:()=>Ll(e)})},Xm={kernelName:fn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:a}=n,s=Zl(r,0);return{x:()=>Ol(s,e,ku(e,a))}}},Ym={kernelName:xn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>wu(e,xu(n,1))}}},Zm={kernelName:bn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>wu(e,Ci(n,"float32"))}}},Jm={kernelName:In,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n;return{logits:()=>{const t=Ul(r);return wc(e,ku(kc(e,a,!0),t))}}}},Qm=Fs({localResponseNormalizationBackprop_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:.5;const o={x:e,y:t,dy:n},u={depthRadius:r,bias:a,alpha:s,beta:i};return bs.runKernel(Nn,o,u)}}),eg={kernelName:Sn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{depthRadius:s,bias:i,alpha:o,beta:u}=n;return{x:()=>Qm(r,a,e,s,i,o,u)}}};function tg(e,t,n,r){return t.rank<n.rank&&(t=Ju(t,Ec(t.shape,r))),e.rank<n.rank&&(e=Ju(e,Ec(e.shape,r))),{x:()=>ku(e,Ci(Ml(n,t),e.dtype))}}var ng={kernelName:Tn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:a}=r,s=t[0],i=tg(e,t[1],s,fe(a,s.shape));return{x:()=>i.x()}}},rg={kernelName:En,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>ku(e,Ci(Jl(n,r),"float32")),b:()=>ku(e,Ci(ac(n,r),"float32"))}}},ag=Fs({maxPool3dGrad_:function(e,t,n,r,a,s,i){const o=_s(e,"dy","maxPool3dGrad"),u=_s(t,"input","maxPool3dGrad"),l=_s(n,"output","maxPool3dGrad");let c=o,h=u,d=l,p=!1;4===u.rank&&(p=!0,c=Ju(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=Ju(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),d=Ju(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),ee(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),ee(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),ee(5===d.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`)),Zu("maxPool3dGrad",s,i);const f={dy:c,input:h,output:d},m={filterSize:r,strides:a,pad:s,dimRoundingMode:i},g=bs.runKernel(An,f,m);return p?Ju(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),sg={kernelName:$n,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=n;return{x:()=>ag(e,r,a,s,i,o,u)}}},ig=Fs({maxPoolGrad_:function(e,t,n,r,a,s,i){const o=_s(e,"dy","maxPoolGrad"),u=_s(t,"input","maxPoolGrad"),l=_s(n,"output","maxPoolGrad");ee(u.rank===o.rank,(()=>`Rank of input (${u.rank}) does not match rank of dy (${o.rank})`)),ee(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),ee(4===u.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`)),Zu("maxPoolGrad",s,i);const c={dy:o,input:u,output:l},h={filterSize:r,strides:a,pad:s,dimRoundingMode:i};return bs.runKernel(_n,c,h)}}),og={kernelName:Kn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>rl(e,s,r.shape)}}},ug={kernelName:Ir,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:a}=n;return{x:()=>il(e,r,a)}}},lg={kernelName:Sr,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>tl(e,r)}}},cg=[em,tm,nm,rm,am,sm,im,om,um,lm,cm,hm,pm,mm,gm,ym,bm,xm,vm,wm,km,Im,Nm,Sm,Em,Cm,_m,$m,Am,Fm,{kernelName:Vt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=to(n.shape,r.shape);return{a:()=>{const t=wu(e,Ci(r,"float32")),s=eo(n.shape,a);return s.length>0?Ju(kc(t,s),n.shape):t},b:()=>{let t=ku(e,Ci(n,"float32"));const s=eo(r.shape,a);s.length>0&&(t=Ju(kc(t,s),r.shape));const i=Xc(r);return yc(wu(t,Ci(i,"float32")))}}}},Rm,Dm,Mm,Om,Lm,Pm,zm,Bm,Wm,Gm,Hm,jm,qm,Km,Xm,Ym,Zm,Jm,eg,ng,ng,rg,sg,{kernelName:Cn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>ig(e,r,a,s,i,o)}}},{kernelName:Rn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n,s=fe(a,r.shape),i=ae(Tc(r.shape,s)[1]);return{x:()=>{const t=r.shape.slice();s.forEach((e=>{t[e]=1}));const n=Ju(e,t);return wu(ku(n,Uc(r.shape,"float32")),i)}}}},{kernelName:Dn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:a}=r,[s,i]=t,o=tg(e,i,s,fe(a,s.shape));return{x:()=>o.x()}}},{kernelName:Mn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>ku(e,Ci(sc(n,r),"float32")),b:()=>ku(e,Ci(Zl(n,r),"float32"))}}},{kernelName:On,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>rl(e,s,r.shape)}}},{kernelName:Ln,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=to(n.shape,r.shape);return{a:()=>{const t=eo(n.shape,a);return t.length>0?Ju(kc(e,t),n.shape):e},b:()=>{const t=ku(e,yc(Xl(wu(n,r)))),s=eo(r.shape,a);return s.length>0?Ju(kc(t,s),r.shape):t}}}},{kernelName:Pn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=to(n.shape,r.shape);return{a:()=>{const t=ku(e,Ci(r,"float32")),s=eo(n.shape,a);return s.length>0?Ju(kc(t,s),n.shape):t},b:()=>{const t=ku(e,Ci(n,"float32")),s=eo(r.shape,a);return s.length>0?Ju(kc(t,s),r.shape):t}}}},{kernelName:Bn,gradFunc:e=>({x:()=>yc(e)})},{kernelName:jn,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Vc(n.shape,"float32")}}},{kernelName:Hn,gradFunc:e=>({x:()=>Ll(e)})},{kernelName:qn,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return hd(e,r).map((e=>()=>e))}},og,og,{kernelName:Yn,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,a]=t,s=n,i=r,o=to(s.shape,i.shape);return{a:()=>{const t=Ci(i,"float32");let n=ku(e,ku(t,lh(s,wc(t,Fh(1)))));const r=eo(s.shape,o);return r.length>0&&(n=kc(n,r)),Ju(n,s.shape)},b:()=>{const t=Zl(s,0),n=Ol(t,uc(s),Ll(s));let r=ku(e,ku(a,n));const u=eo(i.shape,o);return u.length>0&&(r=kc(r,u)),Ju(r,i.shape)}}}},{kernelName:Zn,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,a=Zl(n,0);return{x:()=>Ol(a,e,ku(e,r)),alpha:()=>{let t=Ol(a,Ll(e),ku(e,n));const s=eo(r.shape,e.shape);return s.length>0&&(t=kc(t,s)),Ju(t,r.shape)}}}},{kernelName:tr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>wu(e,yc(Xc(n)))}}},{kernelName:ur,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=ku(sc(n,6),Qh(n));return{x:()=>ku(e,Ci(r,"float32"))}}},{kernelName:nr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ku(e,Ci(Qh(n),"float32"))}}},{kernelName:rr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ju(e,n.shape)}}},{kernelName:ir,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>bs.runKernel(or,a,n)}}},{kernelName:ar,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>bs.runKernel(sr,a,n)}}},{kernelName:lr,gradFunc:(e,t,n)=>{const{dims:r}=n,a=fe(r,e.shape);return{x:()=>Nh(e,a)}}},{kernelName:cr,gradFunc:e=>({x:()=>Ll(e)})},{kernelName:hr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yc(wu(e,ku(lh(n,1.5),2)))}}},{kernelName:pr,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>Ci(Ll(n),"float32"),t:()=>ku(e,Ci(n,e.dtype)),e:()=>ku(e,Ci(Dc(n),e.dtype))}}},{kernelName:fr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Zl(n,Fh(0)),r=Fh(hf),a=Fh(df),s=ku(e,a),i=ku(ku(e,r),Ul(Ci(n,"float32")));return Ol(t,s,i)}}}},{kernelName:xr,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ku(e,ku(n,wc(Fh(1),n)))}}},{kernelName:br,gradFunc:e=>({x:()=>Ll(e)})},{kernelName:gr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ku(El(Ci(n,"float32")),e)}}},{kernelName:yr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ku(Cl(Ci(n,"float32")),e)}}},{kernelName:mr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:a,size:s}=n,i=r.shape,[o,u]=Fo(r,a,s),l=[];for(let t=0;t<e.rank;t++)l.push([o[t],i[t]-o[t]-u[t]]);return{x:()=>nh(e,l)}}},{kernelName:Nr,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:a}=n,s=ku(e,r);return{logits:()=>wc(s,ku(kc(s,[a],!0),r))}}},{kernelName:vr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ku(e,nl(n))}}},ug,ug,lg,lg,{kernelName:wr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>wu(e,ku(Xh(Ci(n,"float32")),2))}}},{kernelName:Ar,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Fh(2);return{a:()=>ku(e,ku(a,wc(n,r))),b:()=>ku(e,ku(a,wc(r,n)))}}},{kernelName:Fr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ku(e,ku(Ci(n,"float32"),2))}}},{kernelName:Kr,gradFunc:e=>({x:()=>Ll(e)})},{kernelName:Lr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=to(n.shape,r.shape);return{a:()=>{let t=e;const r=eo(n.shape,a);return r.length>0&&(t=kc(t,r)),Ju(t,n.shape)},b:()=>{let t=e;const n=eo(r.shape,a);return n.length>0&&(t=kc(t,n)),Ju(yc(t),r.shape)}}}},{kernelName:kr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,a=r.shape.slice(),{axis:s}=n;fe(s,r.shape).forEach((e=>{a[e]=1}));const i=Ju(e,a),o=ku(i,Uc(r.shape,"float32"));return{x:()=>o}}},{kernelName:zr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>wu(e,Xc(El(n)))}}},{kernelName:Pr,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ku(wc(Fh(1),Xc(n)),e)}}},{kernelName:Br,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:a}=n;return{x:()=>{let t=Ll(r);if(1===r.rank)for(let n=0;n<a[0];++n)t=xu(t,rl(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)t=xu(t,rl(e,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)t=xu(t,rl(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)for(let o=0;o<a[3];++o)t=xu(t,rl(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:Ur,gradFunc:(e,t,n)=>{const r=n,{perm:a}=r,s=$c(a);return{x:()=>Yi(e,s)}}},{kernelName:Hr,gradFunc:(e,t,n)=>{const r=n,{axis:a}=r;return{value:()=>Jh(e,a)}}},{kernelName:jr,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=Bc(t,Ll(t)),r=Yl(e,n);let a=Jl(t,Fh(0,"int32"));const s=r.rank-a.rank;for(let e=0;e<s;++e)a=Gl(a,e+1);a=Rc(a,Uc(r.shape,"bool"));const i=Ll(r);return Ol(a,r,i)}(e,n)}}},{kernelName:qr,gradFunc:e=>({x:()=>Ll(e)})}];for(const e of cg)ua(e);qa().prototype.abs=function(){return this.throwIfDisposed(),Iu(this)},qa().prototype.acos=function(){return this.throwIfDisposed(),Su(this)},qa().prototype.acosh=function(){return this.throwIfDisposed(),Nu(this)},qa().prototype.add=function(e){return this.throwIfDisposed(),xu(this,e)},qa().prototype.all=function(e,t){return this.throwIfDisposed(),Eu(this,e,t)},qa().prototype.any=function(e,t){return this.throwIfDisposed(),Cu(this,e,t)},qa().prototype.argMax=function(e){return this.throwIfDisposed(),_u(this,e)},qa().prototype.argMin=function(e){return this.throwIfDisposed(),$u(this,e)},qa().prototype.asScalar=function(){return this.throwIfDisposed(),ee(1===this.size,(()=>"The array must have only 1 element.")),Ju(this,[])},qa().prototype.asType=function(e){return this.throwIfDisposed(),Ci(this,e)},qa().prototype.as1D=function(){return this.throwIfDisposed(),Ju(this,[this.size])},qa().prototype.as2D=function(e,t){return this.throwIfDisposed(),Ju(this,[e,t])},qa().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Ju(this,[e,t,n])},qa().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),Ju(this,[e,t,n,r])},qa().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),Ju(this,[e,t,n,r,a])},qa().prototype.asin=function(){return this.throwIfDisposed(),Au(this)},qa().prototype.asinh=function(){return this.throwIfDisposed(),Fu(this)},qa().prototype.atan=function(){return this.throwIfDisposed(),Ru(this)},qa().prototype.atan2=function(e){return this.throwIfDisposed(),Du(this,e)},qa().prototype.atanh=function(){return this.throwIfDisposed(),Mu(this)},qa().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),Qu(this,e,t,n,r)},qa().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),il(this,e,t)},qa().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),ol(this,e,t,n,r,a)},qa().prototype.broadcastTo=function(e){return this.throwIfDisposed(),pl(this,e)},qa().prototype.cast=function(e){return this.throwIfDisposed(),Ci(this,e)},qa().prototype.ceil=function(){return this.throwIfDisposed(),fl(this)},qa().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),ml(this,e,t)},qa().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof ja&&(e=[e]),tl([this,...e],t)},qa().prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),wl(this,e,t,n,r,a,s)},qa().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),Il(this,e,t,n,r,a)},qa().prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),vl(this,e,t,n,r,a,s)},qa().prototype.cos=function(){return this.throwIfDisposed(),El(this)},qa().prototype.cosh=function(){return this.throwIfDisposed(),Cl(this)},qa().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),_l(this,e,t,n)},qa().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Al(this,e,t)},qa().prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Fl(this,e,t,n,r,a,s)},qa().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),Dl(this,e,t,n,r,a)},qa().prototype.divNoNan=function(e){return this.throwIfDisposed(),zl(this,e)},qa().prototype.div=function(e){return this.throwIfDisposed(),wu(this,e)},qa().prototype.dot=function(e){return this.throwIfDisposed(),Pl(this,e)},qa().prototype.elu=function(){return this.throwIfDisposed(),Wl(this)},qa().prototype.equal=function(e){return this.throwIfDisposed(),Ml(this,e)},qa().prototype.erf=function(){return this.throwIfDisposed(),Vl(this)},qa().prototype.exp=function(){return this.throwIfDisposed(),Ul(this)},qa().prototype.expandDims=function(e){return this.throwIfDisposed(),Gl(this,e)},qa().prototype.expm1=function(){return this.throwIfDisposed(),Hl(this)},qa().prototype.fft=function(){return this.throwIfDisposed(),Gh(this)},qa().prototype.flatten=function(){return this.throwIfDisposed(),Ju(this,[this.size])},qa().prototype.floor=function(){return this.throwIfDisposed(),Xl(this)},qa().prototype.floorDiv=function(e){return this.throwIfDisposed(),vu(this,e)},qa().prototype.gather=function(e,t){return this.throwIfDisposed(),Yl(this,e,t)},qa().prototype.greaterEqual=function(e){return this.throwIfDisposed(),Jl(this,e)},qa().prototype.greater=function(e){return this.throwIfDisposed(),Zl(this,e)},qa().prototype.ifft=function(){return this.throwIfDisposed(),Hh(this)},qa().prototype.irfft=function(){return this.throwIfDisposed(),jh(this)},qa().prototype.isFinite=function(){return this.throwIfDisposed(),ec(this)},qa().prototype.isInf=function(){return this.throwIfDisposed(),tc(this)},qa().prototype.isNaN=function(){return this.throwIfDisposed(),nc(this)},qa().prototype.leakyRelu=function(e){return this.throwIfDisposed(),rc(this,e)},qa().prototype.lessEqual=function(e){return this.throwIfDisposed(),sc(this,e)},qa().prototype.less=function(e){return this.throwIfDisposed(),ac(this,e)},qa().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),oc(this,e,t,n,r)},qa().prototype.logSigmoid=function(){return this.throwIfDisposed(),xc(this)},qa().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Ic(this,e)},qa().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Fc(this,e,t)},qa().prototype.log=function(){return this.throwIfDisposed(),uc(this)},qa().prototype.log1p=function(){return this.throwIfDisposed(),lc(this)},qa().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Rc(this,e)},qa().prototype.logicalNot=function(){return this.throwIfDisposed(),Dc(this)},qa().prototype.logicalOr=function(e){return this.throwIfDisposed(),Mc(this,e)},qa().prototype.logicalXor=function(e){return this.throwIfDisposed(),Oc(this,e)},qa().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Ki(this,e,t,n)},qa().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Lc(this,e,t,n,r)},qa().prototype.max=function(e,t){return this.throwIfDisposed(),vc(this,e,t)},qa().prototype.maximum=function(e){return this.throwIfDisposed(),Bc(this,e)},qa().prototype.mean=function(e,t){return this.throwIfDisposed(),Wc(this,e,t)},qa().prototype.min=function(e,t){return this.throwIfDisposed(),Hc(this,e,t)},qa().prototype.minimum=function(e){return this.throwIfDisposed(),jc(this,e)},qa().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),qc(this,e,t)},qa().prototype.mod=function(e){return this.throwIfDisposed(),Kc(this,e)},qa().prototype.mul=function(e){return this.throwIfDisposed(),ku(this,e)},qa().prototype.neg=function(){return this.throwIfDisposed(),yc(this)},qa().prototype.norm=function(e,t,n){return this.throwIfDisposed(),yd(this,e,t,n)},qa().prototype.notEqual=function(e){return this.throwIfDisposed(),Qc(this,e)},qa().prototype.oneHot=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return this.throwIfDisposed(),Xi(this,e,t,n)},qa().prototype.onesLike=function(){return this.throwIfDisposed(),eh(this)},qa().prototype.pad=function(e,t){return this.throwIfDisposed(),nh(this,e,t)},qa().prototype.pool=function(e,t,n,r,a,s){return this.throwIfDisposed(),uh(this,e,t,n,r,a,s)},qa().prototype.pow=function(e){return this.throwIfDisposed(),lh(this,e)},qa().prototype.prelu=function(e){return this.throwIfDisposed(),ch(this,e)},qa().prototype.prod=function(e,t){return this.throwIfDisposed(),hh(this,e,t)},qa().prototype.reciprocal=function(){return this.throwIfDisposed(),kh(this)},qa().prototype.relu=function(){return this.throwIfDisposed(),Ih(this)},qa().prototype.relu6=function(){return this.throwIfDisposed(),Sh(this)},qa().prototype.reshapeAs=function(e){return this.throwIfDisposed(),Ju(this,e.shape)},qa().prototype.reshape=function(e){return this.throwIfDisposed(),Ju(this,e)},qa().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),sp(this,e,t,n)},qa().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),ip(this,e,t,n)},qa().prototype.reverse=function(e){return this.throwIfDisposed(),Nh(this,e)},qa().prototype.rfft=function(){return this.throwIfDisposed(),Kh(this)},qa().prototype.round=function(){return this.throwIfDisposed(),$h(this)},qa().prototype.rsqrt=function(){return this.throwIfDisposed(),Ah(this)},qa().prototype.selu=function(){return this.throwIfDisposed(),Rh(this)},qa().prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Dh(this,e,t,n,r,a,s)},qa().prototype.sigmoid=function(){return this.throwIfDisposed(),nl(this)},qa().prototype.sign=function(){return this.throwIfDisposed(),Oh(this)},qa().prototype.sin=function(){return this.throwIfDisposed(),Lh(this)},qa().prototype.sinh=function(){return this.throwIfDisposed(),zh(this)},qa().prototype.slice=function(e,t){return this.throwIfDisposed(),rl(this,e,t)},qa().prototype.softmax=function(e){return this.throwIfDisposed(),Uh(this,e)},qa().prototype.softplus=function(){return this.throwIfDisposed(),bc(this)},qa().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),oh(this,e,t)},qa().prototype.split=function(e,t){return this.throwIfDisposed(),qh(this,e,t)},qa().prototype.sqrt=function(){return this.throwIfDisposed(),Xh(this)},qa().prototype.square=function(){return this.throwIfDisposed(),Xc(this)},qa().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Yh(this,e)},qa().prototype.squeeze=function(e){return this.throwIfDisposed(),Zh(this,e)},qa().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof ja?[this,e]:[this,...e];return Jh(n,t)},qa().prototype.step=function(e){return this.throwIfDisposed(),Qh(this,e)},qa().prototype.stridedSlice=function(e,t,n,r,a,s,i,o){return this.throwIfDisposed(),ed(this,e,t,n,r,a,s,i,o)},qa().prototype.sub=function(e){return this.throwIfDisposed(),wc(this,e)},qa().prototype.sum=function(e,t){return this.throwIfDisposed(),kc(this,e,t)},qa().prototype.tan=function(){return this.throwIfDisposed(),td(this)},qa().prototype.tanh=function(){return this.throwIfDisposed(),al(this)},qa().prototype.tile=function(e){return this.throwIfDisposed(),jl(this,e)},qa().prototype.toBool=function(){return this.throwIfDisposed(),Ci(this,"bool")},qa().prototype.toFloat=function(){return this.throwIfDisposed(),Ci(this,"float32")},qa().prototype.toInt=function(){return this.throwIfDisposed(),Ci(this,"int32")},qa().prototype.topk=function(e,t){return this.throwIfDisposed(),od(this,e,t)},qa().prototype.transpose=function(e){return this.throwIfDisposed(),Yi(this,e)},qa().prototype.unique=function(e){return this.throwIfDisposed(),ld(this,e)},qa().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),cd(this,e,t)},qa().prototype.unstack=function(e){return this.throwIfDisposed(),hd(this,e)},qa().prototype.where=function(e,t){return this.throwIfDisposed(),Ol(e,this,t)},qa().prototype.zerosLike=function(){return this.throwIfDisposed(),Ll(this)};var hg,dg={};function pg(){return null==hg&&(hg=yu().epsilon()),hg}p(dg,{maxNorm:()=>Kg,minMaxNorm:()=>Zg,nonNeg:()=>Yg,unitNorm:()=>Xg});var fg=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,fg.prototype)}},mg=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,mg.prototype)}},gg=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,gg.prototype)}},yg=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,yg.prototype)}},bg=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,bg.prototype)}};function xg(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function vg(e,t){if(!e)throw new bg(t)}function wg(e,t){let n=0;for(const r of e)r===t&&n++;return n}function kg(e){return 1===e.length?e[0]:e}function Ig(e){return Array.isArray(e)?e:[e]}function Sg(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function Ng(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}var Tg={};function Eg(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Cg(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>Cg(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?Cg(t):e[n]=t.value)}}}function _g(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"object",a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if("string"==typeof e){const a=e;let s;if(a in n)s=n[a];else if(a in Tg)s=Tg[a];else if(s=t[a],null==s)throw new gg(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return s}{const s=e;if(null==s.className||null==s.config)throw new gg(`${r}: Improper config format: ${JSON.stringify(s)}.\n'className' and 'config' must set.`);const i=s.className;let o,u;if(i in n?[o,u]=n[i]:i in Tg?[o,u]=Tg.className:i in t&&([o,u]=t[i]),null==o)throw new gg(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const e={};for(const t of Object.keys(Tg))e[t]=Tg[t];for(const t of Object.keys(n))e[t]=n[t];s.config.customObjects=e;const t=Object.assign({},Tg);for(const e of Object.keys(n))Tg[e]=n[e];Cg(s.config);const r=u(o,s.config,n,a);return Tg=Object.assign({},t),r}{const e=Object.assign({},Tg);for(const e of Object.keys(n))Tg[e]=n[e];const t=new o(s.config);return Tg=Object.assign({},e),t}}}function $g(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function Ag(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function Fg(e){if(null==e)throw new gg(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function Rg(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new gg(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Dg(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1/0;return vg(n>=0),vg(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function Mg(e,t){Array.isArray(e)?(pa.assert(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>Mg(e,`element ${n+1} of ${t}`)))):pa.assert(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${Og(e)}.`))}function Og(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>Og(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function Lg(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function zg(e,t){return iu((()=>Xh(kc(ku(e,e),t,!0))))}var Pg=class extends Mo.Serializable{getConfig(){return{}}},Bg=class extends Pg{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return iu((()=>{const t=zg(e,this.axis),n=ml(t,0,this.maxValue);return ku(e,wu(n,xu(pg(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};Bg.className="MaxNorm",Mo.registerClass(Bg);var Wg=class extends Pg{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return iu((()=>wu(e,xu(pg(),zg(e,this.axis)))))}getConfig(){return{axis:this.axis}}};Wg.className="UnitNorm",Mo.registerClass(Wg);var Vg=class extends Pg{apply(e){return Ih(e)}};Vg.className="NonNeg",Mo.registerClass(Vg);var Ug=class extends Pg{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return iu((()=>{const t=zg(e,this.axis),n=xu(ku(this.rate,ml(t,this.minValue,this.maxValue)),ku(1-this.rate,t));return ku(e,wu(n,xu(pg(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};Ug.className="MinMaxNorm",Mo.registerClass(Ug);var Gg={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Hg(e){return Eg(e)}function jg(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return _g(e,Mo.SerializationMap.getMap().classNameMap,t,"constraint")}function qg(e){return null==e?null:"string"==typeof e?jg({className:e in Gg?Gg[e]:e,config:{}}):e instanceof Pg?e:jg(e)}function Kg(e){return new Bg(e)}function Xg(e){return new Wg(e)}function Yg(){return new Vg}function Zg(e){return new Ug(e)}var Jg={};p(Jg,{constant:()=>sb,glorotNormal:()=>db,glorotUniform:()=>hb,heNormal:()=>pb,heUniform:()=>fb,identity:()=>lb,leCunNormal:()=>mb,leCunUniform:()=>gb,ones:()=>ab,orthogonal:()=>yb,randomNormal:()=>ob,randomUniform:()=>ib,truncatedNormal:()=>ub,varianceScaling:()=>cb,zeros:()=>rb});var Qg=["channelsFirst","channelsLast"],ey=["nearest","bilinear"],ty=["valid","same","causal"],ny=["max","avg"],ry=["sum","mul","concat","ave"],ay=new Map;function sy(e){Rg(Qg,"DataFormat",e)}function iy(e){Rg(ty,"PaddingMode",e)}function oy(e){Rg(ny,"PoolMode",e)}var uy=[];function ly(e,t){uy.push(e);try{const e=t();return uy.pop(),e}catch(e){throw uy.pop(),e}}function cy(e){if(!py(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===uy.length?"":uy.join("/")+"/")+e}function hy(e){if(!py(e))throw new Error("Not a valid tensor name: '"+e+"'");ay.has(e)||ay.set(e,0);const t=ay.get(e);if(ay.set(e,ay.get(e)+1),t>0){const n=`${e}_${t}`;return ay.set(n,1),n}return e}var dy=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function py(e){return!!e.match(dy)}function fy(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function my(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function gy(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function yy(e,t){if(t<e)throw new gg(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}function by(e,t){return Ci(e,t)}function xy(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),Ju(e,n)}function vy(e){const t=[fy(e.shape)];return Ju(e,t)}function wy(e,t,n){return iu((()=>{switch(e.rank){case 1:return Ph(e,t,n);case 2:return Bh(e,[t,0],[n,e.shape[1]]);case 3:return Wh(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Vh(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return rl(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return rl(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new gg(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function ky(e,t,n){return iu((()=>{switch(e.rank){case 1:return Ph(e,t,n);case 2:return Bh(e,[0,t],[e.shape[0],n]);case 3:return Wh(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Vh(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new gg(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Iy(e,t,n,r){return iu((()=>{switch(e.rank){case 1:return Ph(e,t,n);case 2:switch(r){case 1:return wy(e,t,n);case 2:return ky(e,t,n);default:throw new gg(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return wy(e,t,n);case 2:return Wh(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return ky(e,t,n);default:throw new gg(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return wy(e,t,n);case 2:return Vh(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Vh(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return ky(e,t,n);default:throw new gg(`The axis is not within the rank of the tensor ${r}`)}default:throw new gg(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Sy(e){let t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return n<0&&(t=e[0].rank,n=0!==t?t:0),n===e[0].rank&&(n=-1),tl(e,n)}function Ny(e,t){switch(e.rank){case 1:return gl([e,t]);case 2:return yl([e,t],0);case 3:return bl([e,t],0);case 4:return xl([e,t],0);default:throw new gg(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function Ty(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new gg(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return jl(e,t)}function Ey(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3?arguments[3]:void 0,a=arguments.length>4?arguments[4]:void 0;return bh(e,t,n,r,a)}function Cy(e,t,n,r){if(e.rank<2||t.rank<2)throw new yg(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new yg(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank){const a=!1,s=!1;return Ed.matMul({a:e,b:t,transposeA:a,transposeB:s,bias:r?Ay(e.rank,r,"channelsLast"):null,activation:n})}{const a=e.shape.slice(),s=a.pop();e=Ju(e,[-1,s]);const i=t.shape.slice(),o=i.pop(),u=i.pop(),l=[...i,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=Ju(Yi(t,c),[u,-1]);const h=[...a,...l],d=!1,p=!1;return Ju(Ed.matMul({a:e,b:t,transposeA:d,transposeB:p,bias:r?Ay(e.rank,r,"channelsLast"):null,activation:n}),h)}}function _y(e,t,n){return iu((()=>(t=Array.isArray(t)?nd(t,"int32"):Ci(t,"int32"),Yl(e,t,n))))}function $y(e){return ku(e,e)}function Ay(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new gg(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?Ju(t,[1,r[0],1,1,1]):Ju(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?Ju(t,[1,1,1,1,r[0]]):Ju(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?Ju(t,[1,r[0],1,1]):Ju(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?Ju(t,[1,1,1,r[0]]):Ju(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?Ju(t,[1,r[0],1]):Ju(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?Ju(t,[1,1,r[0]]):Ju(t,[1].concat(r))}else if(e<3)return t;throw new gg(`Unsupported input rank by biasAdd: ${t.rank}`)}function Fy(e,t,n){return iu((()=>(null==n&&(n="channelsLast"),sy(n),xu(e,Ay(e.rank,t,n)))))}function Ry(e,t,n,r){return iu((()=>Id(e,t,n,r)))}function Dy(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return n?e():t()}var My=["fanIn","fanOut","fanAvg"],Oy=["normal","uniform","truncatedNormal"],Ly=class extends Mo.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},zy=class extends Ly{apply(e,t){return Vc(e,t)}};zy.className="Zeros",Mo.registerClass(zy);var Py=class extends Ly{apply(e,t){return Uc(e,t)}};Py.className="Ones",Mo.registerClass(Py);var By=class extends Ly{constructor(e){if(super(),"object"!=typeof e)throw new gg(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new gg(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return iu((()=>ku(Fh(this.value),Uc(e,t))))}getConfig(){return{value:this.value}}};By.className="Constant",Mo.registerClass(By);var Wy=class extends Ly{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return xh(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};Wy.className="RandomUniform",Mo.registerClass(Wy);var Vy=class extends Ly{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new yg(`randomNormal does not support dType ${t}.`);return Ey(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Vy.className="RandomNormal",Mo.registerClass(Vy);var Uy=class extends Ly{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new yg(`truncatedNormal does not support dType ${t}.`);return ud(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Uy.className="TruncatedNormal",Mo.registerClass(Uy);var Gy=class extends Ly{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return iu((()=>{if(2!==e.length||e[0]!==e[1])throw new gg("Identity matrix initializer can only be used for 2D square matrices.");return ku(this.gain,ql(e[0]))}))}getConfig(){return{gain:this.gain}}};Gy.className="Identity",Mo.registerClass(Gy);var Hy=class extends Ly{constructor(e){if(super(),e.scale<0)throw new gg(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,Rg(My,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){Rg(Oy,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e){let t,n,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"channelsLast";if(sy(r),2===e.length)t=e[0],n=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===r){const r=fy(e,2);t=e[1]*r,n=e[0]*r}else if("channelsLast"===r){const r=fy(e,0,e.length-2);t=e[e.length-2]*r,n=e[e.length-1]*r}}else{const r=fy(e);t=Math.sqrt(r),n=Math.sqrt(r)}return[t,n]}(e),r=n[0],a=n[1];let s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,r):"fanOut"===this.mode?s/=Math.max(1,a):s/=Math.max(1,(r+a)/2),"normal"===this.distribution){const n=Math.sqrt(s);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new yg(`${this.getClassName()} does not support dType ${t}.`);return ud(e,0,n,t,this.seed)}{const n=Math.sqrt(3*s);return xh(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};Hy.className="VarianceScaling",Mo.registerClass(Hy);var jy=class extends Hy{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Hy.className}};jy.className="GlorotUniform",Mo.registerClass(jy);var qy=class extends Hy{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Hy.className}};qy.className="GlorotNormal",Mo.registerClass(qy);var Ky=class extends Hy{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Hy.className}};Ky.className="HeNormal",Mo.registerClass(Ky);var Xy=class extends Hy{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Hy.className}};Xy.className="HeUniform",Mo.registerClass(Xy);var Yy=class extends Hy{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Hy.className}};Yy.className="LeCunNormal",Mo.registerClass(Yy);var Zy=class extends Hy{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Hy.className}};Zy.className="LeCunNormal",Mo.registerClass(Zy);var Jy=class extends Ly{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new yg("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return iu((()=>{if(e.length<2)throw new yg("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=Ey(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=Lp.gramSchmidt(t);return e[0]>e[1]&&(n=Yi(n)),ku(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}};Jy.className="Orthogonal",Mo.registerClass(Jy);var Qy={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function eb(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return _g(e,Mo.SerializationMap.getMap().classNameMap,t,"initializer")}function tb(e){return Eg(e)}function nb(e){if("string"==typeof e){const t=e in Qy?Qy[e]:e;if("GlorotNormal"===t)return new qy;if("GlorotUniform"===t)return new jy;if("HeNormal"===t)return new Ky;if("HeUniform"===t)return new Xy;if("LeCunNormal"===t)return new Yy;if("LeCunUniform"===t)return new Zy;{const e={};return e.className=t,e.config={},eb(e)}}return e instanceof Ly?e:eb(e)}function rb(){return new zy}function ab(){return new Py}function sb(e){return new By(e)}function ib(e){return new Wy(e)}function ob(e){return new Vy(e)}function ub(e){return new Uy(e)}function lb(e){return new Gy(e)}function cb(e){return new Hy(e)}function hb(e){return new jy(e)}function db(e){return new qy(e)}function pb(e){return new Ky(e)}function fb(e){return new Xy(e)}function mb(e){return new Yy(e)}function gb(e){return new Zy(e)}function yb(e){return new Jy(e)}var bb={};p(bb,{Layer:()=>Lb,RNN:()=>cw,RNNCell:()=>hw,activation:()=>Rk,add:()=>Vk,alphaDropout:()=>FI,average:()=>Uk,averagePooling1d:()=>Jk,averagePooling2d:()=>tI,averagePooling3d:()=>aI,avgPool1d:()=>Qk,avgPool2d:()=>nI,avgPool3d:()=>sI,avgPooling1d:()=>eI,avgPooling2d:()=>rI,avgPooling3d:()=>iI,batchNormalization:()=>Xk,bidirectional:()=>SI,concatenate:()=>Gk,conv1d:()=>Sk,conv2d:()=>Nk,conv2dTranspose:()=>Tk,conv3d:()=>Ek,conv3dTranspose:()=>Ck,convLstm2d:()=>vI,convLstm2dCell:()=>wI,cropping2D:()=>$k,dense:()=>Dk,depthwiseConv2d:()=>Fk,dot:()=>Kk,dropout:()=>Mk,elu:()=>bk,embedding:()=>Wk,flatten:()=>Lk,gaussianDropout:()=>AI,gaussianNoise:()=>$I,globalAveragePooling1d:()=>oI,globalAveragePooling2d:()=>uI,globalMaxPool1d:()=>TI,globalMaxPool2d:()=>EI,globalMaxPooling1d:()=>lI,globalMaxPooling2d:()=>cI,gru:()=>fI,gruCell:()=>mI,input:()=>hv,inputLayer:()=>yk,layerNormalization:()=>Yk,leakyReLU:()=>vk,lstm:()=>gI,lstmCell:()=>yI,masking:()=>RI,maxPool1d:()=>CI,maxPool2d:()=>_I,maxPooling1d:()=>hI,maxPooling2d:()=>dI,maxPooling3d:()=>pI,maximum:()=>Hk,minimum:()=>jk,multiply:()=>qk,permute:()=>Bk,prelu:()=>wk,reLU:()=>xk,repeatVector:()=>zk,reshape:()=>Pk,rnn:()=>kI,separableConv2d:()=>_k,simpleRNN:()=>bI,simpleRNNCell:()=>xI,softmax:()=>kk,spatialDropout1d:()=>Ok,stackedRNNCells:()=>II,thresholdedReLU:()=>Ik,timeDistributed:()=>NI,upSampling2d:()=>Ak,zeroPadding2d:()=>Zk});var xb=0;function vb(){return xb++}var wb={};function kb(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return e in wb||(wb[e]=0),wb[e]+=1,e+wb[e].toString()}function Ib(e){return Array.isArray(e)&&Array.isArray(e[0])}function Sb(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Nb(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new gg(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function Tb(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return(e=e)[0];throw new gg(`Expected exactly 1 Shape; got ${e.length}`)}return e}function Eb(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}var Cb="Variable",_b=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Cb,r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=vb(),n=null==n?Cb:n,this.originalName=cy(n),this.name=hy(this.originalName),this.trainable_=r,this.constraint=a,this.val=dd(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function $b(e){return e.map((e=>e.read()))}function Ab(e){e.forEach((e=>{e[0].write(e[1])}))}var Fb=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},Rb=class{constructor(e,t,n,r,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=vb(),null!=s&&(this.originalName=cy(s),this.name=hy(this.originalName)),this.rank=t.length}},Db=0,Mb=class{constructor(e,t){this.callArgs=t,this.id=Db++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},Ob=0,Lb=class extends Mo.Serializable{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Ob++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=Sg(e)+"_"+kb(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new mg(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new gg(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return kg(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return kg(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new fg(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new fg(`Layer ${this.name} is not connected, no input to return.`);return kg(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new fg(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new fg(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return kg(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=Ig(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=Ig(this.inputSpec);if(e.length!==t.length)throw new gg(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const r=e[n],a=t[n];if(null==a)continue;const s=r.rank;if(null!=a.ndim&&s!==a.ndim)throw new gg(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(null!=a.maxNDim&&s>a.maxNDim)throw new gg(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(null!=a.minNDim&&s<a.minNDim)throw new gg(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new gg(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){const e=r.shape;for(const t in a.axes){const r=Number(t),s=a.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=s&&-1===[s,null].indexOf(i))throw new gg(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${s} but got shape ${e}.`)}}if(null!=a.shape)for(let e=0;e<a.shape.length;++e){const t=a.shape[e],s=r.shape[e];if(null!=t&&null!=s&&t!==s)throw new gg(`Input ${n} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=Ig(e);let r=!0;for(const e of n)if(!(e instanceof Rb)){r=!1;break}let a=!0;for(const e of n)if(e instanceof Rb){a=!1;break}if(r===a)throw new gg("Arguments to apply() must be all SymbolicTensors or all Tensors");return ly(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of Ig(e))t.push(n.shape);this.build(kg(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let r=this.call(e,t);const a=Ig(r),s=[];for(let e of a)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(r=kg(s),null!=this.activityRegularizer)throw new yg("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=Ig(e);const t=[];for(const n of e)t.push(n.shape);return kg(t)}(e),r=this.computeOutputShape(n);let a;const s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),a=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new Rb(s,n,this,Ig(e),t,this.name,r))):new Rb(s,r,this,Ig(e),t,this.name),this.addInboundNode(e,a,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new yg("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new fg(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new fg(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new mg(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Eb(this.weights)}build(e){this.built=!0}getWeights(){return $b(arguments.length>0&&void 0!==arguments[0]&&arguments[0]?this.trainableWeights:this.weights)}setWeights(e){iu((()=>{const t=this.weights;if(t.length!==e.length)throw new gg(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=$b(t);for(let a=0;a<r.length;++a){const s=r[a],i=t[a],o=e[a];if(!pa.arraysEqual(s.shape,o.shape))throw new gg(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}Ab(n)}))}addWeight(e,t,n,r,a,s,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new gg(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():nb("zeros"));const u=r.apply(t,n),l=new _b(u,n,e,s,i);return u.dispose(),null!=a&&this.addLoss((()=>a.apply(l.read()))),null==s&&(s=!0),s?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=Ig(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,a,s){let i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null;const o=Ig(e);t=Ig(t),n=Ig(n),r=Ig(r),a=Sb(a),s=Sb(s);const u=[],l=[],c=[];for(const e of o)u.push(e.sourceLayer),l.push(e.nodeIndex),c.push(e.tensorIndex);new Mb({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function zb(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=zb(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}var Pb,Bb,Wb=class extends Lb{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:kb("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new gg("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new gg("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new gg("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new Rb(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Mb({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new gg(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};function Vb(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new gg("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new Wb({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}async function Ub(e){if(null==e)return;const t=[],n=[],r=[];for(const a in e){const s=e[a];if("number"!=typeof s){const e=s;t.push(e.data()),n.push(a),r.push(e)}}if(t.length>0){const a=await Promise.all(t);for(let t=0;t<a.length;++t)e[n[t]]=a[t][0];ou(r)}}function Gb(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}Wb.className="InputLayer",Mo.registerClass(Wb),(Bb=Pb||(Pb={}))[Bb.SILENT=0]="SILENT",Bb[Bb.VERBOSE=1]="VERBOSE";var Hb=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},jb=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10;null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}},qb=class extends Hb{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const a=iu((()=>xu(this.totals[e],ku(r,n))));this.totals[e]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:iu((()=>{const n=ku(wu(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),uu(t[e])})))}},Kb=class extends Hb{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const a=this.history[r];for(let s=0;s<a.length;++s)if("number"!=typeof a[s]){const i=a[s];e.push(i.data()),t.push(r),n.push(s)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}},Xb=class extends Hb{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Jp,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");pa.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let r,a=null!=n?n():pa.now();return function(){const s=null!=n?n():pa.now();return s-a<t||(a=s,r=e(...arguments)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await Ub(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await Ub(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await Ub(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await Ub(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await Ub(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):pa.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await Ub(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await Ub(e),await this.trainEnd(e))}};function Yb(e,t){return null==e&&(e={}),e instanceof Hb?[e]:Array.isArray(e)&&e[0]instanceof Hb?e:Ig(e).map((e=>new Xb(e,t)))}var Zb=class{constructor(){}static registerCallbackConstructor(e,t){pa.assert(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),Zb.checkForDuplicate(t),null==Zb.constructors[e]&&(Zb.constructors[e]=[]),Zb.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Zb.constructors)Zb.constructors[+t].forEach((t=>{if(t===e)throw new gg("Duplicate callback constructor.")}))}static clear(){Zb.constructors={}}static createCallbacks(e){const t=[];for(const n in Zb.constructors){const r=+n;e>=r&&t.push(...Zb.constructors[r])}return t.map((e=>new e))}};function Jb(e,t,n,r,a,s,i,o,u){const l=new Kb,c=[new qb,...Zb.createCallbacks(t)];null!=e&&c.push(...e),c.push(l);const h=new jb(c);return h.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:u}),{callbackList:h,history:l}}function Qb(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return _g(e,Mo.SerializationMap.getMap().classNameMap,t,"layer",n)}function ex(e,t){return iu((()=>{"float32"!==e.dtype&&(e=Ci(e,"float32"));const n=kc($y(e),t,!0),r=Kl(n.shape,pg()),a=Xh(Bc(n,r));return wu(e,a)}))}function tx(e,t){return iu((()=>Wc($y(wc(t,e)),-1)))}function nx(e,t){return iu((()=>Wc(Iu(wc(t,e)),-1)))}function rx(e,t){return iu((()=>{const n=wc(e,t),r=ml(Iu(e),pg(),Number.MAX_VALUE),a=Iu(wu(n,r));return ku(100,Wc(a,-1))}))}function ax(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return iu((()=>{if(n)t=Uh(t);else{const e=kc(t,t.shape.length-1,!0);t=wu(t,e)}return t=ml(t,pg(),1-pg()),yc(kc(ku(Ci(e,"float32"),uc(t)),t.shape.length-1))}))}function sx(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return iu((()=>{const r=Ci(Xl(vy(e)),"int32"),a=(t=ml(t,pg(),1-pg())).shape;return ax(Ju(Xi(r,a[a.length-1]),a),t,n)}))}function ix(e,t){return iu((()=>{let n;return n=ml(t,pg(),1-pg()),n=uc(wu(n,wc(1,n))),Wc(function(e,t){if(!pa.arraysEqual(e.shape,t.shape))throw new gg(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return iu((()=>{const n=Ih(t),r=yc(Iu(t));return xu(wc(n,ku(t,e)),lc(Ul(r)))}))}(e,n),-1)}))}function ox(e,t){return iu((()=>{const n=ex(e,-1),r=ex(t,-1),a=ku(n,r);return yc(kc(a,-1))}))}Zb.constructors={};var ux={meanSquaredError:tx,meanAbsoluteError:nx,meanAbsolutePercentageError:rx,meanSquaredLogarithmicError:function(e,t){return iu((()=>{const n=ml(t,pg(),Number.MAX_VALUE),r=uc(xu(1,n)),a=ml(e,pg(),Number.MAX_VALUE),s=uc(xu(1,a));return Wc($y(wc(r,s)),-1)}))},squaredHinge:function(e,t){return iu((()=>{const n=Bc(0,wc(1,ku(e,t)));return Wc($y(n),-1)}))},hinge:function(e,t){return iu((()=>{const n=Bc(0,wc(1,ku(e,t)));return Wc(n,-1)}))},categoricalHinge:function(e,t){return iu((()=>{const n=kc(ku(e,t),-1),r=vc(ku(wc(1,e),t),-1);return Bc(0,xu(1,wc(r,n)))}))},logcosh:function(e,t){return iu((()=>{const n=Math.log(2),r=wc(t,e),a=wc(xu(r,bc(ku(-2,r))),n);return Wc(a,-1)}))},categoricalCrossentropy:ax,sparseCategoricalCrossentropy:sx,binaryCrossentropy:ix,kullbackLeiblerDivergence:function(e,t){return iu((()=>{const n=ml(e,pg(),1),r=ml(t,pg(),1);return kc(ku(e,uc(wu(n,r))),-1)}))},poisson:function(e,t){return iu((()=>{const n=uc(xu(pg(),t));return Wc(wc(t,ku(e,n)),-1)}))},cosineProximity:ox};function lx(e){if("string"==typeof e){if(e in ux)return ux[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new gg(t)}return e}function cx(e,t){return iu((()=>{const n=ku(.5,eh(t)),r=by(Zl(t,n),e.dtype);return Wc(Ml(e,r),-1)}))}function hx(e,t){return iu((()=>by(Ml(_u(e,-1),_u(t,-1)),"float32")))}function dx(e,t){return iu((()=>Ci(kc(Rc(Ml(e,1),Ml(t,1))),"float32")))}function px(e,t){return iu((()=>{const n=dx(e,t),r=function(e,t){return iu((()=>Ci(kc(Rc(Ml(e,0),Ml(t,1))),"float32")))}(e,t),a=xu(n,r);return Ci(Ol(Zl(a,0),wu(n,a),0),"float32")}))}function fx(e,t){return ix(e,t)}function mx(e,t){return e.rank===t.rank&&(e=Zh(e,[e.rank-1])),(t=_u(t,-1)).dtype!==e.dtype&&(t=Ci(t,e.dtype)),Ci(Ml(e,t),"float32")}var gx=ax,yx=sx,bx={binaryAccuracy:cx,categoricalAccuracy:hx,precision:px,categoricalCrossentropy:gx,sparseCategoricalCrossentropy:yx,mse:tx,MSE:tx,mae:nx,MAE:nx,mape:rx,MAPE:rx,cosine:ox};function xx(e){if("string"==typeof e&&e in bx)return bx[e];if("string"!=typeof e&&null!=e)return e;throw new gg(`Unknown metric ${e}`)}function vx(e){if(vg(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(ux))if(ux[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(bx))if(bx[n]===e){t=n;break}return void 0!==t?t:e.name}}var wx=1048576;function kx(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!Ix(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>wx&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Ix(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!Ix(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!Ix(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function Sx(e){let t;return t=null!=e.collectedTrainableWeights?Eb(e.collectedTrainableWeights):Eb(e.trainableWeights),t}function Nx(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const a of n.inboundNodes)if(-1!==r.indexOf(a)){if(e){t=!1;break}e=!0}if(!t)break}return t}function Tx(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log,r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function Ex(e,t,n){let r;try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}Tx([`${e.name} (${e.getClassName()})`,r,e.countParams().toString()],t,n)}function Cx(e,t,n,r){let a;try{a=JSON.stringify(e.outputShape)}catch(e){a="multiple"}const s=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,r=t.nodeIndices[e],a=t.tensorIndices[e];s.push(`${n}[${r}][${a}]`)}const i=e.name,o=e.getClassName(),u=0===s.length?"":s[0];Tx([`${i} (${o})`,a,e.countParams().toString(),u],t,r);for(let e=1;e<s.length;++e)Tx(["","","",s[e]],t,r)}function _x(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function $x(e,t){if(null===e)return null;if("string"==typeof e)return Ng(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];_x(t,a,r)?n.push(r):n.push($x(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=Ng(n);t[e]=$x(r,e)}}return t}}function Ax(e,t){if(null==e)return null;if("string"==typeof e)return Sg(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];_x(t,a,r)?n.push(r):n.push(Ax(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];t[Sg(n)]="name"!==n&&"className"!==n||"string"!=typeof r?Ax(r,n):r}return t}}var Fx="3.13.0",Rx=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Rx)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new gg(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return Ci(t,e.dtype)}catch(n){throw new gg(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Rb){if(null==this.id2Value[e.id])throw new gg(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new gg(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Rb){if(null==this.id2Value[e.id])throw new gg(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new gg(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&ou(this.id2Mask)}},Dx={},Mx={};function Ox(e,t,n,r){const a=null!=n&&n.training,s=Array.isArray(e),i=s?e:[e],o=i.map((e=>e.name)),u=[],l=t.names();for(const e of o)-1!==l.indexOf(e)?u.push(t.getValue(e)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().join(",");let h,d;if(null==Dx[c]){const e=function(e,t){pa.assert(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const a=zx(e[0],t);n=a.sorted,r=a.recipientMap}else{const a=new Set;for(const s of e){const{sorted:e,recipientMap:i}=zx(s,t);for(const t of e)a.has(t.name)||(n.push(t),a.add(t.name));for(const e in i)null==r[e]&&(r[e]=new Set),i[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:Lx(r)}}(i,t);h=e.sorted,d=e.recipientCounts,Dx[c]=h,Mx[c]=d}h=Dx[c],d={},a||Object.assign(d,Mx[c]);const p=new Rx(t);for(let e=0;e<h.length;++e){if(null!=r){const e=au().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const s=h[e],i=s.sourceLayer;if(i instanceof Wb)continue;const l=[],c=[],f=[];let m=!1;for(const e of s.inputs){const n=p.getValue(e),r=p.getMask(e);l.push(n),c.push(r),null!=r&&(m=!0),a||(d[e.name]--,0!==d[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=c[0]);const g=Ig(i.apply(l,n));let y=null;i.supportsMasking&&(y=i.computeMask(l,c));const b=Px(s),x=Array.isArray(b)?b:[b];for(let e=0;e<x.length;++e){p.hasKey(x[e])||p.add(x[e],g[e],Array.isArray(y)?y[0]:y);const t=o.indexOf(x[e].name);-1!==t&&(u[t]=g[e])}a||ou(f)}return p.disposeMasks(),s?u:u[0]}function Lx(e){const t={};for(const n in e)t[n]=e[n].size;return t}function zx(e,t){const n=new Set,r=[],a={};for(const e of t.names())n.add(e);const s=[],i=[];for(s.push(e);s.length>0;){const e=s[s.length-1];if(n.has(e.name)){s.pop();continue}const t=i[i.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(s.length-1);for(const t of e.inputs)null==a[t.name]&&(a[t.name]=new Set),a[t.name].add(e.name),n.has(t.name)||s.push(t)}}return{sorted:r,recipientMap:a}}function Px(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}var Bx=class extends Lb{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=kb(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Ag(this.inputs).length!==this.inputs.length)throw new gg(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);Ag(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;vg(0===n,"input layer has >1 nodes"),vg(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof Wb))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},a={},s={},i=[],o=(e,t,n,r,a,u)=>{null!=r&&null!=a&&null!=u||(r=e.sourceLayer,a=e.nodeIndex,u=e.tensorIndex);const l=r.inboundNodes[a];if(-1!==n.indexOf(l))throw new mg(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(l))return;this.containerNodes.add(Bx.nodeKey(r,a)),r.id in s||(s[r.id]=Object.keys(s).length),-1===n.indexOf(l)&&n.push(l);const c=l.inboundLayers.length;for(let e=0;e<c;e++){const r=l.inputTensors[e],a=l.inboundLayers[e],s=l.nodeIndices[e],i=l.tensorIndices[e];o(r,t,n,a,s,i)}for(t.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);i.push(l)},u=[],l=[];for(const e of this.outputs)o(e,u,l);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let s=t[e.id];const i=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];s=Math.max(s,i),r[e.outboundLayer.id]=s,a[e.outboundLayer.id]=e.outboundLayer,t[e.id]=s;for(let r=0;r<e.inboundLayers.length;r++){const a=e.inboundLayers[r],i=e.nodeIndices[r],o=a.inboundNodes[i],u=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(s+1,u),n[o.id]=o}}const h={};for(const e in t){const r=t[e];r in h||(h[r]=[]),h[r].push(n[e])}const d={};for(const e in r){const t=r[e];t in d||(d[t]=[]),d[t].push(a[e])}let p=Object.keys(d).map((e=>parseInt(e,10))).sort($g);this.layers=[];for(const e of p){const t=d[e];t.sort(((e,t)=>{const n=s[e.id],r=s[t.id];return n<r?-1:n>r?1:0}));for(const e of t)e instanceof Bx&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=d,p=Object.keys(h).map((e=>parseInt(e,10))).sort($g);const f=this.inputs.slice(),m=[];for(const e of p)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new mg(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=h;const g=this.layers.map((e=>e.name));for(const e of g){const t=g.filter((t=>t===e)).length;if(1!==t)throw new mg(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Mb({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new gg("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n={};let r=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new gg(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}const a=[];for(const r in e){let s=r;if(null==n[r]){const e=r.split("/");s=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[s])a.push([n[s],e[r]]);else if(t)throw new gg(`Provided weight data has no target variable: ${r}`);delete n[s]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new gg(`${e.length} of ${r} weights are not set: ${e}`)}Ab(a)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Fx}`,t.backend="TensorFlow.js",t}toJSON(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=Ax(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return iu((()=>{e=Ig(e);const n=new Rx;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return Ox(this.outputs,n,t)}))}computeMask(e,t){return iu((()=>{let n;return e=Ig(e),n=null==t?xg(null,e.length):Ig(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=Sb(e);if(t.length!==this.inputLayers.length)throw new gg(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const r=this.inputLayers[e],a=t[e];n[r.name+"_0_0"]=a}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort($g);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const a=e.inboundLayers[t],s=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${a.name}_${s}_${i}`];r.push(o)}const a=Sb(t.computeOutputShape(kg(r))),s=t.inboundNodes.indexOf(e);for(let e=0;e<a.length;e++)n[`${t.name}_${s}_${e}`]=a[e]}}const a=[],s=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],a=`${t.name}_${n}_${r}`;s.push(a)}for(let e=0;e<s.length;e++){const t=s[e];vg(t in n),a.push(n[t])}return kg(a)}runInternalGraph(e,t){null==t&&(t=xg(null,e.length));const n={};for(let r=0;r<this.inputs.length;++r){const a=this.inputs[r],s=e[r],i=t[r];n[a.id]=[s,i]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort($g);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,a=e.outputTensors,s=new Array;for(const e of r)e.id in n&&s.push(n[e.id]);if(s.length===r.length){let r,i,o,u,l={};if(null!=e.callArgs&&(l=e.callArgs),1===s.length){const[e,n]=s[0];null==l.mask&&(l.mask=n),o=Ig(t.call(e,l)),u=Ig(t.computeMask(e,n)),r=[e],i=[n]}else r=s.map((e=>e[0])),i=s.map((e=>e[1])),null==l.mask&&(l.mask=i),o=Ig(t.call(r,l)),u=Ig(t.computeMask(r,i));if(t.activityRegularizer)throw new yg("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<a.length;++e){const t=a[e],r=o[e],s=u[e];n[t.id]=[r,s]}}}}const a=[],s=[],i=[];for(const e of this.outputs){vg(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,r]=n[e.id];i.push(t.shape),a.push(t),s.push(r)}return[a,s,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof Bx?1:0;for(let r=0;r<e.inboundNodes.length;r++){const a=Bx.nodeKey(e,r);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new gg(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new gg("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new gg(`No such layer: ${e}`)}calculateLosses(){return iu((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=Bx.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),a=e.getConfig(),s=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],a=Bx.nodeKey(e,n);let i={};if(this.containerNodes.has(a)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(r.inboundLayers.length>0){const e=[];for(let n=0;n<r.inboundLayers.length;n++){const a=r.inboundLayers[n],s=r.nodeIndices[n],o=r.tensorIndices[n];let u=t[Bx.nodeKey(a,s)];null==u&&(u=0),e.push([a.name,u,o,i])}s.push(e)}}}const i={};i.name=e.name,i.className=r,i.config=a,i.inboundNodes=s,n.push(i)}e.layers=n;const r=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],a=this.inputLayersNodeIndices[e],s=Bx.nodeKey(n,a);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];r.push([n.name,i,o])}e.inputLayers=r;const a=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],s=Bx.nodeKey(n,r);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];a.push([n.name,i,o])}return e.outputLayers=a,e}static fromConfig(e,t){let n=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r={},a={};function s(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}function i(e,t){const n=[];let a;for(const i of t){const o=i[0],u=i[1],l=i[2];if(a=null==i[3]?{}:i[3],!(o in r))return void s(e,t);const c=r[o];if(c.inboundNodes.length<=u)return void s(e,t);const h=c.inboundNodes[u];n.push(h.outputTensors[l])}n.length>0&&e.apply(kg(n),a)}function o(e){const a=e.name,i=Qb(e,null!=t.customObjects?t.customObjects:{});i.setFastWeightInitDuringBuild(n),r[a]=i,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new gg(`Corrupted configuration, expected array for nodeData: ${e}`);s(i,e)}))}const u=t.name,l=t.layers;for(const e of l)o(e);for(;!Fg(a);)for(const e of l){const t=r[e.name];if(t.name in a){const e=a[t.name];delete a[t.name];for(const n of e)i(t,n)}}const c=[],h=[],d=t.inputLayers;for(const e of d){const t=e[0],n=e[1],a=e[2];vg(t in r);const s=r[t].inboundNodes[n].outputTensors;c.push(s[a])}const p=t.outputLayers;for(const e of p){const t=e[0],n=e[1],a=e[2];vg(t in r);const s=r[t].inboundNodes[n].outputTensors;h.push(s[a])}return new e({inputs:c,outputs:h,name:u})}get stateful(){if(this._stateful)throw new gg("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){iu((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}};function Wx(e,t){return function(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided classWeight is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so classWeight must be either an array with ${r} elements or an object with ${t} keys. Provided classWeight not understood: ${JSON.stringify(e)}`)}(e,t)}async function Vx(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=iu((()=>{if(1===e.shape.length)return _i(e);if(2===e.shape.length){if(e.shape[1]>1)return _u(e,1);if(1===e.shape[1])return Ju(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());ou(t);const a=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);a.push(n[e])})),nd(a,"float32")}return null}function Ux(e,t){return ku(e,t)}function Gx(e,t){let n,r;const a=t;n=a.xs,r=a.ys,pa.assert(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const s=Hx("input",e.inputNames,n),i=Hx("output",e.outputNames,r),o=s[0].shape[0];pa.assert(s.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),pa.assert(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<s.length;t++)pa.assert(s[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${s[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)pa.assert(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:s,ys:i}}function Hx(e,t,n){if(n instanceof ja)return[n];if(Array.isArray(n))return pa.assert(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const a of t){if(null==n[a])throw new gg(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}function jx(e){return"function"==typeof e.iterator}function qx(e){pa.assert(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function Kx(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>wy(e,t,n-t))):wy(e,t,n-t)}function Xx(e,t){return iu((()=>null==e?null:Array.isArray(e)?e.map((e=>Xx(e,t))):_y(e,"int32"===t.dtype?t:Ci(t,"int32"))))}function Yx(e,t){const n=[];let r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}async function Zx(e,t,n,r,a,s,i,o,u,l,c,h,d,p,f){null==a&&(a=32),null==s&&(s=1),null==c&&(c=!0),null==d&&(d=0);let m=!1;if(null!=u&&null!=l&&(m=!0),null!=f&&(m=!0,null==p))throw new gg("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const g=e.checkNumSamples(n,a,p,"steps_per_epoch");let y;null!=g&&(y=yy(0,g)),null==i&&(i=1);const{callbackList:b,history:x}=Jb(o,i,s,d,g,p,a,m,h);b.setModel(e),e.history=x,await b.onTrainBegin(),e.stopTraining_=!1;for(let i=d;i<s;++i){await b.onEpochBegin(i);const s={};if(null!=p)throw new yg("stepsPerEpoch mode is not implemented yet.");{if("batch"===c)throw new yg("batch shuffling is not implemneted yet");c&&pa.shuffle(y);const i=nd(y),o=Yx(g,a);for(let c=0;c<o.length;++c){const h={};if(await b.onBatchBegin(c,h),iu((()=>{const d=o[c][0],p=o[c][1],f=wy(i,d,p-d);h.batch=c,h.size=p-d;const g=Xx(n,f),y=t(g);for(let e=0;e<r.length;++e){const t=r[e],n=y[e];h[t]=n,uu(n)}if(c===o.length-1&&m){const t=e.testLoop(u,l,a);for(let e=0;e<r.length;++e){const n=r[e],a=t[e];uu(a),s["val_"+n]=a}}})),await b.onBatchEnd(c,h),Gb(h),e.stopTraining_)break}i.dispose()}if(await b.onEpochEnd(i,s),e.stopTraining_)break}return await b.onTrainEnd(),await e.history.syncData(),e.history}function Jx(e){const t=[];e instanceof ja&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(xy(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function Qx(e,t){if(null==e)return;const n=[];if(t instanceof ja)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof ja)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const t in e){const a=e[t];-1===n.indexOf(a.id)&&r.push(a)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function ev(e){return Array.isArray(e)}function tv(e){return!function(e){return e instanceof ja}(e)&&!ev(e)}function nv(e,t,n){let r,a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(null==t||0===t.length){if(null!=e){let t=!1;if(ev(e)&&e.length>0)t=!0;else if(tv(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new gg(`Error when checking model ${s} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));if(tv(e)){e=e,r=[];for(const n of t){if(null==e[n])throw new gg(`No data provided for "${n}". Need data for each key in: ${t}`);r.push(e[n])}}else if(ev(e)){if((e=e).length!==t.length)throw new gg(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);r=e}else{if(e=e,t.length>1)throw new gg(`The model ${s} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);r=[e]}if(r=Jx(r),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=r[e];if(i.shape.length!==n[e].length)throw new gg(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!a)continue;const r=i.shape[t],o=n[e][t];if(null!=o&&o>=0&&r!==o)throw new gg(`${s} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${s} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return r}function rv(e,t,n){let r,a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(Array.isArray(e)){if(e.length!==t.length)throw new gg(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);r=e}else{if(t.length>1)throw new gg(`The model expects ${t.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);r=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=r[e];if(i.shape.length!==n[e].length)throw new gg(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let r=0;r<n[e].length;++r){if(0===r&&!a)continue;const o=i.shape[r],u=n[e][r];if(null!=u&&u!==o)throw new gg(`Error when checking ${s}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}var av=class extends Bx{constructor(e){super(e),this.isTraining=!1}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;if(!this.built)throw new gg("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:console.log;const a=Nx(e),s=["Layer (type)","Output shape","Param #"];let i;if(a?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!a){s.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),Tx(s,n,r),r("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)a?Ex(o[e],n,r):Cx(o[e],n,i,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const u=Sx(e),l=Eb(e.nonTrainableWeights);r(`Total params: ${u+l}`),r(`Trainable params: ${u}`),r(`Non-trainable params: ${l}`),r("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>Yp.adagrad(.01),Adadelta:()=>Yp.adadelta(1,.95,pg()),Adam:()=>Yp.adam(.001,.9,.999,pg()),Adamax:()=>Yp.adamax(.002,.9,.999,pg(),0),RMSProp:()=>Yp.rmsprop(.001,.9,0,pg()),SGD:()=>Yp.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new gg(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Wp))throw new gg("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new gg(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>lx(e)))}else{const n=lx(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new gg(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(lx(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],ly("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),a=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};ly("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,r,s;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let a;1===t[t.length-1]||this.lossFunctions[e]===ix?-1!==["accuracy","acc"].indexOf(i)?r=cx:-1!==["crossentropy","ce"].indexOf(i)&&(r=fx):this.lossFunctions[e]===sx?-1!==["accuracy","acc"].indexOf(i)?r=mx:-1!==["crossentropy","ce"].indexOf(i)&&(r=yx):-1!==["accuracy","acc"].indexOf(i)?r=hx:-1!==["crossentropy","ce"].indexOf(i)&&(r=gx),-1!==["accuracy","acc"].indexOf(i)?a="acc":-1!==["crossentropy","ce"].indexOf(i)&&(a="ce"),s=r,n=""+a}else{const e=xx(i);s=e,n=""+vx(i)}let t;ly(n,(()=>{t=s})),a(e,n,t)}})(r[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=null==n.batchSize?32:n.batchSize;qx(r);const a=this.standardizeUserDataXY(e,t,!0,r);try{const s=a[0].concat(a[1]);this.makeTestFunction();const i=this.testFunction;return kg(this.testLoop(i,s,r,n.verbose,n.steps))}finally{Qx(a[0],e),Qx(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,a=e.testFunction;let s=[];if(n.verbose>0)throw new yg("Verbose mode is not implemented yet.");pa.assert(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"==typeof t.next?t:await t.iterator();let o=0,u=0;for(;!r||u<n.batches;){const t=await i.next();if(s=iu((()=>{if(t.value){const{xs:n,ys:r}=Gx(e,t.value),i=n.concat(r),l=iu((()=>a(i)));if(ou(i),0===u)for(let e=0;e<l.length;++e)s.push(Fh(0));const c=i[0].shape[0];for(let e=0;e<l.length;++e){const t=l[e],n=s[e];s[e]=iu((()=>xu(s[e],ku(c,t)))),u>0&&ou(n)}ou(l),o+=c,++u}return s})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<s.length;++e){const t=s[e];s[e]=wu(s[e],o),ou(t)}return kg(s)}(this,e,t)}checkNumSamples(e,t,n){let r,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"steps";if(null!=n){if(r=null,null!=t)throw new gg(`If ${a} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new gg(`Either the input data should have a defined shape, or ${a} shoud be specified.`);r=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return r}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new gg("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],a=this.retrieveSymbolicTensors(r),s=new Rx;if(e instanceof ja&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new gg(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new gg(`No value is provided for the model's input ${t.name}`);s.add(t,n)}const i=Ox(a,s);return n?i:i[0]}retrieveSymbolicTensors(e){const t=xg(null,e.length);let n=e.length;for(const r of this.layers){const a=Array.isArray(r.output)?r.output:[r.output],s=a.map((e=>e.name));for(let r=0;r<e.length;++r){const i=s.indexOf(e[r]);if(-1!==i&&(t[r]=a[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new gg(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:32,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return iu((()=>{const r=this.checkNumSamples(e);if(n)throw new yg("Verbose predictLoop() is not implemented yet.");const a=Yx(r,t),s=this.outputs.map((e=>[]));for(let t=0;t<a.length;++t)iu((()=>{const n=a[t][0],r=a[t][1],s=Kx(e,n,r),i=[];if(Array.isArray(s))for(let e=0;e<s.length;++e)i.push({key:this.inputs[e],value:s[e]});else i.push({key:this.inputs[0],value:s});const o=new Rx(i);return Ox(this.outputs,o)})).forEach(((e,t)=>s[t].push(e)));return kg(s.map((e=>tl(e,0))))}))}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=Jx(e);rv(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==t.batchSize?32:t.batchSize;return qx(r),this.predictLoop(n,r)}finally{Qx(n,e)}}predictOnBatch(e){rv(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t){let n=arguments.length>3?arguments[3]:void 0;if(null==this.optimizer_)throw new mg("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===sx?r.push(t.slice(0,t.length-1).concat([1])):r.push(t)}if(function(e,t,n){const r=Ag(e.map((e=>e.shape[0])));r.sort();const a=Ag(t.map((e=>e.shape[0])));if(a.sort(),r.length>1)throw new gg(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(a.length>1)throw new gg(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&a.length>0&&!pa.arraysEqual(r,a))throw new gg(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${a[0]} target sample(s).`)}(e=nv(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=nv(t,this.feedOutputNames,r,!1,"target")),function(e,t,n){const r=[tx,ix,ax];for(let a=0;a<e.length;++a){const s=e[a],i=t[a],o=n[a];if(null!=i){if(i===ax&&1===s.shape[s.shape.length-1])throw new gg(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const e=s.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],a=t[n];if(null!=a&&r!==a)throw new gg(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=n&&n>0&&e[0].shape[0]%n!=0)throw new gg(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${n}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r){let a=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],s=arguments.length>5?arguments[5]:void 0;const[i,o]=this.standardizeUserDataXY(e,t,a,s);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const e=Wx(r,this.outputNames);u=[];for(let t=0;t<e.length;++t)u.push(await Vx(o[t],null,e[t]))}return[i,o,u]}testLoop(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=arguments.length>4?arguments[4]:void 0;return iu((()=>{const s=this.checkNumSamples(t,n,a,"steps"),i=[];if(r>0)throw new yg("Verbose mode is not implemented yet.");if(null!=a)throw new yg("steps mode in testLoop() is not implemented yet");{const r=Yx(s,n),a=nd(yy(0,s));for(let n=0;n<r.length;++n){const s=r[n][0],o=r[n][1],u=wy(a,s,o-s),l=Xx(t,u),c=e(l);if(0===n)for(let e=0;e<c.length;++e)i.push(Fh(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=xu(i[e],ku(o-s,t))}}for(let e=0;e<i.length;++e)i[e]=wu(i[e],s)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let a=r;wg(e,r)>1&&(a+=`_${wg(e.slice(0,n),r)}`),t.push(a)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new Rx(e),o=Ox(this.outputs,i,{training:!0});let u;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],o[e]);null!=a[e]&&(n=Ux(n,a[e]));const s=Wc(n);t.push(s),u=0===e?n:xu(u,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],a=this.metricsTensors[e][1];n=Wc(t(r[a],o[a]))}uu(n),s.push(n)}return u=Wc(u),this.calculateLosses().forEach((e=>{u=xu(u,e)})),u}),!0,i)].concat(s)}}makeTestFunction(){this.testFunction=e=>iu((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:r[e]});const i=new Rx(s),o=Ox(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],s=Wc(r(a[e],o[e]));n=0===e?s:xu(n,s),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],s=Wc(n(a[r],o[r]));t.push(s)}return t}))}async fit(e,t){return async function(e,t,n){let r,a,s,i,o,u,l,c,h,d=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const p=null==d.batchSize?32:d.batchSize;qx(p);const f=!1,m=await e.standardizeUserData(t,n,d.sampleWeight,d.classWeight,f,p);r=m[0],a=m[1],h=m[2];let g,y=!1;if(null!=d.validationData&&d.validationData.length>0){if(y=!0,2!==d.validationData.length)throw 3===d.validationData.length?new yg("validationData including sample weights is not supported yet."):new gg(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${d.validationData} is invalid.`);o=d.validationData[0],u=d.validationData[1];const t=!0,n=await e.standardizeUserData(o,u,null,null,t,p);l=n[0],c=n[1],g=l.concat(c)}else if(null!=d.validationSplit&&d.validationSplit>0&&d.validationSplit<1){y=!0;const e=Math.floor(r[0].shape[0]*(1-d.validationSplit)),t=r[0].shape[0];l=Kx(r,e,t),s=r,r=Kx(r,0,e),c=Kx(a,e,t),i=a,a=Kx(a,0,e),g=l.concat(c)}else null!=d.validationSteps&&(y=!0);const b=r.concat(a).concat(h);e.checkTrainableWeightsConsistency();const x=e.makeTrainFunction(),v=e.getDedupedMetricsNames();let w,k;y?(e.makeTestFunction(),w=e.testFunction,k=v.slice().concat(v.map((e=>"val_"+e)))):(w=null,g=[],k=v.slice());const I=Yb(d.callbacks,d.yieldEvery);return await Zx(e,x,b,v,p,d.epochs,d.verbose,I,w,g,d.shuffle,k,d.initialEpoch,null,null)}finally{e.isTraining=!1,Qx(r,t),Qx(a,n),Qx(s,t),Qx(i,n),Qx(l,o),Qx(c,u),null!=h&&ou(h)}}(this,e,t,arguments.length>2&&void 0!==arguments[2]?arguments[2]:{})}async fitDataset(e,t){return async function(e,t,n){const r=null!=n.batchesPerEpoch;if(pa.assert(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),pa.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),pa.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),pa.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),pa.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const a=null!=n.validationData;let s,i;if(a)if(jx(n.validationData))pa.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new yg("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);s=e.xs,i=e.ys}const o=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let l;l=a?u.slice().concat(u.map((e=>"val_"+e))):u.slice();const c=Yb(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=Jb(c,h,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,a,l);d.setModel(e),e.history=p,await d.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const l={};await d.onEpochBegin(f);let c=0,h=0;for(r||(m=await t.iterator());!r||c<n.batchesPerEpoch;){const t=await m.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(null!=t.value){const{xs:r,ys:a}=Gx(e,t.value),s={};s.batch=h,s.size=r[0].shape[0],await d.onBatchBegin(h,s);const i=[];if(null!=n.classWeight){const t=Wx(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await Vx(a[e],null,t[e]))}const l=r.concat(a).concat(i),p=o(l);ou(l);for(let e=0;e<u.length;++e){const t=u[e],n=p[e];s[t]=n,uu(n)}await d.onBatchEnd(h,s),Gb(s),h++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(a){let t;t=jx(n.validationData)?Ig(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):Ig(e.evaluate(s,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)l[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,l),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],a=n[1],s=this.makeTrainFunction()(r.concat(a)),i=[];for(const e of s){const t=await e.data();i.push(t[0])}return ou(s),Qx(n[0],e),Qx(n[1],t),kg(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:a[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=au().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-au().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=Sg(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>Sg(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=Sg(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[Sg(vx(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>Sg(vx(e))));{const e={};for(const t in this.metrics)e[t]=Sg(vx(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Qb($x(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=Ng(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>Ng(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=Ng(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>Ng(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=Ng(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=Ai.getSaveHandlers(e);if(0===t.length)throw new gg(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new gg(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new gg("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await Ai.encodeWeights(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${Fx}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:a}=await Ai.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...a),n.data=Ai.concatenateArrayBuffers([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;kx(this.userDefinedMetadata,this.name,e),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){kx(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};av.className="Model",Mo.registerClass(av);var sv=class extends av{};async function iv(e,t){"modelTopology"in e||(e={modelTopology:e});let n=(e=e).modelTopology;null!=n.model_config&&(n=n.model_config);const r=Qb($x(n),t);if(null!=e.weightsManifest){const t=await Ai.loadWeights(e.weightsManifest,e.pathPrefix,r.weights.map((e=>e.originalName))),n={};for(const e of r.weights)n[e.originalName]=t[e.originalName];r.loadWeights(n),ou(t)}return r}sv.className="Functional",Mo.registerClass(sv);var ov=class extends av{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:kb("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new gg(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof ov||e instanceof av;let n;if(t){if(n=e,1!==n.outputs.length)throw new gg("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new gg("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new gg("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=Vb({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new gg(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new gg("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=zb(this.outputs[0])}this.inboundNodes=[],new Mb({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:xg(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Tb(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new av({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new mg("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new mg("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new mg("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new mg("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t){let n,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new gg("Legacy serialization format not supported yet.");n=t}else pa.assert(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),n=t.layers,delete t.layers,a=t;const s=new e(a);if(!(s instanceof ov))throw new yg(`Sequential.fromConfig called on non-Sequential input: ${s}`);for(const e of n){const t=Qb(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),s.add(t)}return s}set stopTraining(e){if(null==this.model)throw new gg("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new gg("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}};function uv(e){return new av(e)}function lv(e){return new ov(e)}function cv(e,t){return null==t&&(t={}),async function(e,t){if(null==t&&(t={}),"string"==typeof e){const n=Ai.getLoadHandlers(e,t);if(0===n.length)n.push(Ai.browserHTTPRequest(e,t));else if(n.length>1)throw new gg(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new gg("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await e.load();let a=r.modelTopology;null!=a.model_config&&(a=a.model_config);const s=null==n.strict||n.strict,i=null!=r.weightData&&null!=r.weightSpecs&&s,o=Qb($x(a),void 0,i),u=r.trainingConfig;if(null!=u&&o.loadTrainingConfig(u),null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new gg("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=Ai.decodeWeights(e,t),r={},a=[];return t.forEach((e=>{"optimizer"===e.group?a.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]})),{modelWeights:r,optimizerWeights:a}}(r.weightData,r.weightSpecs);o.loadWeights(e,s),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),ou(e),ou(t.map((e=>e.tensor)))}return o}(e,0,t)}(e,t)}function hv(e){return Vb(e)}function dv(e,t){Zb.registerCallbackConstructor(e,t)}ov.className="Sequential",Mo.registerClass(ov);var pv=class extends Mo.Serializable{getConfig(){return{}}},fv=class extends pv{apply(e){return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(1!==t)throw new yg(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Wl(e)}(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:1)}};fv.className="elu",Mo.registerClass(fv);var mv=class extends pv{apply(e){return Rh(e)}};mv.className="selu",Mo.registerClass(mv);var gv=class extends pv{apply(e){return Ih(e)}};gv.className="relu",Mo.registerClass(gv);var yv=class extends pv{apply(e){return iu((()=>jc(6,Ih(e))))}};yv.className="relu6",Mo.registerClass(yv);var bv=class extends pv{apply(e){return e}};bv.className="linear",Mo.registerClass(bv);var xv=class extends pv{apply(e){return nl(e)}};xv.className="sigmoid",Mo.registerClass(xv);var vv=class extends pv{apply(e){return function(e){return iu((()=>{const t=xu(.5,ku(.2,e));return ml(t,0,1)}))}(e)}};vv.className="hardSigmoid",Mo.registerClass(vv);var wv=class extends pv{apply(e){return bc(e)}};wv.className="softplus",Mo.registerClass(wv);var kv=class extends pv{apply(e){return function(e){return iu((()=>wu(e,xu(Iu(e),1))))}(e)}};kv.className="softsign",Mo.registerClass(kv);var Iv=class extends pv{apply(e){return al(e)}};Iv.className="tanh",Mo.registerClass(Iv);var Sv=class extends pv{apply(e){return Uh(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1)}};Sv.className="softmax",Mo.registerClass(Sv);var Nv=class extends pv{apply(e){return Ic(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1)}};Nv.className="logSoftmax",Mo.registerClass(Nv);var Tv=class extends pv{apply(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return iu((()=>ku(nl(ku(e,t)),e)))}};Tv.className="swish",Mo.registerClass(Tv);var Ev=class extends pv{apply(e){return iu((()=>ku(e,al(bc(e)))))}};function Cv(e){return e.getClassName()}function _v(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return _g(e,Mo.SerializationMap.getMap().classNameMap,t,"activation")}function $v(e){if(null==e){return _v({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},_v(t)}return e instanceof pv?e:_v(e)}function Av(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}Ev.className="mish",Mo.registerClass(Ev);var Fv=class extends Mo.Serializable{},Rv=class extends Fv{constructor(e){super(),Av(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return iu((()=>{let t=Vc([1]);return this.hasL1&&(t=xu(t,kc(ku(this.l1,Iu(e))))),this.hasL2&&(t=xu(t,kc(ku(this.l2,$y(e))))),Ju(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};Rv.className="L1L2",Mo.registerClass(Rv);var Dv={l1l2:"L1L2"};function Mv(e){return Eg(e)}function Ov(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return _g(e,Mo.SerializationMap.getMap().classNameMap,t,"regularizer")}function Lv(e){return null==e?null:"string"==typeof e?Ov({className:e in Dv?Dv[e]:e,config:{}}):e instanceof Fv?e:Ov(e)}var zv=class extends Lb{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Nb(e);let n=Ih(e);return null!=this.maxValue&&(n=ml(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};zv.className="ReLU",Mo.registerClass(zv);var Pv=class extends Lb{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Nb(e);return rc(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Pv.className="LeakyReLU",Mo.registerClass(Pv);var Bv=class extends Lb{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=nb(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Lv(e.alphaRegularizer),this.alphaConstraint=qg(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new gg(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=Tb(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new Fb({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Nb(e),ch(e,this.alpha.read())}getConfig(){const e={alphaInitializer:tb(this.alphaInitializer),alphaRegularizer:Mv(this.alphaRegularizer),alphaConstraint:Hg(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};Bv.className="PReLU",Mo.registerClass(Bv);var Wv=class extends Lb{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new yg(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Nb(e);return Wl(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Wv.className="ELU",Mo.registerClass(Wv);var Vv=class extends Lb{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=Nb(e);return ku(n,Ci(Zl(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};Vv.className="ThresholdedReLU",Mo.registerClass(Vv);var Uv=class extends Lb{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Sv).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=Nb(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};function Gv(e,t,n){if("number"==typeof e)return xg(e,t);if(e.length!==t)throw new gg(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let a=0;a<t;++a){const s=e[a];if((r=s)!==parseInt(r.toString(),10))throw new gg(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${s}`)}return e;var r}function Hv(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1;if(null==e)return e;const s=t+(t-1)*(a-1);let i;return i="same"===n?e:e-s+1,Math.floor((i+r-1)/r)}function jv(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+gy([n-t,0]);else{if("same"!==r)throw new gg(`Unsupport padding mode: ${r}.`);e*=t}return e}function qv(e,t){return iu((()=>(sy(t),"channelsFirst"===t?Yi(e,[0,2,3,1]):e)))}function Kv(e,t){return iu((()=>(sy(t),"channelsFirst"===t?Yi(e,[0,2,3,4,1]):e)))}function Xv(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1],a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,i=arguments.length>6?arguments[6]:void 0,o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null;return iu((()=>{if(null==s&&(s="channelsLast"),sy(s),3!==e.rank&&4!==e.rank)throw new gg(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new gg(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=qv(e,s);if("causal"===a)throw new yg("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=Ed.conv2d({x:u,filter:t,strides:r,pad:"same"===a?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===s&&(u=Yi(u,[0,3,1,2])),u}))}Uv.className="Softmax",Mo.registerClass(Uv);var Yv=class extends Lb{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Yv.verifyArgs(t),this.rank=e,Mg(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new yg(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Gv(t.kernelSize,e,"kernelSize"),this.strides=Gv(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,iy(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,sy(this.dataFormat),this.activation=$v(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=nb(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=qg(t.biasConstraint),this.biasRegularizer=Lv(t.biasRegularizer),this.activityRegularizer=Lv(t.activityRegularizer),this.dilationRate=Gv(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new gg(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new gg(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new gg(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(vg("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!Dg(e.kernelSize,"number",1,3))throw new gg(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Cv(this.activation),useBias:this.useBias,biasInitializer:tb(this.biasInitializer),biasRegularizer:Mv(this.biasRegularizer),activityRegularizer:Mv(this.activityRegularizer),biasConstraint:Hg(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},Zv=class extends Yv{constructor(e,t){super(e,t),this.kernel=null,Zv.verifyArgs(t),this.filters=t.filters,Mg(this.filters,"filters"),this.kernelInitializer=nb(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=qg(t.kernelConstraint),this.kernelRegularizer=Lv(t.kernelRegularizer)}build(e){e=Tb(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new gg(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return iu((()=>{let t;e=Nb(e);const n=null==this.bias?null:this.bias.read(),r=Lg(this.activation.getClassName());if(null!=r&&2===this.rank)t=Xv(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1;return iu((()=>{if(null==s&&(s="channelsLast"),sy(s),3!==e.shape.length)throw new gg(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new gg(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new gg(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===s&&(e=Yi(e,[0,2,1])),"causal"===a)throw new yg("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=wl(e,t,r,"same"===a?"same":"valid","NWC",i);return null!=n&&(o=Fy(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Xv(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new yg("convolutions greater than 3D are not implemented yet.");t=function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1,1],a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,i=arguments.length>6?arguments[6]:void 0;return iu((()=>{if(null==s&&(s="channelsLast"),sy(s),4!==e.rank&&5!==e.rank)throw new gg(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new gg(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=Kv(e,s);if("causal"===a)throw new yg("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Sl(o,t,r,"same"===a?"same":"valid","NDHWC",i),null!=n&&(o=Fy(o,n)),"channelsFirst"===s&&(o=Yi(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=Tb(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const r=Hv(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:tb(this.kernelInitializer),kernelRegularizer:Mv(this.kernelRegularizer),kernelConstraint:Hg(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new gg(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},Jv=class extends Zv{constructor(e){super(2,e),Jv.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Dg(e.kernelSize,"number",1,2))throw new gg(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}};Jv.className="Conv2D",Mo.registerClass(Jv);var Qv=class extends Zv{constructor(e){super(3,e),Qv.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new gg(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}};Qv.className="Conv3D",Mo.registerClass(Qv);var ew=class extends Jv{constructor(e){if(super(e),this.inputSpec=[new Fb({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new gg(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=Tb(e)).length)throw new gg("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new gg("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Fb({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return iu((()=>{let t=Nb(e);if(4!==t.shape.length)throw new gg(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let a,s;"channelsFirst"===this.dataFormat?(a=2,s=3):(a=1,s=2);const i=n[a],o=n[s],u=this.kernelSize[0],l=this.kernelSize[1],c=this.strides[0],h=this.strides[1],d=[r,jv(i,c,u,this.padding),jv(o,h,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Yi(t,[0,2,3,1]));let p=Il(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=Yi(p,[0,3,1,2])),null!=this.bias&&(p=Fy(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(e){const t=(e=Tb(e)).slice();let n,r,a;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3):(n=3,r=1,a=2);const s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[r]=jv(t[r],o,s,this.padding),t[a]=jv(t[a],u,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}};ew.className="Conv2DTranspose",Mo.registerClass(ew);var tw=class extends Qv{constructor(e){if(super(e),this.inputSpec=[new Fb({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new gg(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=Tb(e)).length)throw new gg("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new gg("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Fb({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return iu((()=>{let t=Nb(e);if(5!==t.shape.length)throw new gg(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let a,s,i;"channelsFirst"===this.dataFormat?(i=2,a=3,s=4):(i=1,a=2,s=3);const o=n[i],u=n[a],l=n[s],c=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],p=this.strides[0],f=this.strides[1],m=this.strides[2],g=[r,jv(o,p,c,this.padding),jv(u,f,h,this.padding),jv(l,m,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Yi(t,[0,2,3,4,1]));let y=Tl(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=Yi(y,[0,4,1,2,3])),null!==this.bias&&(y=Fy(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(e){const t=(e=Tb(e)).slice();let n,r,a,s;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3,s=4):(n=4,r=1,a=2,s=3);const i=this.kernelSize[0],o=this.kernelSize[1],u=this.kernelSize[2],l=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[r]=jv(t[r],l,i,this.padding),t[a]=jv(t[a],c,o,this.padding),t[s]=jv(t[s],h,u,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}};tw.className="Conv3DTranspose",Mo.registerClass(tw);var nw=class extends Zv{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new gg("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new gg("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new gg(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=nb(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Lv(t.depthwiseRegularizer),this.depthwiseConstraint=qg(t.depthwiseConstraint),this.pointwiseInitializer=nb(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Lv(t.pointwiseRegularizer),this.pointwiseConstraint=qg(t.pointwiseConstraint)}build(e){if((e=Tb(e)).length<this.rank+2)throw new gg(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new gg(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let e=0;e<this.rank;++e)a.push(1);a.push(n*this.depthMultiplier,this.filters);const s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new Fb({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return iu((()=>{let t;if(e=Nb(e),1===this.rank)throw new yg("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Yi(e,[0,2,3,1])),t=Dh(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=Fy(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=Yi(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=tb(this.depthwiseInitializer),e.pointwiseInitializer=tb(this.pointwiseInitializer),e.depthwiseRegularizer=Mv(this.depthwiseRegularizer),e.pointwiseRegularizer=Mv(this.pointwiseRegularizer),e.depthwiseConstraint=Hg(this.depthwiseConstraint),e.pointwiseConstraint=Hg(this.pointwiseConstraint),e}};nw.className="SeparableConv";var rw=class extends nw{constructor(e){super(2,e)}};rw.className="SeparableConv2D",Mo.registerClass(rw);var aw=class extends Zv{constructor(e){super(1,e),aw.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Dg(e.kernelSize,"number",1,1))throw new gg(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}};aw.className="Conv1D",Mo.registerClass(aw);var sw=class extends Lb{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return iu((()=>{if(e=Nb(e),"channelsLast"===this.dataFormat){const t=Iy(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Iy(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=Iy(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Iy(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};sw.className="Cropping2D",Mo.registerClass(sw);var iw=class extends Lb{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,sy(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,Rg(ey,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return iu((()=>{let t=Nb(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=Yi(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],a="nearest"===this.interpolation?Op.resizeNearestNeighbor(t,[e,r]):Op.resizeBilinear(t,[e,r]);return Yi(a,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?Op.resizeNearestNeighbor(t,[e,r]):Op.resizeBilinear(t,[e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};iw.className="UpSampling2D",Mo.registerClass(iw);var ow=class extends Yv{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=nb(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=qg(e.depthwiseConstraint),this.depthwiseRegularizer=Lv(e.depthwiseRegularizer)}build(e){if((e=Tb(e)).length<4)throw new gg(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new gg(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return iu((()=>{let t=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[1,1],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"valid",a=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0;return iu((()=>{null==a&&(a="channelsLast"),sy(a);let i=qv(e,a);if(4!==e.rank)throw new gg(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new gg(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Fl(i,t,n,"same"===r?"same":"valid","NHWC",s),"channelsFirst"===a&&(i=Yi(i,[0,3,1,2])),i}))}(e=Nb(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=Fy(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=Tb(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=Hv(t,this.kernelSize[0],this.padding,this.strides[0]),s=Hv(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,a,s]:[e[0],a,s,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=tb(this.depthwiseInitializer),e.depthwiseRegularizer=Mv(this.depthwiseRegularizer),e.depthwiseConstraint=Hg(this.depthwiseRegularizer),e}};function uw(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new gg("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=a(t),constants:n=a(n)}}function lw(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0,i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];return iu((()=>{const u=t.shape.length;if(u<3)throw new gg(`Input should be at least 3D, but is ${u}D.`);const l=[1,0].concat(yy(2,u));if(t=Yi(t,l),null!=s)throw new yg("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&(a=Ci(Ci(a,"bool"),"float32"),a.rank===u-1&&(a=Gl(a,-1)),a=Yi(a,l)),r&&(t=Nh(t,0),null!=a&&(a=Nh(a,0)));const c=[];let h,d=n;const p=t.shape[0],f=hd(t);let m,g;null!=a&&(m=hd(a));for(let t=0;t<p;++t){const n=f[t],r=iu((()=>e(n,d)));if(null==a)h=r[0],d=r[1];else{const e=iu((()=>{const e=m[t],n=wc(eh(e),e);return{output:xu(ku(r[0],e),ku(d[0],n)),newStates:d.map(((t,a)=>xu(ku(r[1][a],e),ku(t,n))))}}));h=e.output,d=e.newStates}o&&c.push(h)}return o&&(g=Jh(c,1)),[h,g,d]}))}ow.className="DepthwiseConv2D",Mo.registerClass(ow);var cw=class extends Lb{constructor(e){let t;if(super(e),null==e.cell)throw new gg("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new bw({cells:e.cell}):e.cell,null==t.stateSize)throw new gg("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Fb({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?yy(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){Ib(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return iu((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new yg("Constants support is not implemented in RNN yet.");Ib(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Fb({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let a;if(this.cell.build(r),a=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!pa.arraysEqual(this.stateSpec.map((e=>e.shape[e.shape.length-1])),a))throw new gg(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map((e=>new Fb({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];iu((()=>{if(!this.stateful)throw new fg("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new gg("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Vc([n,e]))):this.states_=[Vc([n,this.cell.stateSize])];else if(null==e)ou(this.states_),null!=this.keptStates&&(ou(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Vc([n,e]))):this.states_[0]=Vc([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new gg(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):ou(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,s=[n,a];if(!pa.arraysEqual(r.shape,s))throw new gg(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>uu(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=uw(e,n,r,this.numConstants);e=a.inputs,n=a.initialState,r=a.constants;let s=[],i=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new Fb({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,s=s.concat(r),this.numConstants=r.length),s[0]instanceof Rb){const n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return iu((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let a=null==t?null:t.initialState;e=Nb(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new gg(`RNN Layer has ${s} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=lw(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),u=o[0],l=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?l:u;return this.returnState?[h].concat(c):h}))}getInitialState(e){return iu((()=>{let t=Vc(e.shape);return t=kc(t,[1,2]),t=xy(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?Ty(t,[1,e]):t)):this.cell.stateSize>1?[Ty(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===cw.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=Qb(t.cell,n);return new e(Object.assign(t,{cell:r}))}};cw.className="RNN",Mo.registerClass(cw);var hw=class extends Lb{},dw=class extends hw{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Mg(this.units,"units"),this.activation=$v(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=nb(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=nb(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=nb(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Lv(e.kernelRegularizer),this.recurrentRegularizer=Lv(e.recurrentRegularizer),this.biasRegularizer=Lv(e.biasRegularizer),this.kernelConstraint=qg(e.kernelConstraint),this.recurrentConstraint=qg(e.recurrentConstraint),this.biasConstraint=qg(e.biasConstraint),this.dropout=my([1,gy([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=my([1,gy([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Tb(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return iu((()=>{if(2!==(e=e).length)throw new gg(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let a;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=xw({ones:()=>eh(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=xw({ones:()=>eh(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,i=this.recurrentDropoutMask;a=Cy(null!=s?ku(e,s):e,this.kernel.read()),null!=this.bias&&(a=Fy(a,this.bias.read())),null!=i&&(n=ku(n,i));let o=xu(a,Cy(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Cv(this.activation),useBias:this.useBias,kernelInitializer:tb(this.kernelInitializer),recurrentInitializer:tb(this.recurrentInitializer),biasInitializer:tb(this.biasInitializer),kernelRegularizer:Mv(this.kernelRegularizer),recurrentRegularizer:Mv(this.recurrentRegularizer),biasRegularizer:Mv(this.biasRegularizer),activityRegularizer:Mv(this.activityRegularizer),kernelConstraint:Hg(this.kernelConstraint),recurrentConstraint:Hg(this.recurrentConstraint),biasConstraint:Hg(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}};dw.className="SimpleRNNCell",Mo.registerClass(dw);var pw=class extends cw{constructor(e){e.cell=new dw(e),super(e)}call(e,t){return iu((()=>{null!=this.cell.dropoutMask&&(ou(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ou(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return new e(t)}};pw.className="SimpleRNN",Mo.registerClass(pw);var fw=class extends hw{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new gg("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Mg(this.units,"units"),this.activation=$v(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=$v(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=nb(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=nb(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=nb(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Lv(e.kernelRegularizer),this.recurrentRegularizer=Lv(e.recurrentRegularizer),this.biasRegularizer=Lv(e.biasRegularizer),this.kernelConstraint=qg(e.kernelConstraint),this.recurrentConstraint=qg(e.recurrentConstraint),this.biasConstraint=qg(e.biasConstraint),this.dropout=my([1,gy([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=my([1,gy([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=Tb(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return iu((()=>{if(2!==(e=e).length)throw new gg(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=xw({ones:()=>eh(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=xw({ones:()=>eh(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,s=this.recurrentDropoutMask;let i,o,u;0<this.dropout&&this.dropout<1&&(e=ku(e,a[0]));let l=Cy(e,this.kernel.read());this.useBias&&(l=Fy(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=ku(r,s[0]));const c=this.recurrentKernel.read(),[h,d]=qh(c,[2*this.units,this.units],c.rank-1),p=Cy(r,h),[f,m,g]=qh(l,3,l.rank-1),[y,b]=qh(p,2,p.rank-1);i=this.recurrentActivation.apply(xu(f,y)),o=this.recurrentActivation.apply(xu(m,b));const x=Cy(ku(o,r),d);u=this.activation.apply(xu(g,x));const v=xu(ku(i,r),ku(xu(1,yc(i)),u));return[v,v]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Cv(this.activation),recurrentActivation:Cv(this.recurrentActivation),useBias:this.useBias,kernelInitializer:tb(this.kernelInitializer),recurrentInitializer:tb(this.recurrentInitializer),biasInitializer:tb(this.biasInitializer),kernelRegularizer:Mv(this.kernelRegularizer),recurrentRegularizer:Mv(this.recurrentRegularizer),biasRegularizer:Mv(this.biasRegularizer),activityRegularizer:Mv(this.activityRegularizer),kernelConstraint:Hg(this.kernelConstraint),recurrentConstraint:Hg(this.recurrentConstraint),biasConstraint:Hg(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}};fw.className="GRUCell",Mo.registerClass(fw);var mw=class extends cw{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new fw(e),super(e)}call(e,t){return iu((()=>{null!=this.cell.dropoutMask&&(ou(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ou(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}};mw.className="GRU",Mo.registerClass(mw);var gw=class extends hw{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Mg(this.units,"units"),this.activation=$v(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=$v(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=nb(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=nb(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=nb(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Lv(e.kernelRegularizer),this.recurrentRegularizer=Lv(e.recurrentRegularizer),this.biasRegularizer=Lv(e.biasRegularizer),this.kernelConstraint=qg(e.kernelConstraint),this.recurrentConstraint=qg(e.recurrentConstraint),this.biasConstraint=qg(e.biasConstraint),this.dropout=my([1,gy([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=my([1,gy([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=Tb(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends Ly{apply(t,r){const a=e.apply([n]),s=(new Py).apply([n]),i=e.apply([2*n]);return Ny(Ny(a,s),i)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return iu((()=>{const n=null!=t.training&&t.training;if(3!==(e=e).length)throw new gg(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=xw({ones:()=>eh(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=xw({ones:()=>eh(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,i=this.recurrentDropoutMask;let o,u,l,c;0<this.dropout&&this.dropout<1&&(e=ku(e,s[0]));let h=Cy(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=ku(r,i[0])),h=xu(h,Cy(r,this.recurrentKernel.read())),this.useBias&&(h=Fy(h,this.bias.read()));const[d,p,f,m]=qh(h,4,h.rank-1);o=this.recurrentActivation.apply(d),u=this.recurrentActivation.apply(p),l=xu(ku(u,a),ku(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=ku(c,this.activation.apply(l));return[g,g,l]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Cv(this.activation),recurrentActivation:Cv(this.recurrentActivation),useBias:this.useBias,kernelInitializer:tb(this.kernelInitializer),recurrentInitializer:tb(this.recurrentInitializer),biasInitializer:tb(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Mv(this.kernelRegularizer),recurrentRegularizer:Mv(this.recurrentRegularizer),biasRegularizer:Mv(this.biasRegularizer),activityRegularizer:Mv(this.activityRegularizer),kernelConstraint:Hg(this.kernelConstraint),recurrentConstraint:Hg(this.recurrentConstraint),biasConstraint:Hg(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}};gw.className="LSTMCell",Mo.registerClass(gw);var yw=class extends cw{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new gw(e),super(e)}call(e,t){return iu((()=>{null!=this.cell.dropoutMask&&(ou(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ou(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}};yw.className="LSTM",Mo.registerClass(yw);var bw=class extends hw{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return iu((()=>{let n=(e=e).slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const a=[];let s;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],s=0===i?[e[0]].concat(n):[s[0]].concat(n),s=o.call(s,t),a.push(s.slice(1))}n=[];for(const e of a.slice().reverse())n.push(...e);return[s[0]].concat(n)}))}build(e){let t;Ib(e)&&(e=e[0]),e=e,this.cells.forEach(((n,r)=>{ly(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=[];for(const e of t.cells)r.push(Qb(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return $b(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,a=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],a[e]])}Ab(t)}};function xw(e){const{ones:t,rate:n,training:r=!1,count:a=1,dropoutFunc:s}=e,i=()=>null!=s?s(t(),n):Ry(t(),n),o=()=>Dy(i,t,r);return!a||a<=1?uu(o().clone()):Array(a).fill(void 0).map(o).map((e=>uu(e.clone())))}bw.className="StackedRNNCells",Mo.registerClass(bw);var vw=class extends cw{constructor(e){if(e.unroll)throw new yg("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new yg("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Fb({ndim:5})]}call(e,t){return iu((()=>{if(null!=this.cell.dropoutMask&&(ou(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ou(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new gg("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return iu((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),a=Vc([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(a):[a]}))}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];iu((()=>{if(!this.stateful)throw new fg("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(null==n[0])throw new gg("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Vc(a))):this.states_=[Vc(a)];else if(null==e)ou(this.states_),null!=this.keptStates&&(ou(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Vc(a))):this.states_[0]=Vc(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new gg(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):ou(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=a;if(!pa.arraysEqual(n.shape,r))throw new gg(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>uu(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===t,u=e[o?3:2],l=e[o?4:3],c=Hv(u,r[0],a,s[0],i[0]),h=Hv(l,r[1],a,s[1],i[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}};vw.className="ConvRNN2D";var ww=class extends gw{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,Mg(this.filters,"filters"),this.kernelSize=Gv(n,2,"kernelSize"),this.kernelSize.forEach((e=>Mg(e,"kernelSize"))),this.strides=Gv(r||1,2,"strides"),this.strides.forEach((e=>Mg(e,"strides"))),this.padding=a||"valid",iy(this.padding),this.dataFormat=s||"channelsLast",sy(this.dataFormat),this.dilationRate=Gv(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>Mg(e,"dilationRate")))}build(e){var t;e=Tb(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new gg(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],a=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends Ly{apply(e,t){return Sy([n.apply([r]),Uc([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return iu((()=>{if(3!==e.length)throw new gg(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],a=e[1],s=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=xw({ones:()=>eh(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?ku(t[n],e):e;let u=o(r,i,0),l=o(r,i,1),c=o(r,i,2),h=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=xw({ones:()=>eh(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const d=this.recurrentDropoutMask;let p=o(a,d,0),f=o(a,d,1),m=o(a,d,2),g=o(a,d,3);const[y,b,x,v]=qh(this.kernel.read(),4,3),[w,k,I,S]=this.useBias?qh(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,y,w,this.padding),l=this.inputConv(l,b,k,this.padding),c=this.inputConv(c,x,I,this.padding),h=this.inputConv(h,v,S,this.padding);const[N,T,E,C]=qh(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,N),f=this.recurrentConv(f,T),m=this.recurrentConv(m,E),g=this.recurrentConv(g,C);const _=this.recurrentActivation.apply(xu(u,p)),$=this.recurrentActivation.apply(xu(l,f)),A=xu(ku($,s),ku(_,this.activation.apply(xu(c,m)))),F=ku(this.recurrentActivation.apply(xu(h,g)),this.activation.apply(A));return[F,F,A]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n}(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(e,t,n,r){const a=vl(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Fy(a,n,this.dataFormat):a}recurrentConv(e,t){return vl(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}};ww.className="ConvLSTM2DCell",Mo.registerClass(ww);var kw=class extends vw{constructor(e){const t=new ww(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}};kw.className="ConvLSTM2D",Mo.registerClass(kw);var Iw=class extends Lb{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return iu((()=>{this.invokeCallHook(e,t);const n=Nb(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return Dy((()=>Ry(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};Iw.className="Dropout",Mo.registerClass(Iw);var Sw=class extends Iw{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}};Sw.className="SpatialDropout1D",Mo.registerClass(Sw);var Nw=class extends Lb{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Mg(this.units,"units"),this.activation=$v(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=nb(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=nb(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=qg(e.kernelConstraint),this.biasConstraint=qg(e.biasConstraint),this.kernelRegularizer=Lv(e.kernelRegularizer),this.biasRegularizer=Lv(e.biasRegularizer),this.activityRegularizer=Lv(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=Tb(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=Tb(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return iu((()=>{this.invokeCallHook(e,t);const n=Nb(e),r=Lg(this.activation.getClassName());let a;return null!=r?a=Cy(n,this.kernel.read(),r,this.bias?this.bias.read():null):(a=Cy(n,this.kernel.read()),null!=this.bias&&(a=Fy(a,this.bias.read())),null!=this.activation&&(a=this.activation.apply(a))),a}))}getConfig(){const e={units:this.units,activation:Cv(this.activation),useBias:this.useBias,kernelInitializer:tb(this.kernelInitializer),biasInitializer:tb(this.biasInitializer),kernelRegularizer:Mv(this.kernelRegularizer),biasRegularizer:Mv(this.biasRegularizer),activityRegularizer:Mv(this.activityRegularizer),kernelConstraint:Hg(this.kernelConstraint),biasConstraint:Hg(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Nw.className="Dense",Mo.registerClass(Nw);var Tw=class extends Lb{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Tb(e);for(const t of e.slice(1))if(null==t)throw new gg(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],fy(e,1)]}call(e,t){return iu((()=>{this.invokeCallHook(e,t);let n=Nb(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=Yi(n,e)}return function(e){if(e.rank<=1)throw new gg(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],fy(e.shape,1)];return Ju(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}};Tw.className="Flatten",Mo.registerClass(Tw);var Ew=class extends Lb{constructor(e){super(e),this.supportsMasking=!0,this.activation=$v(e.activation)}call(e,t){return iu((()=>{this.invokeCallHook(e,t);const n=Nb(e);return this.activation.apply(n)}))}getConfig(){const e={activation:Cv(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};Ew.className="Activation",Mo.registerClass(Ew);var Cw=class extends Lb{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return iu((()=>{return e=Nb(e),t=e,n=this.n,iu((()=>{if(2!==t.shape.length)throw new gg(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return Ty(xy(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};Cw.className="RepeatVector",Mo.registerClass(Cw);var _w=class extends Lb{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let a=1,s=null;for(let e=0;e<r.length;++e){const t=r[e];if(this.isUnknown(t)){if(null!==s)throw new gg("Can only specifiy one unknown dimension.");s=e}else a*=t}const i=fy(e);if(null!==s){if(0===a||i%a!=0)throw new gg(n);r[s]=i/a}else if(i!==a)throw new gg(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return iu((()=>{this.invokeCallHook(e,t);const n=Nb(e),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return Ju(n,a)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};_w.className="Reshape",Mo.registerClass(_w);var $w=class extends Lb{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=yy(1,e.dims.length+1);if(!pa.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Fb({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=Tb(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return Yi(Nb(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};$w.className="Permute",Mo.registerClass($w);var Aw=class extends Lb{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=Nb(e);return Cu(Qc(n,this.maskValue),-1)}call(e,t){return iu((()=>{this.invokeCallHook(e,t);const n=Nb(e),r=Cu(Qc(n,this.maskValue),-1,!0);return ku(n,Ci(r,n.dtype))}))}};Aw.className="Masking",Mo.registerClass(Aw);var Fw=class extends Lb{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Ig(e.inputLength))}this.inputDim=e.inputDim,Mg(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Mg(this.outputDim,"outputDim"),this.embeddingsInitializer=nb(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Lv(e.embeddingsRegularizer),this.activityRegularizer=Lv(e.activityRegularizer),this.embeddingsConstraint=qg(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return iu((()=>this.maskZero?(e=Nb(e),Qc(e,Ll(e))):null))}computeOutputShape(e){if(e=Tb(e),null==this.inputLength)return[...e,this.outputDim];const t=Ig(this.inputLength);if(t.length!==e.length-1)throw new gg(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const a=t[r],s=e[r+1];if(null!=a&&null!=s&&a!==s)throw new gg(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==a&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return iu((()=>{this.invokeCallHook(e,t);let n=Nb(e);"int32"!==n.dtype&&(n=by(n,"int32"));const r=_y(this.embeddings.read(),Ju(n,[n.size]));return Ju(r,Tb(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:tb(this.embeddingsInitializer),embeddingsRegularizer:Mv(this.embeddingsRegularizer),activityRegularizer:Mv(this.activityRegularizer),embeddingsConstraint:Hg(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};Fw.className="Embedding",Mo.registerClass(Fw);var Rw=class extends Lb{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new yg}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const a=e[e.length-t.length+r],s=t[r];if(null==a||null==s||a<0||s<0)n.push(null);else if(1===a)n.push(s);else if(1===s)n.push(a);else{if(a!==s)throw new gg("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Tb(e)]),(e=e).length<2)throw new gg(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=Ag(t),t.length>1)throw new gg(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===Ag(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return iu((()=>{if(e=e,this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=gy(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=xy(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,a=e[0],s=e.slice(1).concat([a]);let i=Ju(r,[a].concat(fy(e.slice(1))));i=Yi(i,[1,0]),i=Ju(i,s),t.push(i),n=!0}else if(e>1){const a=yy(1,e).concat([0]);t.push(Yi(r,a)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const a=r.rank;if(n)if(null==a){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=Ju(Yi(Ju(r,[-1,t]),[1,0]),n)}else if(a>1){const e=[a-1].concat(yy(0,a-1));r=Yi(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==(e=e)[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=Ag(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return iu((()=>{if(null==t)return null;if(!Array.isArray(t))throw new gg("`mask` should be an Array");if(!Array.isArray(e))throw new gg("`inputs` should be an Array");if(t.length!==e.length)throw new gg(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:Gl(e,0))))[0];for(let e=1;e<t.length-1;++e)n=Rc(n,t[e]);return n}))}},Dw=class extends Rw{constructor(e){super(e)}mergeFunction(e){return iu((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=xu(t,e[n]);return t}))}};Dw.className="Add",Mo.registerClass(Dw);var Mw=class extends Rw{constructor(e){super(e)}mergeFunction(e){return iu((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ku(t,e[n]);return t}))}};Mw.className="Multiply",Mo.registerClass(Mw);var Ow=class extends Rw{constructor(e){super(e)}mergeFunction(e){return iu((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=xu(t,e[n]);return ku(1/e.length,t)}))}};Ow.className="Average",Mo.registerClass(Ow);var Lw=class extends Rw{constructor(e){super(e)}mergeFunction(e){return iu((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Bc(t,e[n]);return t}))}};Lw.className="Maximum",Mo.registerClass(Lw);var zw=class extends Rw{constructor(e){super(e)}mergeFunction(e){return iu((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=jc(t,e[n]);return t}))}};zw.className="Minimum",Mo.registerClass(zw);var Pw=class extends Rw{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new gg("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const r=e[t].slice();r.splice(this.axis,1);let a=!1;for(const e of n)if(pa.arraysEqual(e,r)){a=!0;break}a||n.push(r)}if(n.length>1)throw new gg("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return iu((()=>Sy(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new gg("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new gg("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new gg("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new gg(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return iu((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(Ci(eh(e[n]),"bool")):t[n].rank<e[n].rank?r.push(Gl(t[n],-1)):r.push(t[n]);const a=tl(r,this.axis);return Eu(a,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};function Bw(e,t){for(;e<0;)e+=t;return e}Pw.className="Concatenate",Mo.registerClass(Pw);var Ww=class extends Rw{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){pa.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new yg("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new gg(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new gg(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>Bw(t,e[n].shape.length))):[Bw(this.axes,n.shape.length),Bw(this.axes,r.shape.length)],this.normalize&&(n=ex(n,t[0]),r=ex(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new yg("batchDot is not implemented for tensors of 4D or higher rank yet");if(pa.assert(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),pa.assert(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new yg("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,a=t.shape.length;null==n&&(n=[r-1,a-2]);const s=n;return iu((()=>{let n,i;if(r>a){n=r-a;const e=[];for(let t=0;t<n;++t)e.push(1);t=Ju(t,t.shape.concat(e))}else if(a>r){n=a-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=Ju(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=s[0]===s[1]?kc(ku(e,t),s[0]):kc(ku(Yi(e,[1,0]),t),s[1]);else{const n=s[0]!==e.shape.length-1,r=s[1]===t.shape.length-1;i=Ki(e,t,n,r)}if(n>0){let e;e=r>a?r+a-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);i=Zh(i,t)}return 1===i.shape.length&&(i=Gl(i,1)),i}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[Bw(this.axes,e.length),Bw(this.axes,t.length)],n}computeOutputShape(e){pa.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new yg("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};Ww.className="Dot",Mo.registerClass(Ww);var Vw=class extends Lb{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return iu((()=>{this.invokeCallHook(e,t);const n=Nb(e);return Dy((()=>xu(Ey(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}};Vw.className="GaussianNoise",Mo.registerClass(Vw);var Uw=class extends Lb{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return iu((()=>{this.invokeCallHook(e,t);const n=Nb(e);return this.rate>0&&this.rate<1?Dy((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return ku(n,Ey(n.shape,1,e))}),(()=>n),t.training||!1):n}))}};Uw.className="GaussianDropout",Mo.registerClass(Uw);var Gw=class extends Lb{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Nb(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return iu((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return Dy((()=>{const t=Nb(e),r=-1.7580993408473766;let a=Jl(xh(n),this.rate);a=by(a,"float32");const s=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-s*r*this.rate,o=xu(ku(t,a),ku(xu(a,-1),r));return xu(ku(o,s),i)}),(()=>Nb(e)),t.training||!1)}return e}))}};function Hw(e,t,n,r,a){let s,i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:.001;if(2===e.rank)s=ul(e,t,n,r,a,i);else if(3===e.rank)s=ll(e,t,n,r,a,i);else{if(4!==e.rank)throw new yg(`batchNormalization is not implemented for array of rank ${e.rank} yet`);s=cl(e,t,n,r,a,i)}return s}function jw(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return iu((()=>{const s=Yc(e,r),i=s.mean,o=s.variance;return[Hw(e,i,o,n,t,a),i,o]}))}function qw(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return iu((()=>{const s=Yc(e,r),i=s.mean,o=s.variance,u=[];for(const t of yy(0,e.rank))-1!==r.indexOf(t)?u.push(1):u.push(e.shape[t]);const l=Ju(i,u),c=Ju(o,u),h=null==t?null:Ju(t,u),d=null==n?null:Ju(n,u);return[Hw(e,l,c,d,h,a),i,o]}))}Gw.className="AlphaDropout",Mo.registerClass(Gw);var Kw=class extends Lb{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=nb(e.betaInitializer||"zeros"),this.gammaInitializer=nb(e.gammaInitializer||"ones"),this.movingMeanInitializer=nb(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=nb(e.movingVarianceInitializer||"ones"),this.betaConstraint=qg(e.betaConstraint),this.gammaConstraint=qg(e.gammaConstraint),this.betaRegularizer=Lv(e.betaRegularizer),this.gammaRegularizer=Lv(e.gammaRegularizer)}build(e){e=Tb(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new gg(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Fb({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return iu((()=>{const n=null!=t.training&&t.training,r=Nb(e),a=r.shape,s=a.length,i=yy(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);const u=xg(1,s);u[o]=a[o];const l=i.slice();l.sort();const c=!pa.arraysEqual(l,yy(0,s).slice(0,s-1));if(!n)return(()=>{if(c){const e=Ju(this.movingMean.read(),u),t=Ju(this.movingVariance.read(),u),n=this.center?Ju(this.beta.read(),u):null,a=this.scale?Ju(this.gamma.read(),u):null;return Hw(r,e,t,n,a,this.epsilon)}return Hw(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return pa.arraysEqual(r.slice().sort(),yy(0,e.rank-1))?jw(e,t,n,r,a):qw(e,t,n,r,a)}(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{iu((()=>{const r=1-n,a=e.read(),s=ku(wc(a,t),r);e.write(wc(a,s))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:tb(this.betaInitializer),gammaInitializer:tb(this.gammaInitializer),movingMeanInitializer:tb(this.movingMeanInitializer),movingVarianceInitializer:tb(this.movingVarianceInitializer),betaRegularizer:Mv(this.betaRegularizer),gammaRegularizer:Mv(this.gammaRegularizer),betaConstraint:Hg(this.betaConstraint),gammaConstraint:Hg(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Kw.className="BatchNormalization",Mo.registerClass(Kw);var Xw=class extends Lb{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=nb(e.betaInitializer||"zeros"),this.gammaInitializer=nb(e.gammaInitializer||"ones"),this.betaRegularizer=Lv(e.betaRegularizer),this.gammaRegularizer=Lv(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=Tb(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==Ag(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){const n=Nb(e),r=n.shape,a=r.length;return iu((()=>{let{mean:e,variance:t}=Yc(n,this.axis,!0);const s=xg(1,a);for(const e of this.axis)s[e]=r[e];const i=e=>null!=e&&e.shape.length!==a?Ju(e,s):e;let o=i(this.gamma.read()),u=i(this.beta.read());const l=[],c=[];for(let e=0;e<a;++e)-1!==this.axis.indexOf(e)?(l.push(r[e]),c.push(1)):(l.push(1),c.push(r[e]));return e=jl(e,l),t=jl(t,l),o=jl(o,c),u=jl(u,c),Hw(n,e,t,u,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:tb(this.betaInitializer),gammaInitializer:tb(this.gammaInitializer),betaRegularizer:Mv(this.betaRegularizer),gammaRegularizer:Mv(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};Xw.className="LayerNormalization",Mo.registerClass(Xw);var Yw=class extends Lb{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new gg(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new gg(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new gg(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Fb({ndim:4})]}computeOutputShape(e){let t,n;return e=Tb(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return iu((()=>{return t=Nb(e),n=this.padding,r=this.dataFormat,iu((()=>{if(4!==t.rank)throw new gg(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new gg("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new gg(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],nh(t,e)}));var t,n,r}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};function Zw(e,t,n,r,a,s){return iu((()=>{let i;sy(a),oy(s),iy(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=qv(e,a);const o="same"===r?"same":"valid";return i="max"===s?Lc(e,t,n,o):Qu(e,t,n,o),"channelsFirst"===a&&(i=Yi(i,[0,3,1,2])),i}))}function Jw(e,t,n,r,a,s){return iu((()=>{let i;sy(a),oy(s),iy(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=Kv(e,a);const o="same"===r?"same":"valid";return i="max"===s?zc(e,t,n,o):el(e,t,n,o),"channelsFirst"===a&&(i=Yi(i,[0,4,1,2,3])),i}))}Yw.className="ZeroPadding2D",Mo.registerClass(Yw);var Qw=class extends Lb{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new gg(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(Mg(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new gg(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}Mg(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,iy(this.padding),this.inputSpec=[new Fb({ndim:3})]}computeOutputShape(e){const t=Hv((e=Tb(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return iu((()=>{this.invokeCallHook(e,t),e=xy(Nb(e),2);const n=this.poolingFunction(Nb(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Zh(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},ek=class extends Qw{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return sy(a),iy(r),Zw(e,t,n,r,a,"max")}};ek.className="MaxPooling1D",Mo.registerClass(ek);var tk=class extends Qw{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return sy(a),iy(r),Zw(e,t,n,r,a,"avg")}};tk.className="AveragePooling1D",Mo.registerClass(tk);var nk=class extends Lb{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new gg(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Mg(this.poolSize,"poolSize"),Mg(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,sy(this.dataFormat),iy(this.padding),this.inputSpec=[new Fb({ndim:4})]}computeOutputShape(e){e=Tb(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=Hv(t,this.poolSize[0],this.padding,this.strides[0]),n=Hv(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return iu((()=>(this.invokeCallHook(e,t),this.poolingFunction(Nb(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},rk=class extends nk{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return sy(a),iy(r),Zw(e,t,n,r,a,"max")}};rk.className="MaxPooling2D",Mo.registerClass(rk);var ak=class extends nk{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return sy(a),iy(r),Zw(e,t,n,r,a,"avg")}};ak.className="AveragePooling2D",Mo.registerClass(ak);var sk=class extends Lb{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new gg(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Mg(this.poolSize,"poolSize"),Mg(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,sy(this.dataFormat),iy(this.padding),this.inputSpec=[new Fb({ndim:5})]}computeOutputShape(e){e=Tb(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=Hv(t,this.poolSize[0],this.padding,this.strides[0]),n=Hv(n,this.poolSize[1],this.padding,this.strides[1]),r=Hv(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return iu((()=>(this.invokeCallHook(e,t),this.poolingFunction(Nb(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},ik=class extends sk{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return sy(a),iy(r),Jw(e,t,n,r,a,"max")}};ik.className="MaxPooling3D",Mo.registerClass(ik);var ok=class extends sk{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return sy(a),iy(r),Jw(e,t,n,r,a,"avg")}};ok.className="AveragePooling3D",Mo.registerClass(ok);var uk=class extends Lb{constructor(e){super(e),this.inputSpec=[new Fb({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new yg}},lk=class extends uk{constructor(e){super(e||{})}call(e,t){return iu((()=>{const t=Nb(e);return Wc(t,1)}))}};lk.className="GlobalAveragePooling1D",Mo.registerClass(lk);var ck=class extends uk{constructor(e){super(e||{})}call(e,t){return iu((()=>{const t=Nb(e);return vc(t,1)}))}};ck.className="GlobalMaxPooling1D",Mo.registerClass(ck);var hk=class extends Lb{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,sy(this.dataFormat),this.inputSpec=[new Fb({ndim:4})]}computeOutputShape(e){return e=e,"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new yg}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},dk=class extends hk{call(e,t){return iu((()=>{const t=Nb(e);return"channelsLast"===this.dataFormat?Wc(t,[1,2]):Wc(t,[2,3])}))}};dk.className="GlobalAveragePooling2D",Mo.registerClass(dk);var pk=class extends hk{call(e,t){return iu((()=>{const t=Nb(e);return"channelsLast"===this.dataFormat?vc(t,[1,2]):vc(t,[2,3])}))}};pk.className="GlobalMaxPooling2D",Mo.registerClass(pk);var fk=class extends Lb{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=Qb(t.layer,n);delete t.layer;const a={layer:r};return Object.assign(a,t),new e(a)}},mk=class extends fk{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Tb(e)).length<3)throw new gg(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=Tb(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return iu((()=>lw(((e,n)=>[Nb(this.layer.call(e,t)),[]]),e=Nb(e),[],!1,null,null,!1,!0)[1]))}};mk.className="TimeDistributed",Mo.registerClass(mk);var gk=class extends fk{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Qb(n),t.goBackwards=!0!==t.goBackwards;const r={};var a;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=Qb(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,a=this.mergeMode,Rg(ry,"BidirectionalMergeMode",a),e.weights)throw new yg("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,a=this.forwardLayer.computeOutputShape(e);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),a=a,this.returnState?(r=a.slice(1),t=a[0]):t=a[0],t=t,"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):kg(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=uw(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const s=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new gg("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);const r=n.map((e=>new Fb({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new yg("Support for constants in Bidirectional layers is not implemented yet.");const o=s[0]instanceof Rb;for(const e of s)if(e instanceof Rb!==o)throw new gg("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return iu((()=>{const n=t.initialState;let r,a,s,i;if(null==n)r=this.forwardLayer.call(e,t),a=this.backwardLayer.call(e,t);else{const s=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:s})),a=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(s=r.slice(1).concat(a.slice(1))),r=r[0],a=a[0]),this.returnSequences&&(a=Nh(a,1)),"concat"===this.mergeMode?i=Sy([r,a]):"sum"===this.mergeMode?i=xu(r,a):"ave"===this.mergeMode?i=ku(.5,xu(r,a)):"mul"===this.mergeMode?i=ku(r,a):null==this.mergeMode&&(i=[r,a]),this.returnState?null==this.mergeMode?i.concat(s):[i].concat(s):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){ly(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),ly(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=Qb(t.layer);if(delete t.layer,null!=t.numConstants)throw new yg("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}};function yk(e){return new Wb(e)}function bk(e){return new Wv(e)}function xk(e){return new zv(e)}function vk(e){return new Pv(e)}function wk(e){return new Bv(e)}function kk(e){return new Uv(e)}function Ik(e){return new Vv(e)}function Sk(e){return new aw(e)}function Nk(e){return new Jv(e)}function Tk(e){return new ew(e)}function Ek(e){return new Qv(e)}function Ck(e){return new tw(e)}function _k(e){return new rw(e)}function $k(e){return new sw(e)}function Ak(e){return new iw(e)}function Fk(e){return new ow(e)}function Rk(e){return new Ew(e)}function Dk(e){return new Nw(e)}function Mk(e){return new Iw(e)}function Ok(e){return new Sw(e)}function Lk(e){return new Tw(e)}function zk(e){return new Cw(e)}function Pk(e){return new _w(e)}function Bk(e){return new $w(e)}function Wk(e){return new Fw(e)}function Vk(e){return new Dw(e)}function Uk(e){return new Ow(e)}function Gk(e){return new Pw(e)}function Hk(e){return new Lw(e)}function jk(e){return new zw(e)}function qk(e){return new Mw(e)}function Kk(e){return new Ww(e)}function Xk(e){return new Kw(e)}function Yk(e){return new Xw(e)}function Zk(e){return new Yw(e)}function Jk(e){return new tk(e)}function Qk(e){return Jk(e)}function eI(e){return Jk(e)}function tI(e){return new ak(e)}function nI(e){return tI(e)}function rI(e){return tI(e)}function aI(e){return new ok(e)}function sI(e){return aI(e)}function iI(e){return aI(e)}function oI(e){return new lk(e)}function uI(e){return new dk(e)}function lI(e){return new ck(e)}function cI(e){return new pk(e)}function hI(e){return new ek(e)}function dI(e){return new rk(e)}function pI(e){return new ik(e)}function fI(e){return new mw(e)}function mI(e){return new fw(e)}function gI(e){return new yw(e)}function yI(e){return new gw(e)}function bI(e){return new pw(e)}function xI(e){return new dw(e)}function vI(e){return new kw(e)}function wI(e){return new ww(e)}function kI(e){return new cw(e)}function II(e){return new bw(e)}function SI(e){return new gk(e)}function NI(e){return new mk(e)}gk.className="Bidirectional",Mo.registerClass(gk);var TI=lI,EI=cI,CI=hI,_I=dI;function $I(e){return new Vw(e)}function AI(e){return new Uw(e)}function FI(e){return new Gw(e)}function RI(e){return new Aw(e)}var DI={};function MI(e,t){return cx(e,t)}function OI(e,t){return fx(e,t)}function LI(e,t){return mx(e,t)}function zI(e,t){return hx(e,t)}function PI(e,t){return gx(e,t)}function BI(e,t){return px(e,t)}function WI(e,t){return function(e,t){return iu((()=>{const n=dx(e,t),r=function(e,t){return iu((()=>Ci(kc(Rc(Ml(e,1),Ml(t,0))),"float32")))}(e,t),a=xu(n,r);return Ci(Ol(Zl(a,0),wu(n,a),0),"float32")}))}(e,t)}function VI(e,t){return ox(e,t)}function UI(e,t){return nx(e,t)}function GI(e,t){return rx(e,t)}function HI(e,t){return rx(e,t)}function jI(e,t){return rx(e,t)}function qI(e,t){return tx(e,t)}function KI(e,t){return tx(e,t)}function XI(e,t){return tx(e,t)}p(DI,{MAPE:()=>HI,MSE:()=>KI,binaryAccuracy:()=>MI,binaryCrossentropy:()=>OI,categoricalAccuracy:()=>zI,categoricalCrossentropy:()=>PI,cosineProximity:()=>VI,mape:()=>jI,meanAbsoluteError:()=>UI,meanAbsolutePercentageError:()=>GI,meanSquaredError:()=>qI,mse:()=>XI,precision:()=>BI,recall:()=>WI,sparseCategoricalAccuracy:()=>LI});var YI={};p(YI,{modelFromJSON:()=>iv});var ZI={};function JI(e){return new Rv(e)}function QI(e){return Av(t=e),new Rv({l1:null!=t?t.l1:null,l2:0});var t}function eS(e){return Av(t=e),new Rv({l2:null!=t?t.l2:null,l1:0});var t}p(ZI,{l1:()=>QI,l1l2:()=>JI,l2:()=>eS});var tS=class extends Hb{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof av))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function nS(e,t){return e<t}function rS(e,t){return e>t}var aS,sS,iS,oS=class extends tS{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new yg("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=nS:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=rS:this.monitorFunc=nS,this.monitorFunc===nS&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===nS?1/0:-1/0}async onEpochEnd(e,t){await Ub(t);const n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});const t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}},uS={earlyStopping:function(e){return new oS(e)}};Ue().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),(sS=aS||(aS={}))[sS.DT_INVALID=0]="DT_INVALID",sS[sS.DT_FLOAT=1]="DT_FLOAT",sS[sS.DT_DOUBLE=2]="DT_DOUBLE",sS[sS.DT_INT32=3]="DT_INT32",sS[sS.DT_UINT8=4]="DT_UINT8",sS[sS.DT_INT16=5]="DT_INT16",sS[sS.DT_INT8=6]="DT_INT8",sS[sS.DT_STRING=7]="DT_STRING",sS[sS.DT_COMPLEX64=8]="DT_COMPLEX64",sS[sS.DT_INT64=9]="DT_INT64",sS[sS.DT_BOOL=10]="DT_BOOL",sS[sS.DT_QINT8=11]="DT_QINT8",sS[sS.DT_QUINT8=12]="DT_QUINT8",sS[sS.DT_QINT32=13]="DT_QINT32",sS[sS.DT_BFLOAT16=14]="DT_BFLOAT16",sS[sS.DT_QINT16=15]="DT_QINT16",sS[sS.DT_QUINT16=16]="DT_QUINT16",sS[sS.DT_UINT16=17]="DT_UINT16",sS[sS.DT_COMPLEX128=18]="DT_COMPLEX128",sS[sS.DT_HALF=19]="DT_HALF",sS[sS.DT_RESOURCE=20]="DT_RESOURCE",sS[sS.DT_VARIANT=21]="DT_VARIANT",sS[sS.DT_UINT32=22]="DT_UINT32",sS[sS.DT_UINT64=23]="DT_UINT64",sS[sS.DT_FLOAT_REF=101]="DT_FLOAT_REF",sS[sS.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",sS[sS.DT_INT32_REF=103]="DT_INT32_REF",sS[sS.DT_UINT8_REF=104]="DT_UINT8_REF",sS[sS.DT_INT16_REF=105]="DT_INT16_REF",sS[sS.DT_INT8_REF=106]="DT_INT8_REF",sS[sS.DT_STRING_REF=107]="DT_STRING_REF",sS[sS.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",sS[sS.DT_INT64_REF=109]="DT_INT64_REF",sS[sS.DT_BOOL_REF=110]="DT_BOOL_REF",sS[sS.DT_QINT8_REF=111]="DT_QINT8_REF",sS[sS.DT_QUINT8_REF=112]="DT_QUINT8_REF",sS[sS.DT_QINT32_REF=113]="DT_QINT32_REF",sS[sS.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",sS[sS.DT_QINT16_REF=115]="DT_QINT16_REF",sS[sS.DT_QUINT16_REF=116]="DT_QUINT16_REF",sS[sS.DT_UINT16_REF=117]="DT_UINT16_REF",sS[sS.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",sS[sS.DT_HALF_REF=119]="DT_HALF_REF",sS[sS.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",sS[sS.DT_VARIANT_REF=121]="DT_VARIANT_REF",sS[sS.DT_UINT32_REF=122]="DT_UINT32_REF",sS[sS.DT_UINT64_REF=123]="DT_UINT64_REF",function(e){let t;var n;(n=t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))[n.LEGACY=0]="LEGACY",n[n.V1=1]="V1",n[n.V2=2]="V2"}(iS||(iS={}));var lS={};function cS(e,t){const n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};lS[e]=n}function hS(e){return lS[e]}function dS(e){delete lS[e]}function pS(e,t,n,r,a){const s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){const e=s.inputIndexStart,i=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd;if("tensor"===s.type)return fS(t.inputNames[s.inputIndexStart],n,r,a);if("tensors"===s.type)return t.inputNames.slice(e,i).map((e=>fS(e,n,r,a)));const o=fS(t.inputNames.slice(e)[0],n,r,a),u=o.dataSync();return"number"===s.type?u[0]:pa.toNestedArray(o.shape,u)}const i=t.attrParams[e];return i&&i.value}function fS(e,t,n,r){const[a,s]=yS(e);if(null!=r){const e=r.getHashTableHandleByName(a);if(null!=e)return e}const i=n.currentContextIds.find((e=>!!t[gS(a,e)]));return void 0!==i?t[gS(a,i)][s]:void 0}function mS(e,t){const[n,r,a]=yS(e);return[gS(n,t&&t.currentContextId),r,a]}function gS(e,t){return t?`${e}-${t}`:e}function yS(e){const t=e.split(":");if(1===t.length)return[e,0,void 0];const n=t[0],r=3===t.length?t[1]:void 0;return[n,Number(t[t.length-1]),r]}function bS(e,t,n){let r=pS("pad",e,t,n);if("explicit"===r){r=pS("explicitPaddings",e,t,n);const a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function xS(e){return e.kept?e:_i(e)}var vS={};p(vS,{json:()=>wS});var wS=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],kS={};p(kS,{json:()=>IS});var IS=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],SS={};p(SS,{json:()=>NS});var NS=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],TS={};p(TS,{json:()=>ES});var ES=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],CS={};p(CS,{json:()=>_S});var _S=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],$S={};p($S,{json:()=>AS});var AS=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],FS={};p(FS,{json:()=>RS});var RS=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],DS={};p(DS,{json:()=>MS});var MS=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],OS={};p(OS,{json:()=>LS});var LS=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],zS={};p(zS,{json:()=>PS});var PS=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],BS={};p(BS,{json:()=>WS});var WS=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],VS={};p(VS,{json:()=>US});var US=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],GS={};p(GS,{json:()=>HS});var HS=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],jS={};p(jS,{json:()=>qS});var qS=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],KS={};p(KS,{json:()=>XS});var XS=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],YS={};p(YS,{json:()=>ZS});var ZS=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],JS={};p(JS,{json:()=>QS});var QS=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],eN={};p(eN,{json:()=>tN});var tN=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],nN={};p(nN,{json:()=>rN});var rN=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],aN=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[vS,kS,SS,TS,CS,$S,FS,DS,OS,zS,BS,VS,GS,jS,KS,YS,JS,eN,nN].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=e.node,r=[],a=[],s=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):null!=t.input&&0!==t.input.length||s.push(e[t.name]),e)),{});let o=[];const u=[];let l={},c={};null!=t&&(l=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const h=Object.keys(i);h.forEach((e=>{const t=i[e];t.inputNames.forEach(((e,n)=>{const[r,,a]=mS(e),s=i[r];if(null!=s.outputs){const e=s.outputs.indexOf(a);if(-1!==e){const a=`${r}:${e}`;t.inputNames[n]=a}}t.inputs.push(s),s.children.push(t)}))})),0===Object.keys(c).length?h.forEach((e=>{const t=i[e];0===t.children.length&&u.push(t)})):Object.keys(c).forEach((e=>{const[t]=mS(e),n=i[t];null!=n&&(n.signatureKey=c[e],u.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((e=>{const[t]=mS(e),n=i[t];n&&(n.signatureKey=l[e],o.push(n))})):o=r;let d={};null!=e.library&&null!=e.library.function&&(d=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const p={nodes:i,inputs:o,outputs:u,weights:a,placeholders:r,signature:t,functions:d};return s.length>0&&(p.initNodes=s),p}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=hS(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.substr(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let a;switch(n.type){case"string":a=iN(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=iN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=gN(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=gN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=uN(e.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=uN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=mN(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=mN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=oN(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=oN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=bN(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=bN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=fN(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=fN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=yN(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=yN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=hN(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=hN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=dN(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=dN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=cN(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=cN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:a,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const a=[],s=[];e.signature.inputArg.forEach((e=>{const[t]=mS(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:lN(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n})),Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach(((e,n)=>{const[a,,s]=mS(e),i=r[a];if(null!=i.outputs){const e=i.outputs.indexOf(s);if(-1!==e){const r=`${a}:${e}`;t.inputNames[n]=r}}t.inputs.push(i),i.children.push(t)}))}));const i=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=mS(i[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,s.push(a))}));const o=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}};function sN(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=Ue().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function iN(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=e[t];return null!=a?sN(a.s,r):n}function oN(e,t,n){const r=e[t];return r?r.b:n}function uN(e,t,n){const r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function lN(e){switch("string"==typeof e&&(e=aS[e]),e){case aS.DT_FLOAT:case aS.DT_HALF:return"float32";case aS.DT_INT32:case aS.DT_INT64:case aS.DT_INT8:case aS.DT_UINT8:return"int32";case aS.DT_BOOL:return"bool";case aS.DT_DOUBLE:return"float32";case aS.DT_STRING:return"string";default:return null}}function cN(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function hN(e,t,n){const r=e[t];return r&&r.type?lN(r.type):n}function dN(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>lN(e))):n}function pN(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function fN(e,t,n){const r=e[t];return r&&r.shape?pN(r.shape):n}function mN(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function gN(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=e[t];return a&&a.list&&a.list.s?a.list.s.map((e=>sN(e,r))):n}function yN(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>pN(e))):n}function bN(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}function xN(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";if("number"!=typeof e&&"number"!=typeof t){pa.assert(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){const a=e[r],s=t[r];pa.assert(a<0||s<0||a===s,(()=>n+` Shapes ${e} and ${t} must match`))}}}function vN(e){return"number"!=typeof e&&!e.some((e=>e<0))}function wN(e,t,n){let r=kN(e,n);const a=!vN(r);if(a&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(a&&t.forEach((e=>{r=kN(e.shape,r)})),!vN(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function kN(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}var IN=class{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1;this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);xN(t,e.shape,"TensorList shape mismatch: "),uu(e)})),this.idTensor=Fh(0),this.maxNumElements=r,uu(this.idTensor)}get id(){return this.idTensor.id}copy(){return new IN([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);xN(e,this.elementShape,"TensorList shape mismatch: ");const r=wN(this.elementShape,this.tensors,e);return iu((()=>{const e=this.tensors.map((e=>Ju(e,r)));return Jh(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=wN(this.elementShape,this.tensors,e),r=this.tensors.pop();return xN(r.shape,e,"TensorList shape mismatch: "),Ju(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(xN(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");uu(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);xN(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=wN(this.elementShape,this.tensors,t);return Ju(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);xN(this.elementShape,t.shape,"TensorList shape mismatch: "),uu(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);xN(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=wN(this.elementShape,this.tensors,n);return 0===e.length?Ms([],[0].concat(r)):iu((()=>{const t=e.map((e=>Ju(this.tensors[e],r)));return Jh(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);xN(this.elementShape,t,"TensorList shape mismatch: ");const n=wN(this.elementShape,this.tensors,t);return 0===this.size()?Ms([],[0].concat(n)):iu((()=>{const e=this.tensors.map((e=>Ju(e,n)));return tl(e,0)}))}},SN=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=pS("thenBranch",e,t,n),a=pS("elseBranch",e,t,n),s=pS("cond",e,t,n),i=pS("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=pS("body",e,t,n),a=pS("cond",e,t,n),s=pS("args",e,t,n),i=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map((e=>e.id));let u=await i[0].data();i.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()}));let l=s;for(;u[0];){const e=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map((e=>e.id));e.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const s=await n.functionMap[a].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await s[0].data(),s.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return l}case"LoopCond":return[xS(pS("pred",e,t,n))];case"Switch":{const r=pS("pred",e,t,n);let a=pS("data",e,t,n);return a.kept||(a=xS(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==fS(e,t,n)));return r?[xS(fS(r,t,n))]:void 0}case"Enter":{const r=pS("frameName",e,t,n),a=pS("tensor",e,t,n);return n.enterFrame(r),[xS(a)]}case"Exit":{const r=pS("tensor",e,t,n);return n.exitFrame(),[xS(r)]}case"NextIteration":{const r=pS("tensor",e,t,n);return n.nextIteration(),[xS(r)]}case"TensorArrayV3":{const r=pS("size",e,t,n),a=pS("dtype",e,t,n),s=pS("elementShape",e,t,n),i=pS("dynamicSize",e,t,n),o=pS("clearAfterRead",e,t,n),u=pS("identicalElementShapes",e,t,n),l=pS("name",e,t,n),c=new class{constructor(e,t,n,r,a,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Fh(0),uu(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),xN(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,uu(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return Ms([],[0].concat(this.elementShape));const n=this.readMany(e);return xN(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Jh(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return Ms([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return xN(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),tl(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,hd(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const a=0===n?0:t.size/n,s=[];iu((()=>{t=Ju(t,[1,n,a]);for(let n=0;n<e.length;++n){const i=[0,0===n?0:r[n-1],0],o=[1,e[n],a];s[n]=Ju(rl(t,i,o),this.elementShape)}return s}));const i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,s)}}(l,a,r,s,u,i,o);return n.addTensorArray(c),[c.idTensor,Fh(1)]}case"TensorArrayWriteV3":{const r=pS("tensorArrayId",e,t,n),a=pS("index",e,t,n),s=pS("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{const r=pS("tensorArrayId",e,t,n),a=pS("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{const r=pS("tensorArrayId",e,t,n),a=pS("indices",e,t,n),s=pS("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{const r=pS("tensorArrayId",e,t,n),a=pS("indices",e,t,n),s=pS("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{const r=pS("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=pS("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{const r=pS("tensorArrayId",e,t,n),a=pS("tensor",e,t,n),s=pS("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{const r=pS("tensorArrayId",e,t,n);return[Fh(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=pS("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const r=pS("tensorListId",e,t,n),a=pS("index",e,t,n),s=pS("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{const r=pS("tensorListId",e,t,n),a=pS("index",e,t,n),s=pS("elementShape",e,t,n),i=pS("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=pS("indices",e,t,n),a=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);const s=new IN([],n,e.dtype,r),i=hd(e,0);return t.forEach(((e,t)=>{s.setItem(e,i[t])})),s}(pS("tensor",e,t,n),r,pS("elementShape",e,t,n),pS("numElements",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=pS("elementShape",e,t,n),a=pS("elementDType",e,t,n);let s;s="TensorListReserve"===e.op?"numElements":"maxNumElements";const i=function(e,t,n){return new IN([],e,t,n)}(r,a,pS(s,e,t,n));return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const r=pS("tensorListId",e,t,n),a=pS("indices",e,t,n),s=pS("elementShape",e,t,n),i=pS("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,i,s)]}case"TensorListStack":{const r=pS("tensorListId",e,t,n),a=pS("elementShape",e,t,n),s=pS("elementDType",e,t,n),i=pS("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,i)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);xN(e.shape.slice(1),t,"TensorList shape mismatch: ");const a=hd(e);return new IN(a,t,r)}(pS("tensor",e,t,n),pS("elementShape",e,t,n),pS("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{const r=pS("tensorListId",e,t,n),a=n.getTensorList(r.id),s=pS("dtype",e,t,n),i=pS("elementShape",e,t,n);return[a.concat(s,i)]}case"TensorListPushBack":{const r=pS("tensorListId",e,t,n),a=pS("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{const r=pS("tensorListId",e,t,n),a=pS("elementShape",e,t,n),s=pS("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{const r=pS("tensor",e,t,n),a=pS("elementShape",e,t,n),s=function(e,t,n){let r=0;const a=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const s=kN(e.shape.slice(1),n),i=0===r?0:e.size/r,o=iu((()=>{const n=[];e=Ju(e,[1,r,i]);for(let r=0;r<t.length;++r){const o=[0,0===r?0:a[r-1],0],u=[1,t[r],i];n[r]=Ju(rl(e,o,u),s)}return e.dispose(),n})),u=new IN([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)u.setItem(e,o[e]);return u}(r,pS("lengths",e,t,n),a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function NN(e,t,n){const[r,a]=pS("fusedOps",e,t,n),s="biasadd"===r,i=!s,o="prelu"===a,u="fusedbatchnorm"===r,l=pS("numArgs",e,t,n);if(s){if(o&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=pS("strides",e,t,n),h=bS(e,t,n),d=pS("dataFormat",e,t,n).toUpperCase(),p=pS("dilations",e,t,n);let[f,m]=pS("args",e,t,n);return i&&(m=f,f=void 0),{stride:c,pad:h,dataFormat:d,dilations:p,biasArg:f,preluArg:m,activationFunc:a,leakyreluAlpha:pS("leakyreluAlpha",e,t,n)}}function TN(e,t,n){return{boxes:pS("boxes",e,t,n),scores:pS("scores",e,t,n),maxOutputSize:pS("maxOutputSize",e,t,n),iouThreshold:pS("iouThreshold",e,t,n),scoreThreshold:pS("scoreThreshold",e,t,n),softNmsSigma:pS("softNmsSigma",e,t,n)}}var EN=async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const a=pS("keyDType",e,t,n),s=pS("valueDType",e,t,n),i=new class{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Fh(0),this.tensorMap=new Map,uu(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Fh(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),iu((()=>{const e=hd(t),r=n.length,a=e.length;pa.assert(r===a,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`));for(let t=0;t<r;t++){const r=n[t],a=e[t];uu(a),this.tensorMap.set(r,a)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return iu((()=>{const e=[];for(let r=0;r<n.length;r++){const a=n[r],s=this.findWithDefault(a,t);e.push(s)}return Jh(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}(a,s);return r.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{const a=pS("tableHandle",e,t,n,r),s=pS("keys",e,t,n),i=pS("values",e,t,n),o=r.getHashTableById(a.id);return[await o.import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{const a=pS("tableHandle",e,t,n,r),s=pS("keys",e,t,n),i=pS("defaultValue",e,t,n),o=r.getHashTableById(a.id);return[await o.find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const a=pS("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function CN(e,t,n,r){const a=((e,t,n)=>{switch(e.category){case"arithmetic":return iu((()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[xu(pS("a",e,t,n),pS("b",e,t,n))];case"AddN":return[Tu(pS("tensors",e,t,n))];case"FloorMod":case"Mod":return[Kc(pS("a",e,t,n),pS("b",e,t,n))];case"Mul":return[ku(pS("a",e,t,n),pS("b",e,t,n))];case"RealDiv":case"Div":return[wu(pS("a",e,t,n),pS("b",e,t,n))];case"DivNoNan":return[zl(pS("a",e,t,n),pS("b",e,t,n))];case"FloorDiv":return[vu(pS("a",e,t,n),pS("b",e,t,n))];case"Sub":return[wc(pS("a",e,t,n),pS("b",e,t,n))];case"Minimum":return[jc(pS("a",e,t,n),pS("b",e,t,n))];case"Maximum":return[Bc(pS("a",e,t,n),pS("b",e,t,n))];case"Pow":return[lh(pS("a",e,t,n),pS("b",e,t,n))];case"SquaredDifference":return[Yh(pS("a",e,t,n),pS("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return iu((()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[Iu(pS("x",e,t,n))];case"Acos":return[Su(pS("x",e,t,n))];case"Acosh":return[Nu(pS("x",e,t,n))];case"Asin":return[Au(pS("x",e,t,n))];case"Asinh":return[Fu(pS("x",e,t,n))];case"Atan":return[Ru(pS("x",e,t,n))];case"Atan2":return[Du(pS("x",e,t,n),pS("y",e,t,n))];case"Atanh":return[Mu(pS("x",e,t,n))];case"Ceil":return[fl(pS("x",e,t,n))];case"Complex":return[Rs(pS("real",e,t,n),pS("imag",e,t,n))];case"Cos":return[El(pS("x",e,t,n))];case"Cosh":return[Cl(pS("x",e,t,n))];case"Elu":return[Wl(pS("x",e,t,n))];case"Erf":return[Vl(pS("x",e,t,n))];case"Exp":return[Ul(pS("x",e,t,n))];case"Expm1":return[Hl(pS("x",e,t,n))];case"Floor":return[Xl(pS("x",e,t,n))];case"Log":return[uc(pS("x",e,t,n))];case"Log1p":return[lc(pS("x",e,t,n))];case"Imag":return[Ql(pS("x",e,t,n))];case"Neg":return[yc(pS("x",e,t,n))];case"Reciprocal":return[kh(pS("x",e,t,n))];case"Real":return[wh(pS("x",e,t,n))];case"Relu":return[Ih(pS("x",e,t,n))];case"Round":return[$h(pS("x",e,t,n))];case"Selu":return[Rh(pS("x",e,t,n))];case"Sigmoid":return[nl(pS("x",e,t,n))];case"Sin":return[Lh(pS("x",e,t,n))];case"Sign":return[Oh(pS("x",e,t,n))];case"Sinh":return[zh(pS("x",e,t,n))];case"Softplus":return[bc(pS("x",e,t,n))];case"Sqrt":return[Xh(pS("x",e,t,n))];case"Square":return[Xc(pS("x",e,t,n))];case"Tanh":return[al(pS("x",e,t,n))];case"Tan":return[td(pS("x",e,t,n))];case"ClipByValue":return[ml(pS("x",e,t,n),pS("clipValueMin",e,t,n),pS("clipValueMax",e,t,n))];case"Relu6":return[Sh(pS("x",e,t,n))];case"Rsqrt":return[Ah(fS(e.inputNames[0],t,n))];case"Prod":return[hh(pS("x",e,t,n),pS("axes",e,t,n))];case"LeakyRelu":return[rc(pS("x",e,t,n),pS("alpha",e,t,n))];case"Prelu":return[ch(pS("x",e,t,n),pS("alpha",e,t,n))];case"IsNan":return[nc(fS(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return SN(e,t,n);case"convolution":return iu((()=>((e,t,n)=>{switch(e.op){case"Conv1D":{const r=pS("stride",e,t,n),a=pS("pad",e,t,n),s=pS("dataFormat",e,t,n).toUpperCase(),i=pS("dilation",e,t,n);return[wl(pS("x",e,t,n),pS("filter",e,t,n),r,a,s,i)]}case"Conv2D":{const r=pS("strides",e,t,n),a=bS(e,t,n),s=pS("dataFormat",e,t,n).toUpperCase(),i=pS("dilations",e,t,n);return[vl(pS("x",e,t,n),pS("filter",e,t,n),[r[1],r[2]],a,s,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:u,activationFunc:l,leakyreluAlpha:c}=NN(e,t,n);return[Ed.conv2d({x:pS("x",e,t,n),filter:pS("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u,leakyreluAlpha:c})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:u,activationFunc:l,leakyreluAlpha:c}=NN(e,t,n);return[Ed.depthwiseConv2d({x:pS("x",e,t,n),filter:pS("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u,leakyreluAlpha:c})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=pS("outputShape",e,t,n),a=pS("strides",e,t,n),s=bS(e,t,n);return[Il(pS("x",e,t,n),pS("filter",e,t,n),r,[a[1],a[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=pS("strides",e,t,n),a=bS(e,t,n),s=pS("dilations",e,t,n),i=pS("dataFormat",e,t,n).toUpperCase();return[Fl(pS("input",e,t,n),pS("filter",e,t,n),[r[1],r[2]],a,i,[s[1],s[2]])]}case"Conv3D":{const r=pS("strides",e,t,n),a=pS("pad",e,t,n),s=pS("dataFormat",e,t,n).toUpperCase(),i=pS("dilations",e,t,n);return[Sl(pS("x",e,t,n),pS("filter",e,t,n),[r[1],r[2],r[3]],a,s,[i[1],i[2],i[3]])]}case"AvgPool":{const r=pS("strides",e,t,n),a=pS("pad",e,t,n),s=pS("kernelSize",e,t,n);return[Qu(pS("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPool":{const r=pS("strides",e,t,n),a=pS("pad",e,t,n),s=pS("kernelSize",e,t,n);return[Lc(pS("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{const r=pS("strides",e,t,n),a=pS("pad",e,t,n),s=pS("kernelSize",e,t,n),i=pS("includeBatchInIndex",e,t,n),{result:o,indexes:u}=Pc(pS("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a,i);return[o,u]}case"AvgPool3D":{const r=pS("strides",e,t,n),a=pS("pad",e,t,n),s=pS("kernelSize",e,t,n);return[el(pS("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{const r=pS("strides",e,t,n),a=pS("pad",e,t,n),s=pS("kernelSize",e,t,n);return[zc(pS("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{const r=pS("strides",e,t,n),a=pS("pad",e,t,n),s=pS("dilations",e,t,n),i=r[1],o=r[2],u=s[1],l=s[2];return[Dl(pS("x",e,t,n),pS("filter",e,t,n),[i,o],a,[u,l],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return iu((()=>((e,t,n)=>{switch(e.op){case"Fill":{const r=pS("shape",e,t,n),a=pS("dtype",e,t,n);return[Kl(r,pS("value",e,t,n),a)]}case"LinSpace":return[ic(pS("start",e,t,n),pS("stop",e,t,n),pS("num",e,t,n))];case"Multinomial":{const r=pS("logits",e,t,n),a=pS("numSamples",e,t,n),s=pS("seed",e,t,n);return[Jc(r,a,s)]}case"OneHot":{const r=pS("indices",e,t,n),a=pS("depth",e,t,n),s=pS("onValue",e,t,n),i=pS("offValue",e,t,n);return[Xi(r,a,s,i)]}case"Ones":return[Uc(pS("shape",e,t,n),pS("dtype",e,t,n))];case"OnesLike":return[eh(pS("x",e,t,n))];case"RandomUniform":return[xh(pS("shape",e,t,n),pS("minval",e,t,n),pS("maxval",e,t,n),pS("dtype",e,t,n))];case"Range":return[vh(pS("start",e,t,n),pS("stop",e,t,n),pS("step",e,t,n),pS("dtype",e,t,n))];case"TruncatedNormal":{const r=pS("shape",e,t,n),a=pS("mean",e,t,n),s=pS("stdDev",e,t,n),i=pS("seed",e,t,n);return[ud(r,a,s,pS("dtype",e,t,n),i)]}case"Zeros":return[Vc(pS("shape",e,t,n),pS("dtype",e,t,n))];case"ZerosLike":return[Ll(pS("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=TN(e,t,n),l=await Op.nonMaxSuppressionWithScoreAsync(r,a,s,i,o,u);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=TN(e,t,n),u=pS("padToMaxOutputSize",e,t,n),l=await Op.nonMaxSuppressionPaddedAsync(r,a,s,i,o,u);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=TN(e,t,n);return[await Op.nonMaxSuppressionAsync(r,a,s,i,o)]}case"Where":{const r=Ci(pS("condition",e,t,n),"bool"),a=[await fd(r)];return r.dispose(),a}case"ListDiff":return Mh(pS("x",e,t,n),pS("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return iu((()=>((e,t,n)=>{switch(e.op){case"TopKV2":{const r=pS("x",e,t,n),a=pS("k",e,t,n),s=pS("sorted",e,t,n),i=od(r,a,s);return[i.values,i.indices]}case"Unique":{const r=pS("x",e,t,n),a=ld(r);return[a.values,a.indices]}case"UniqueV2":{const r=pS("x",e,t,n),a=pS("axis",e,t,n),s=ld(r,a);return[s.values,s.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return iu((()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{const r=pS("images",e,t,n),a=pS("size",e,t,n),s=pS("alignCorners",e,t,n),i=pS("halfPixelCenters",e,t,n);return[Op.resizeBilinear(r,[a[0],a[1]],s,i)]}case"ResizeNearestNeighbor":{const r=pS("images",e,t,n),a=pS("size",e,t,n),s=pS("alignCorners",e,t,n),i=pS("halfPixelCenters",e,t,n);return[Op.resizeNearestNeighbor(r,[a[0],a[1]],s,i)]}case"CropAndResize":{const r=pS("image",e,t,n),a=pS("boxes",e,t,n),s=pS("boxInd",e,t,n),i=pS("cropSize",e,t,n),o=pS("method",e,t,n),u=pS("extrapolationValue",e,t,n);return[Op.cropAndResize(r,a,s,i,o,u)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return iu((()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=pS("default",e,t,n);return[fS(e.name,t,n)||r];case"Placeholder":return[fS(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[xS(pS("x",e,t,n))];case"IdentityN":return pS("x",e,t,n).map((e=>xS(e)));case"Shape":return[nd(pS("x",e,t,n).shape,"int32")];case"ShapeN":return pS("x",e,t,n).map((e=>nd(e.shape)));case"Size":return[Fh(pS("x",e,t,n).size,"int32")];case"Rank":return[Fh(pS("x",e,t,n).rank,"int32")];case"NoOp":return[Fh(1)];case"Print":const a=pS("x",e,t,n),s=pS("data",e,t,n),i=pS("message",e,t,n),o=pS("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<s.length;e++)console.log(Array.prototype.slice.call(s[e].dataSync()).slice(0,o));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return iu((()=>((e,t,n)=>{switch(e.op){case"Equal":return[Ml(pS("a",e,t,n),pS("b",e,t,n))];case"NotEqual":return[Qc(pS("a",e,t,n),pS("b",e,t,n))];case"Greater":return[Zl(pS("a",e,t,n),pS("b",e,t,n))];case"GreaterEqual":return[Jl(pS("a",e,t,n),pS("b",e,t,n))];case"Less":return[ac(pS("a",e,t,n),pS("b",e,t,n))];case"LessEqual":return[sc(pS("a",e,t,n),pS("b",e,t,n))];case"LogicalAnd":return[Rc(pS("a",e,t,n),pS("b",e,t,n))];case"LogicalNot":return[Dc(pS("a",e,t,n))];case"LogicalOr":return[Mc(pS("a",e,t,n),pS("b",e,t,n))];case"Select":case"SelectV2":return[Ol(pS("condition",e,t,n),pS("a",e,t,n),pS("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return iu((()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[Ki(pS("a",e,t,n),pS("b",e,t,n),pS("transposeA",e,t,n),pS("transposeB",e,t,n))];case"Einsum":return[Bl(pS("equation",e,t,n),...pS("tensors",e,t,n))];case"Transpose":return[Yi(pS("x",e,t,n),pS("perm",e,t,n))];case"_FusedMatMul":const[r,a]=pS("fusedOps",e,t,n),s="biasadd"===r,i="prelu"===a,o=pS("numArgs",e,t,n),u=pS("leakyreluAlpha",e,t,n);if(s){if(i&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[l,c]=pS("args",e,t,n);return[Ed.matMul({a:pS("a",e,t,n),b:pS("b",e,t,n),transposeA:pS("transposeA",e,t,n),transposeB:pS("transposeB",e,t,n),bias:l,activation:a,preluActivationWeights:c,leakyreluAlpha:u})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return iu((()=>((e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[ol(pS("x",e,t,n),pS("mean",e,t,n),pS("variance",e,t,n),pS("offset",e,t,n),pS("scale",e,t,n),pS("epsilon",e,t,n))];case"LRN":return[oc(pS("x",e,t,n),pS("radius",e,t,n),pS("bias",e,t,n),pS("alpha",e,t,n),pS("beta",e,t,n))];case"Softmax":return[Uh(pS("x",e,t,n))];case"LogSoftmax":return[Ic(pS("x",e,t,n))];case"SparseToDense":return[wd(pS("sparseIndices",e,t,n),pS("outputShape",e,t,n),pS("sparseValues",e,t,n),pS("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return iu((()=>((e,t,n)=>{switch(e.op){case"Max":{const r=pS("axis",e,t,n),a=pS("keepDims",e,t,n);return[vc(pS("x",e,t,n),r,a)]}case"Mean":{const r=pS("axis",e,t,n),a=pS("keepDims",e,t,n);return[Wc(pS("x",e,t,n),r,a)]}case"Min":{const r=pS("axis",e,t,n),a=pS("keepDims",e,t,n);return[Hc(pS("x",e,t,n),r,a)]}case"Sum":{const r=pS("axis",e,t,n),a=pS("keepDims",e,t,n);return[kc(pS("x",e,t,n),r,a)]}case"All":{const r=pS("axis",e,t,n),a=pS("keepDims",e,t,n);return[Eu(pS("x",e,t,n),r,a)]}case"Any":{const r=pS("axis",e,t,n),a=pS("keepDims",e,t,n);return[Cu(pS("x",e,t,n),r,a)]}case"ArgMax":{const r=pS("axis",e,t,n);return[_u(pS("x",e,t,n),r)]}case"ArgMin":{const r=pS("axis",e,t,n);return[$u(pS("x",e,t,n),r)]}case"Prod":{const r=pS("axis",e,t,n),a=pS("keepDims",e,t,n);return[hh(pS("x",e,t,n),r,a)]}case"Cumsum":{const r=pS("axis",e,t,n),a=pS("exclusive",e,t,n),s=pS("reverse",e,t,n);return[_l(pS("x",e,t,n),r,a,s)]}case"Bincount":const r=pS("x",e,t,n),a=pS("weights",e,t,n),s=pS("size",e,t,n);return[hl(r,a,s)];case"DenseBincount":{const r=pS("x",e,t,n),a=pS("weights",e,t,n),s=pS("size",e,t,n),i=pS("binaryOutput",e,t,n);return[$l(r,a,s,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return iu((()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const r=pS("n",e,t,n),a=pS("axis",e,t,n);let s=pS("tensors",e,t,n);return s=s.slice(0,r),[tl(s,a)]}case"Gather":{const r=pS("x",e,t,n),a=pS("indices",e,t,n);return[Yl(r,Ci(a,"int32"),0)]}case"GatherV2":{const r=pS("axis",e,t,n),a=pS("batchDims",e,t,n),s=pS("x",e,t,n),i=pS("indices",e,t,n);return[Yl(s,Ci(i,"int32"),r,a)]}case"Reverse":{const r=pS("dims",e,t,n),a=[];for(let e=0;e<r.length;e++)r[e]&&a.push(e);const s=pS("x",e,t,n);return[Nh(s,a)]}case"ReverseV2":{const r=pS("axis",e,t,n),a=pS("x",e,t,n);return[Nh(a,r)]}case"Slice":{const r=pS("begin",e,t,n),a=pS("size",e,t,n);return[rl(pS("x",e,t,n),r,a)]}case"StridedSlice":{const r=pS("begin",e,t,n),a=pS("end",e,t,n),s=pS("strides",e,t,n),i=pS("beginMask",e,t,n),o=pS("endMask",e,t,n),u=pS("ellipsisMask",e,t,n),l=pS("newAxisMask",e,t,n),c=pS("shrinkAxisMask",e,t,n),h=pS("x",e,t,n);return[ed(h,r,a,s,i,o,u,l,c)]}case"Pack":return iu((()=>{const r=pS("axis",e,t,n),a=pS("tensors",e,t,n),s=a[0].shape,i=Zh(a[0]).shape,o=a.map((e=>{const t=pa.arraysEqual(e.shape,s);if(!t&&!pa.arraysEqual(Zh(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:Ju(e,s)}));return[Jh(o,r)]}));case"Unpack":{const r=pS("axis",e,t,n),a=pS("tensor",e,t,n);return hd(a,r)}case"Tile":{const r=pS("reps",e,t,n);return[jl(pS("x",e,t,n),r)]}case"Split":case"SplitV":{const r=pS("axis",e,t,n),a=pS("numOrSizeSplits",e,t,n),s=pS("x",e,t,n);return qh(s,a,r)}case"ScatterNd":{const r=pS("indices",e,t,n),a=pS("values",e,t,n),s=pS("shape",e,t,n);return[xd(r,a,s)]}case"GatherNd":{const r=pS("x",e,t,n),a=pS("indices",e,t,n);return[kd(r,a)]}case"SparseToDense":{const r=pS("sparseIndices",e,t,n),a=pS("outputShape",e,t,n),s=pS("sparseValues",e,t,n),i=pS("defaultValue",e,t,n);return[wd(r,s,a,s.dtype===i.dtype?i:Ci(i,s.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return iu((()=>((e,t,n)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:a,emptyRowIndicator:s,reverseIndexMap:i}=Pp.sparseFillEmptyRows(pS("indices",e,t,n),pS("values",e,t,n),pS("denseShape",e,t,n),pS("defaultValue",e,t,n));return[r,a,s,i]}case"SparseReshape":{const{outputIndices:r,outputShape:a}=Pp.sparseReshape(pS("inputIndices",e,t,n),pS("inputShape",e,t,n),pS("newShape",e,t,n));return[r,a]}case"SparseSegmentMean":return[Pp.sparseSegmentMean(pS("data",e,t,n),pS("indices",e,t,n),pS("segmentIds",e,t,n))];case"SparseSegmentSum":return[Pp.sparseSegmentSum(pS("data",e,t,n),pS("indices",e,t,n),pS("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return iu((()=>((e,t,n)=>{switch(e.op){case"FFT":return[Gh(pS("x",e,t,n))];case"IFFT":return[Hh(pS("x",e,t,n))];case"RFFT":return[Kh(pS("x",e,t,n))];case"IRFFT":return[jh(pS("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return iu((()=>((e,t,n)=>{switch(e.op){case"StringNGrams":{const{nGrams:r,nGramsSplits:a}=Bp.stringNGrams(pS("data",e,t,n),pS("dataSplits",e,t,n),pS("separator",e,t,n),pS("nGramWidths",e,t,n),pS("leftPad",e,t,n),pS("rightPad",e,t,n),pS("padWidth",e,t,n),pS("preserveShortSequences",e,t,n));return[r,a]}case"StringSplit":{const{indices:r,values:a,shape:s}=Bp.stringSplit(pS("input",e,t,n),pS("delimiter",e,t,n),pS("skipEmpty",e,t,n));return[r,a,s]}case"StringToHashBucketFast":return[Bp.stringToHashBucketFast(pS("input",e,t,n),pS("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return iu((()=>((e,t,n)=>{switch(e.op){case"Cast":return[Ci(pS("x",e,t,n),pS("dtype",e,t,n))];case"ExpandDims":{const r=pS("axis",e,t,n);return[Gl(pS("x",e,t,n),r)]}case"Squeeze":{const r=pS("axis",e,t,n);return[Zh(pS("x",e,t,n),r)]}case"Reshape":return[Ju(pS("x",e,t,n),pS("shape",e,t,n))];case"MirrorPad":return[qc(pS("x",e,t,n),pS("padding",e,t,n),pS("mode",e,t,n))];case"PadV2":case"Pad":return[nh(pS("x",e,t,n),pS("padding",e,t,n),pS("constantValue",e,t,n))];case"SpaceToBatchND":{const r=pS("blockShape",e,t,n),a=pS("paddings",e,t,n);return[oh(pS("x",e,t,n),r,a)]}case"BatchToSpaceND":{const r=pS("blockShape",e,t,n),a=pS("crops",e,t,n);return[il(pS("x",e,t,n),r,a)]}case"DepthToSpace":{const r=pS("blockSize",e,t,n),a=pS("dataFormat",e,t,n).toUpperCase();return[Al(pS("x",e,t,n),r,a)]}case"BroadcastTo":return[pl(pS("x",e,t,n),pS("shape",e,t,n))];case"BroadcastArgs":return[dl(pS("s0",e,t,n),pS("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return EN(e,t,n,r);case"custom":const a=hS(e.op);if(a&&a.customExecutor)return a.customExecutor(new class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return fS(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return fS(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return uN(this.node.rawAttrs,e,t);if(null!=n.s)return iN(this.node.rawAttrs,e,t);if(null!=n.b)return oN(this.node.rawAttrs,e,t);if(null!=n.shape)return fN(this.node.rawAttrs,e,t);if(null!=n.type)return hN(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return mN(this.node.rawAttrs,e,t);if(null!=n.list.s)return gN(this.node.rawAttrs,e,t);if(null!=n.list.shape)return yN(this.node.rawAttrs,e,t);if(null!=n.list.b)return bN(this.node.rawAttrs,e,t);if(null!=n.list.type)return dN(this.node.rawAttrs,e,t)}return t}}(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return pa.isPromise(a)?a.then((e=>[].concat(e))):[].concat(a)}var _N=class{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function $N(e,t,n,r){const a=new Set,s=[];let i=null,o=null;const u=new Set,l=Object.keys(e).map((e=>yS(e)[0]));let c=[];null!=r&&(c=r.map((e=>yS(e.name)[0])));const h=[...t];for(;h.length>0;){const e=h.pop();(DN(e)||MN(e)||ON(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>a.has(e)))),a.add(e.name),null==n[e.name]&&-1===l.indexOf(e.name)&&-1===c.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach((e=>{u.has(e.name)||(u.add(e.name),h.push(e))})):s.push(e.name))}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}var AN=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],FN=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],RN=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function DN(e){return AN.indexOf(e.op)>=0}function MN(e){return FN.indexOf(e.op)>=0}function ON(e){return RN.indexOf(e.op)>=0}var LN=class{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new LN(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const n=$N(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){const n=t.map((e=>e.name)),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return function(e,t,n){const{usedNodes:r,inputs:a}=n,s=[],i=Object.keys(a).map((e=>yS(e)[0])).map((t=>e.nodes[t])),o=e.initNodes;i.forEach((e=>{r.has(e.name)&&s.push(e)})),e.weights.forEach((e=>{r.has(e.name)&&s.push(e)})),null!=o&&o.forEach((e=>{r.has(e.name)&&s.push(e)}));const u=new Set,l=[];for(;s.length>0;){const e=s.pop();u.add(e.name),t[e.name]||l.push(e),e.children.forEach((e=>{!u.has(e.name)&&r.has(e.name)&&e.inputs.every((e=>u.has(e.name)))&&s.push(e)}))}return l}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[yS(e)[0]])),a=t.map((e=>yS(e)[0]));let s=a.map((e=>this.graph.nodes[e]));this.resetIntermediateTensors(),0===s.length&&(s=this._outputs);const i=this.getCompilationKey(r,s);let o=this.compiledMap.get(i);null==o&&(o=this.compile(e,s),this.compiledMap.set(i,o));const u={},l={};return iu((()=>{const n=new _N(this.weightMap,u,l,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,a]=yS(t),s=[];s[a]=e[t],r[n]=s}));const s=this.getFrozenTensorIds(r),i={};for(let e=0;e<o.length;e++){const t=o[e];if(!r[t.name]){const e=CN(t,r,n,this._resourceManager);if(pa.isPromise(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.checkTensorForDisposal(t.name,t,r,n,s,a,i)}}return null==this.parent&&n.dispose(s),t.map((e=>fS(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,i){"control"!==t.category&&-1===s.indexOf(e)&&(n[e].forEach((e=>{null!=e&&(i[e.id]=(i[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){const s=function(e,t,n){return t[gS(e,n.currentContextId)]}(e.name,n,r);null!=s&&s.forEach((e=>{if(e&&!e.kept&&!a.has(e.id)){const n=i[e.id];if(1===n){if(this.keepTensorForDebug){const[n,a]=mS(t.name,r);this.intermediateTensors[n]||(this.intermediateTensors[n]=[]),this.intermediateTensors[n][a]=e}else e.dispose();delete i[e.id]}else null!=n&&i[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.intermediateTensors&&(Object.keys(this.intermediateTensors).forEach((e=>this.intermediateTensors[e].forEach((e=>e.dispose())))),this.disposeTensorsMap())}disposeTensorsMap(){this.tensorsMap&&Object.keys(this.tensorsMap).forEach((e=>{this.tensorsMap[e].forEach((e=>{!e||e.kept||e.isDisposed||this.keepIds.has(e.id)||e.dispose()}))}))}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(const e in this.intermediateTensors)this.intermediateTensors[e].forEach((e=>e.dispose())),delete this.intermediateTensors[e]}async _executeAsync(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=Ue().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){console.warn(e.message)}this.resetIntermediateTensors();const s=new _N(this.weightMap,r,a,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,s,t,n);const i=t.map((e=>fS(e,this.tensorsMap,s))),o=i.map((e=>e.id)),u=Object.keys(e).map((t=>e[t].id));return this.keepIds=new Set([...o,...u,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),null==this.parent&&s.dispose(this.keepIds),i}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const a=Object.keys(e),s=a.map((e=>this.graph.nodes[yS(e)[0]])),i=n.map((e=>yS(e)[0]));let o=i.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);const{usedNodes:u,missingInputs:l,dynamicNode:c,syncInputs:h}=$N(e,o,this.weightMap,this._initNodes),d=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),p=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=yS(t),a=[];a[r]=e[t],p[n]=a}));const f={},m=this.getFrozenTensorIds(p),g={};for(;d.length>0;){const e=this.processStack(s,d,t,p,g,m,i,f,u);await Promise.all(e)}null!=c||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=o.filter((e=>!DN(e)&&!fS(e.name,p,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=c&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${a}]. Consider providing the following inputs: [${l}]. ${e}`)}return p}processStack(e,t,n,r,a,s,i,o,u){const l=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&pS("isConstant",e.node,r,n)&&([c]=mS(e.node.name,n)),null==r[e.node.name]){const h=CN(e.node,r,n,this._resourceManager);c||([c]=mS(e.node.name,n));const d=n.currentContext;pa.isPromise(h)?l.push(h.then((l=>(r[c]=l,n.currentContext=d,this.checkTensorForDisposal(c,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,u),l)))):(r[c]=h,this.checkTensorForDisposal(c,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,u))}else this.processChildNodes(e.node,t,n,r,a,u)}return l}processChildNodes(e,t,n,r,a,s){e.children.forEach((e=>{const[i]=mS(e.name,n);!a[i]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!fS(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!fS(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=yS(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){const e=a.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));pa.assert(t,(()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}a.attrParams.dtype&&a.attrParams.dtype.value&&pa.assert(n.dtype===a.attrParams.dtype.value,(()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){const t={};for(const n in e)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?t[this._signature.inputs[n].name]=e[n]:t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=yS(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]?this._signature.outputs[e].name:e),{})}checkOutputs(e){e.forEach((e=>{const[t]=yS(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}},zN=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new class{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=Ai.browserHTTPRequest(e,this.loadOptions);else{const t=Ai.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(Ai.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=Ai.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new LN(aN.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=aN.Instance.transformGraph(e.modelInitializer);this.initializer=new LN(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){const t=Ai.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof ja||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((t,n,r)=>(t[n]=e[r],t)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function PN(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e=`${e}model.json?tfjs-format=file`);const n=new zN(e,t);return await n.load(),n}var BN="3.13.0",WN={};p(WN,{CSVDataset:()=>AT,Dataset:()=>xT,FileDataSource:()=>GT,TextLineDataset:()=>ST,URLDataSource:()=>HT,array:()=>wT,csv:()=>jT,func:()=>qT,generator:()=>KT,microphone:()=>YT,version_data:()=>ZT,webcam:()=>XT,zip:()=>kT});var VN=f(D()),UN=f(D());function GN(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Map,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new Set;if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(KN(e)){const a=Array.isArray(e)?[]:{};r.add(e);for(const s in e){const i=GN(e[s],t,n,r);a[s]=i}return r.delete(e),e.__proto__&&(a.__proto__=e.__proto__),a}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,a.value),a.value}function HN(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Set;const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(KN(r)){const a=Array.isArray(r)?[]:{};n.add(r);for(const s in r){const r=HN(e.map((e=>e[s])),t,n);a[s]=r}return n.delete(r),a}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return a.value}function jN(e){return null===e?null:KN(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function qN(e,t){const n=new Map;GN(e,t,n);for(const e of Array.from(n.keys())){const t=n.get(e);if(pa.isPromise(t)){const r=await t;n.set(e,r)}}return GN(e,t,n)}function KN(e){let t=!1;if(Ue().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:n}=M();t=e instanceof n}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof ja)&&!(e instanceof Promise)&&!t)}function XN(e){return e instanceof ja?{value:e.clone(),recurse:!1}:KN(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var YN=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},ZN=class extends YN{constructor(){super(ZN.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}};function JN(e){return new rT(e)}function QN(e){return new aT(e)}ZN.INITIAL_CAPACITY=32;var eT,tT,nT=class{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new hT(this,e)}filter(e){return new lT(this,e)}map(e){return new cT(this,e)}mapAsync(e){return new dT(this,e)}serialMapAsync(e){return new dT(this,e).serial()}flatmap(e){return new fT(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e){return new uT(this,e,!(arguments.length>1&&void 0!==arguments[1])||arguments[1])}columnMajorBatch(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:jN;return this.rowMajorBatch(e,t).map((e=>function(e){return HN(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:jN)}(e,n)))}concatenate(e,t){return new mT(JN([this,e]),t)}take(e){return e<0||null==e?this:new oT(this,e)}skip(e){return e<0||null==e?this:new iT(this,e)}prefetch(e){return new yT(this,e)}shuffle(e,t){return new bT(this,e,t)}serial(){return new sT(this)}},rT=class extends nT{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:(t=e,GN(t,XN)),done:!1};var t}},aT=class extends nT{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},sT=class extends nT{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}},iT=class extends nT{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;ou(e.value)}return this.upstream.next()}},oT=class extends nT{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},uT=class extends nT{constructor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},lT=class extends nT{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;ou(e.value)}}},cT=class extends nT{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=ss.getTensorsInContainer(e.value),n=this.transform(e.value),r=ss.getTensorsInContainer(n);for(const e of t)ss.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}},hT=class extends nT{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},dT=class extends nT{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=ss.getTensorsInContainer(e.value),n=await this.transform(e.value),r=ss.getTensorsInContainer(n);for(const e of t)ss.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}},pT=class extends nT{constructor(){super(),this.outputQueue=new ZN,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},fT=class extends pT{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=ss.getTensorsInContainer(e.value),n=this.transform(e.value),r=ss.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const e of t)ss.isTensorInList(e,r)||e.dispose();return!0}},mT=class extends nT{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}};(tT=eT||(eT={}))[tT.FAIL=0]="FAIL",tT[tT.SHORTEST=1]="SHORTEST",tT[tT.LONGEST=2]="LONGEST";var gT=class extends nT{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:eT.FAIL;super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;const r=await qN(this.iterators,(function(e){return e instanceof nT?{value:e.next().then((e=>(t++,e.done&&n++,e.value))),recurse:!1}:{value:null,recurse:!0}}));if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case eT.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case eT.SHORTEST:return{value:null,done:!0};case eT.LONGEST:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},yT=class extends nT{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new YN(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},bT=class extends yT{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=UN.alea(n||pa.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}},xT=class{constructor(){this.size=null}batch(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=this;let r;return pa.assert(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),vT((async()=>(await n.iterator()).columnMajorBatch(e,t,IT)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,vT((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,vT((async()=>(await t.iterator()).filter((t=>iu((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return vT((async()=>(await t.iterator()).map((t=>iu((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return vT((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return vT((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,vT((async()=>{return n=QN((async()=>({value:await t.iterator(),done:!1}))).take(e),new mT(n,undefined);var n}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,vT((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,a=VN.alea(t||pa.now().toString());return vT((async()=>{let t=a.int32();return n&&(t+=a.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,vT((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};function vT(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return new class extends xT{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function wT(e){return vT((async()=>JN(e)),e.length)}function kT(e){if(!KN(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(const n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return vT((async()=>function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:eT.FAIL;return new gT(e,t)}(await qN(e,(e=>{if(e instanceof xT)return{value:e.iterator(),recurse:!1};if(KN(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")})),eT.SHORTEST)),t)}function IT(e){if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof ja||pa.isTypedArray(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof ja?Jh(e):Ms(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}xT.MAX_BUFFER_SIZE=1e4;var ST=class extends xT{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map((e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e)))}},NT='"',TT=Symbol("out"),ET=Symbol("field"),CT=Symbol("quote"),_T=Symbol("quoteafterquote"),$T=Symbol("quoteinquote"),AT=class extends xT{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new ST(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(pa.assert(null==t.delimiter,(()=>"Delimiter should not be provided when delimWhitespace is true.")),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&pa.assert(e.length===this.fullColumnNames.length,(()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+").")),this.fullColumnNames||(this.fullColumnNames=e);const t=this.fullColumnNames.reduce(((e,t)=>(e[t]=e[t]+1||1,e)),{}),n=Object.keys(t).filter((e=>t[e]>1));if(pa.assert(0===n.length,(()=>"Duplicate column names found: "+n.toString())),this.columnConfigs)for(const e of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(e))throw new Error('The key "'+e+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const e=await this.base.iterator(),t=await e.next();if(t.done)throw new Error("No data was found for CSV parsing.");const n=t.value;return this.parseRow(n,!1)}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map((e=>this.makeDataElement(e)))}makeDataElement(e){const t=this.parseRow(e),n={},r={};for(let a=0;a<this.fullColumnNames.length;a++){const s=this.fullColumnNames[a],i=this.columnConfigs?this.columnConfigs[s]:null;if(!this.configuredColumnsOnly||i){const o=t[a];let u=null;if(""===o)if(i&&void 0!==i.default)u=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${s} is empty in this line: ${e}`);u=void 0}else{const e=Number(o);if(isNaN(e))u=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":default:u=e;break;case"int32":u=Math.floor(e);break;case"bool":u=this.getBoolean(o)}else u=e}i&&i.isLabel?r[s]=u:n[s]=u}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=[];let r=0;const a=e.length;let s=TT;for(let t=0;t<a;t++)switch(s){case TT:switch(e.charAt(t)){case NT:r=t+1,s=CT;break;case this.delimiter:if(r=t+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),s=TT;break;default:s=ET,r=t}break;case ET:e.charAt(t)===this.delimiter&&(n.push(e.substring(r,t)),s=TT,r=t+1);break;case CT:e.charAt(t)===NT&&(s=_T);break;case _T:switch(e.charAt(t)){case this.delimiter:n.push(e.substring(r,t-1)),s=TT,r=t+1;break;case NT:s=CT;break;default:s=$T}break;case $T:e.charAt(t)===NT&&(s=CT)}if(s===_T?n.push(e.substring(r,a-1)):n.push(e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},FT=class extends nT{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;const t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(Ue().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");const t=new FT(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(e){throw new Error(`Error thrown while initializing video stream: ${e.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;const t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t;const n=await this.getAudioData();if(this.includeSpectrogram){const t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const e=[],t=[];let n=0;return new Promise((r=>{const a=setInterval((()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(a),r({freqDataQueue:e,timeDataQueue:t}))}),this.fftSize/this.sampleRateHz*1e3)}))}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){const t=e[0].length,n=new Float32Array(e.length*t);return e.forEach(((e,r)=>n.set(e,r*t))),n}getTensorFromAudioDataArray(e,t){const n=new Float32Array(pa.sizeFromShape(t));return n.set(e,n.length-e.length),Ms(n,t)}},RT=class extends nT{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=nd([0],"int32"),this.webcamConfig.centerCrop){const e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,r=(1-t)/2,a=n+e,s=t+r;this.cropBox=rd([r,n,s,a],[1,4])}else this.cropBox=rd([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(Ue().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}const n=new RT(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&pa.assert("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,(()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`));try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise((e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}}))}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=ro.fromPixels(this.webcamVideoElement)}catch(e){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(e)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(e){throw new Error(`Error thrown cropping the video: ${e.message}`)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return iu((()=>{const t=Gl(Ci(e,"float32"),0);let n;n=Op.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const r=n.shape;return Ju(n,r.slice(1))}))}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach((e=>e.stop()));try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},DT=class{},MT=class extends nT{split(e){return new OT(this,e)}},OT=class extends MT{constructor(e,t){super(),this.upstream=e,this.impl=new LT(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},LT=class extends pT{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const e of t.slice(0,-1))this.outputQueue.push(e);return this.carryover=t[t.length-1],!0}},zT=class extends nT{decodeUTF8(){return new PT(this)}},PT=class extends MT{constructor(e){super(),this.upstream=e,this.impl=new BT(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},BT=class extends pT{constructor(e){if(super(),this.upstream=e,Ue().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:e}=M();this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const e=await this.upstream.next();let t,n;return!e.done&&(t=e.value,n=Ue().get("IS_BROWSER")?this.decoder.decode(t,{stream:!0}):this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0)}},WT=class extends zT{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};super(),this.file=e,this.options=t,pa.assert(e instanceof Uint8Array||!!Ue().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),(()=>"FileChunkIterator only supports File, Blob and Uint8Array right now.")),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){if(this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size))return{value:null,done:!0};const e=new Promise(((e,t)=>{const n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{const r=new FileReader;r.onload=n=>{let a=r.result;if(a instanceof ArrayBuffer&&(a=new Uint8Array(a)),!(a instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(a)},r.onabort=e=>t(new Error("Aborted")),r.onerror=e=>t(new Error(e.type));const a=this.file.slice(this.offset,n);r.readAsArrayBuffer(a)}this.offset=n}));return{value:await e,done:!1}}},VT=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function UT(e){return"string"==typeof e&&"file://"===e.substr(0,7)}var GT=class extends DT{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};super(),this.input=e,this.options=t}async iterator(){if(UT(this.input)&&Ue().get("IS_NODE")){const e=O();this.input=e.readFileSync(this.input.substr(7))}return new WT(this.input,this.options)}},HT=class extends DT{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};super(),this.url=e,this.fileOptions=t}async iterator(){return UT(this.url)?new GT(this.url,this.fileOptions).iterator():async function(e){let t,n,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=arguments.length>2?arguments[2]:void 0;"string"==typeof e?t=e:(t=e.url,n=VT(e));const s=await(a||pa.fetch)(t,n);if(s.ok){const e=new Uint8Array(await s.arrayBuffer());return new WT(e,r)}throw new Error(s.statusText)}(this.url,this.fileOptions)}};function jT(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return new AT(new HT(e),t)}function qT(e){const t=QN(e);return vT((async()=>t))}function KT(e){return vT((async()=>{const t=await e();return QN((()=>t.next()))}))}async function XT(e,t){return RT.create(e,t)}async function YT(e){return FT.create(e)}var ZT="3.13.0";function JT(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&pa.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}var QT=Qf.whereImpl,eE=class extends G{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new U(this,ru())}nextDataId(){return eE.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,Ue().get("IS_NODE")&&Qp.warn("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&pa.isString(n[0])){const a=n.map((e=>pa.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return Qp.mergeRealAndImagArrays(e,t)}return this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>pa.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ei(e.shape,e.dtype,n)}makeOutput(e,t,n){const r=this.write(e,t,n);return ru().makeTensorFromDataId(r,t,n,this)}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=pa.now();return e(),{kernelMs:pa.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){JT([e],"where");const t=this.readSync(e.dataId);return QT(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}};eE.nextDataId=0;var tE={};function nE(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}p(tE,{addImpl:()=>gE,bincountImpl:()=>vE,bincountReduceImpl:()=>wE,ceilImpl:()=>NE,concatImpl:()=>CE,equalImpl:()=>_E,expImpl:()=>FE,expm1Impl:()=>ME,floorImpl:()=>zE,gatherNdImpl:()=>WE,gatherV2Impl:()=>VE,greaterEqualImpl:()=>jE,greaterImpl:()=>UE,lessEqualImpl:()=>JE,lessImpl:()=>XE,linSpaceImpl:()=>tC,logImpl:()=>nC,maxImpl:()=>sC,maximumImpl:()=>iC,minimumImpl:()=>lC,multiplyImpl:()=>dC,negImpl:()=>gC,notEqualImpl:()=>bC,prodImpl:()=>SC,rangeImpl:()=>TC,rsqrtImpl:()=>EC,sigmoidImpl:()=>$C,simpleAbsImpl:()=>nE,sliceImpl:()=>RC,sparseFillEmptyRowsImpl:()=>OC,sparseReshapeImpl:()=>LC,sparseSegmentReductionImpl:()=>zC,sqrtImpl:()=>PC,squaredDifferenceImpl:()=>VC,stridedSliceImpl:()=>HC,stringNGramsImpl:()=>jC,stringSplitImpl:()=>KC,stringToHashBucketFastImpl:()=>XC,subImpl:()=>YC,tileImpl:()=>e_,topKImpl:()=>r_,transposeImpl:()=>wC,uniqueImpl:()=>a_});var rE={kernelName:Ke,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;JT(t,"abs");let r=new Float32Array(pa.sizeFromShape(t.shape));return r=nE(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}};function aE(e){return(t,n,r,a,s)=>{const i=Qp.assertAndGetBroadcastShape(t,n),o=i.length,u=pa.computeStrides(i),l=pa.sizeFromShape(i),c=pa.getTypedArrayFromDType(s,l),h=t.length,d=n.length,p=pa.computeStrides(t),f=pa.computeStrides(n),m=Qp.getBroadcastDims(t,i),g=Qp.getBroadcastDims(n,i);if(m.length+g.length===0)for(let t=0;t<c.length;++t)c[t]=e(r[t%r.length],a[t%a.length]);else for(let t=0;t<c.length;++t){const n=pa.indexToLoc(t,o,u),s=n.slice(-h);m.forEach((e=>s[e]=0));const i=pa.locToIndex(s,h,p),l=n.slice(-d);g.forEach((e=>l[e]=0));const y=pa.locToIndex(l,d,f);c[t]=e(r[i],a[y])}return[c,i]}}function sE(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}var iE={kernelName:vt,backendName:"cpu",kernelFunc:sE};function oE(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"float32";if("complex64"===n)return sE({inputs:{real:oE(e,t,"float32"),imag:oE(e,t,"float32")},backend:e});const r=pa.makeZerosTypedArray(pa.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function uE(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var lE={kernelName:un,backendName:"cpu",kernelFunc:uE};function cE(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var hE={kernelName:er,backendName:"cpu",kernelFunc:cE};function dE(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if("complex64"===s){if("complex64"===a.dtype)return uE({inputs:{x:a},backend:n});const e=oE(n,a.shape,a.dtype),t=dE({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=sE({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){const e=cE({inputs:{input:a},backend:n}),t=dE({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!pa.hasEncodingLoss(a.dtype,s)){const e=uE({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}if("int32"===s){const e=n.data.get(a.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(a.shape,"int32",t)}if("bool"===s){const e=n.data.get(a.dataId).values,t=pa.toTypedArray([0],a.dtype),[r,s]=aE(((e,t)=>e!==t?1:0))(a.shape,[],e,t,"bool");return n.makeTensorInfo(s,"bool",r)}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${s}`)}var pE={kernelName:yt,backendName:"cpu",kernelFunc:dE};function fE(e,t,n,r){return null==n?n=>{let{inputs:a,backend:s}=n;const{a:i,b:o}=a,u=s;JT([i,o],e);const l=u.data.get(i.dataId).values,c=u.data.get(o.dataId).values,h="string"===i.dtype?Qp.fromUint8ToStringArray(l):l,d="string"===i.dtype?Qp.fromUint8ToStringArray(c):c,p=r||i.dtype,[f,m]=t(i.shape,o.shape,h,d,p);return u.makeTensorInfo(m,p,f)}:e=>{let{inputs:a,backend:s}=e;const{a:i,b:o}=a,u=s;if("complex64"===i.dtype||"complex64"===o.dtype){const e=dE({inputs:{x:i},backend:u,attrs:{dtype:"complex64"}}),t=u.data.get(e.dataId),r=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,s=u.data.get(r.dataId).values,l=u.data.get(a.dataId).values,c=dE({inputs:{x:o},backend:u,attrs:{dtype:"complex64"}}),h=u.data.get(c.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=u.data.get(d.dataId).values,m=u.data.get(p.dataId).values,[g,y,b]=n(i.shape,o.shape,s,l,f,m),x=u.makeTensorInfo(b,"float32",g),v=u.makeTensorInfo(b,"float32",y),w=sE({inputs:{real:x,imag:v},backend:u});return u.disposeIntermediateTensorInfo(e),u.disposeIntermediateTensorInfo(c),u.disposeIntermediateTensorInfo(x),u.disposeIntermediateTensorInfo(v),w}{const e=u.data.get(i.dataId).values,n=u.data.get(o.dataId).values,a=r||i.dtype,[s,l]=t(i.shape,o.shape,e,n,a);return u.makeTensorInfo(l,a,s)}}}function mE(e){return(t,n,r,a,s,i)=>{const o=Qp.assertAndGetBroadcastShape(t,n),u=pa.sizeFromShape(o),l=o.length,c=pa.computeStrides(o),h=pa.getTypedArrayFromDType("float32",u),d=pa.getTypedArrayFromDType("float32",u),p=Qp.getBroadcastDims(t,o),f=Qp.getBroadcastDims(n,o),m=Qp.mergeRealAndImagArrays(r,a),g=Qp.mergeRealAndImagArrays(s,i),y=t.length,b=pa.computeStrides(t),x=n.length,v=pa.computeStrides(n);if(p.length+f.length===0)for(let t=0;t<h.length;t++){const n=t%m.length,r=t%g.length,a=e(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);h[t]=a.real,d[t]=a.imag}else for(let t=0;t<h.length;t++){const n=pa.indexToLoc(t,l,c),r=n.slice(-y);p.forEach((e=>r[e]=0));const a=pa.locToIndex(r,y,b),s=n.slice(-x);f.forEach((e=>s[e]=0));const i=pa.locToIndex(s,x,v),o=e(m[2*a],m[2*a+1],g[2*i],g[2*i+1]);h[t]=o.real,d[t]=o.imag}return[h,d,o]}}var gE=aE(((e,t)=>e+t)),yE=mE(((e,t,n,r)=>({real:e+n,imag:t+r}))),bE=fE(Ze,gE,yE),xE={kernelName:Ze,backendName:"cpu",kernelFunc:bE};function vE(e,t,n,r,a){const s=pa.sizeFromShape(r),i=pa.makeZerosTypedArray(a,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=a||(i[r]+=s>0?t[n]:1)}return i}function wE(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=e.shape[0],s=e.shape[1],i=Ei([a,n],t.dtype);for(let o=0;o<a;o++)for(let a=0;a<s;a++){const s=e.get(o,a);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(r?i.set(1,o,s):t.size>0?i.set(i.get(o,s)+t.get(o,a),o,s):i.set(i.get(o,s)+1,o,s))}return i}function kE(e){return(t,n,r)=>{const a=pa.getTypedArrayFromDType(n,t.length);for(let n=0;n<t.length;++n)a[n]=e(t[n],r);return a}}function IE(e,t,n){return r=>{let{inputs:a,attrs:s,backend:i}=r;const{x:o}=a;if(JT(o,e),"string"===o.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const u=i,l=u.data.get(o.dataId).values,c=pa.sizeFromShape(o.shape),h=n||o.dtype,d=pa.getArrayFromDType(h,c);for(let e=0;e<c;++e)d[e]=t(l[e],s);return u.makeTensorInfo(o.shape,h,d)}}function SE(e,t,n){return r=>{let{inputs:a,attrs:s,backend:i}=r;const{x:o}=a;if(JT(o,e),"string"===o.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const u=i,l=u.data.get(o.dataId).values,c=n||o.dtype,h=t(l,c,s);return u.makeTensorInfo(o.shape,c,h)}}var NE=kE((e=>Math.ceil(e))),TE=SE(bt,NE),EE={kernelName:bt,backendName:"cpu",kernelFunc:TE};function CE(e,t,n,r){const a=pa.getArrayFromDType(n,pa.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=pa.sizeFromShape(e.shape);a.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const s="string"===n?Qp.fromUint8ToStringArray(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[o+t]=s[i++]}r+=e.shape[1]}))}return a}var _E=aE(((e,t)=>e===t?1:0)),$E=fE(qt,_E,null,"bool"),AE={kernelName:qt,backendName:"cpu",kernelFunc:$E},FE=kE((e=>Math.exp(e))),RE=SE(Kt,FE,"float32"),DE={kernelName:Kt,backendName:"cpu",kernelFunc:RE},ME=kE((e=>Math.expm1(e))),OE=SE(Yt,ME),LE={kernelName:Yt,backendName:"cpu",kernelFunc:OE},zE=kE((e=>Math.floor(e))),PE=SE(en,zE),BE={kernelName:en,backendName:"cpu",kernelFunc:PE};function WE(e,t,n,r,a,s,i,o,u){const l=Ei([r,s],n);for(let n=0;n<r;n++){const r=[];let c=0;for(let t=0;t<a;t++){const s=e[n*a+t];c+=s*i[t],r.push(s)}if(c<0||c>=u/s)throw new Error(`Invalid indices: ${r} does not index into ${o}`);for(let e=0;e<s;e++)l.values[n*s+e]=t.get(...t.indexToLoc(c*s+e))}return l}function VE(e,t,n){const r=Ei(n,e.dtype);for(let n=0;n<r.size;++n){const a=r.indexToLoc(n).slice(),s=a[0],i=a[2],o=t.locToIndex([s,i]);a[2]=t.values[o];const u=e.locToIndex(a);0<=u&&u<e.values.length&&(r.values[n]=e.values[u])}return r}var UE=aE(((e,t)=>e>t?1:0)),GE=fE(sn,UE,null,"bool"),HE={kernelName:sn,backendName:"cpu",kernelFunc:GE},jE=aE(((e,t)=>e>=t?1:0)),qE=fE(on,jE,null,"bool"),KE={kernelName:on,backendName:"cpu",kernelFunc:qE},XE=aE(((e,t)=>e<t?1:0)),YE=fE(mn,XE,null,"bool"),ZE={kernelName:mn,backendName:"cpu",kernelFunc:YE},JE=aE(((e,t)=>e<=t?1:0)),QE=fE(gn,JE,null,"bool"),eC={kernelName:gn,backendName:"cpu",kernelFunc:QE};function tC(e,t,n){const r=(t-e)/(n-1),a=pa.makeZerosTypedArray(n,"float32");a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+r;return a}var nC=kE((e=>Math.log(e))),rC=SE(bn,nC),aC={kernelName:bn,backendName:"cpu",kernelFunc:rC};function sC(e,t,n,r){const a=pa.getTypedArrayFromDType(r,pa.sizeFromShape(n));for(let n=0;n<a.length;++n){const r=n*t;let s=e[r];for(let n=0;n<t;++n){const t=e[r+n];(Number.isNaN(t)||t>s)&&(s=t)}a[n]=s}return a}var iC=aE(((e,t)=>Math.max(e,t))),oC=fE(En,iC),uC={kernelName:En,backendName:"cpu",kernelFunc:oC},lC=aE(((e,t)=>Math.min(e,t))),cC=fE(Mn,lC),hC={kernelName:Mn,backendName:"cpu",kernelFunc:cC},dC=aE(((e,t)=>e*t)),pC=mE(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),fC=fE(Pn,dC,pC),mC={kernelName:Pn,backendName:"cpu",kernelFunc:fC};function gC(e,t,n){const r=pa.createScalarValue(-1,n);return dC([],t,r,e,n)}var yC={kernelName:Bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;JT(r,"neg");const a=n.data.get(r.dataId).values,[s,i]=gC(a,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,s)}},bC=aE(((e,t)=>e!==t?1:0)),xC=fE(Wn,bC,null,"bool"),vC={kernelName:Wn,backendName:"cpu",kernelFunc:xC};function wC(e,t,n,r,a){const s=t.length,i=pa.sizeFromShape(t),o=pa.computeStrides(t),u=pa.computeStrides(a),l=pa.getTypedArrayFromDType(n,pa.sizeFromShape(a));for(let t=0;t<i;++t){const n=pa.indexToLoc(t,s,o),a=new Array(n.length);for(let e=0;e<a.length;e++)a[e]=n[r[e]];l[pa.locToIndex(a,s,u)]=e[t]}return l}function kC(e){const{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:s}=n;JT(a,"transpose");const i=a.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=a.shape[s[e]];const u=wC(r.data.get(a.dataId).values,a.shape,a.dtype,s,o);return{dataId:r.write(u,o,a.dtype),shape:o,dtype:a.dtype}}var IC={kernelName:Ur,backendName:"cpu",kernelFunc:kC};function SC(e,t,n,r){const[a,s]=Qp.computeOutAndReduceShapes(e,r),i=os(t,"int32"),o=pa.makeZerosTypedArray(pa.sizeFromShape(a),i),u=pa.sizeFromShape(s);for(let e=0;e<o.length;++e){const t=e*u;let r=1;for(let e=0;e<u;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:a,outDtype:i}}var NC={kernelName:Jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;JT(a,"prod");const o=a.shape.length,u=pa.parseAxisParam(s,a.shape),l=Qp.getAxesPermutation(u,o);let c=u,h=a;const d=[];null!=l&&(h=kC({inputs:{x:a},backend:n,attrs:{perm:l}}),d.push(h),c=Qp.getInnerMostAxes(c.length,o));const p=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=SC(h.shape,h.dtype,p,c);let y=m;return i&&(y=Qp.expandShapeToKeepDim(m,u)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};function TC(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return pa.makeZerosTypedArray(0,r);const a=Math.abs(Math.ceil((t-e)/n)),s=pa.makeZerosTypedArray(a,r);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}var EC=kE((e=>1/Math.sqrt(e))),CC=SE(hr,EC),_C={kernelName:hr,backendName:"cpu",kernelFunc:CC},$C=kE((e=>1/(1+Math.exp(-e)))),AC=IE(xr,(e=>1/(1+Math.exp(-e)))),FC={kernelName:xr,backendName:"cpu",kernelFunc:AC};function RC(e,t,n,r,a){const s=yo.isSliceContinous(r,t,n),i=pa.sizeFromShape(n),o=pa.computeStrides(r);if(s){const n=yo.computeFlatOffset(t,o);return"string"===a?e.slice(n,n+i):e.subarray(n,n+i)}const u=Ei(r,a,"string"===a?Qp.fromUint8ToStringArray(e):e),l=Ei(n,a);for(let e=0;e<l.size;++e){const n=l.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));l.set(u.get(...r),...n)}return"string"===a?Qp.fromStringArrayToUint8(l.values):l.values}function DC(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r;JT(a,"slice");const[o,u]=yo.parseSliceParams(a,s,i);yo.assertParamsValid(a,o,u);const l=RC(n.data.get(a.dataId).values,o,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,l)}var MC={kernelName:mr,backendName:"cpu",kernelFunc:DC};function OC(e,t,n,r,a,s,i){const o=t[0],u=s[0],l=new Array(u),c=new Array(o),h=t[1];if(0===u){if(0!==o)throw new Error(Qp.getSparseFillEmptyRowsIndicesDenseShapeMismatch(o));return[pa.getArrayFromDType(n,0),[0,h],pa.getArrayFromDType(a,0),l,c]}let d=!0,p=0;const f=new Array(u).fill(0);for(let t=0;t<o;++t){const n=e[t*h];if(n<0)throw new Error(Qp.getSparseFillEmptyRowsNegativeIndexErrorMessage(t,n));if(n>=u)throw new Error(Qp.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(t,n,u));++f[n],d=d&&n>=p,p=n}let m=!0;for(let e=0;e<u;++e){const t=0===f[e];l[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&d){const t=e,n=r;for(let e=0;e<o;++e)c[e]=e;return[t,[o,h],n,l,c]}{const t=f[u-1],s=pa.getArrayFromDType(n,t*h),d=pa.getArrayFromDType(a,t),p=new Array(u).fill(0);for(let t=0;t<o;++t){const n=e[t*h],a=p[n],i=(0===n?0:f[n-1])+a;p[n]++;for(let n=0;n<h;++n)s[i*h+n]=e[t*h+n];d[i]=r[t],c[t]=i}for(let e=0;e<u;++e)if(0===p[e]){const t=0===e?0:f[e-1];s[t*h+0]=e;for(let e=1;e<h;++e)s[t*h+e]=0;d[t]=i}return[s,[t,h],d,l,c]}}function LC(e,t,n,r,a){const s=pa.sizeFromShape(r),i=t[0],o=a.length,u=[];let l=1,c=-1;for(let e=0;e<o;++e){const t=a[e];if(-1===t){if(-1!==c)throw new Error(Qp.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(c,e));c=e,u.push(1)}else{if(t<0)throw new Error(Qp.getSparseReshapeNegativeOutputDimErrorMessage(e,t));l*=t,u.push(t)}}if(-1!==c){if(l<=0)throw new Error(Qp.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const e=Math.trunc(s/l);if(l*e!==s)throw new Error(Qp.getSparseReshapeInputOutputMultipleErrorMessage(r,u));u[c]=e}if(pa.sizeFromShape(u)!==s)throw new Error(Qp.getSparseReshapeInputOutputMismatchErrorMessage(r,u));const h=r.length,d=[];if(h>0){d[h-1]=1;for(let e=h-2;e>=0;--e)d[e]=d[e+1]*r[e+1]}const p=[];if(o>0){p[o-1]=1;for(let e=o-2;e>=0;--e)p[e]=p[e+1]*u[e+1]}const f=pa.getArrayFromDType(n,i*o);for(let t=0;t<i;++t){let n=0;for(let r=0;r<h;++r)n+=e[t*h+r]*d[r];for(let e=0;e<o;++e)f[t*o+e]=Math.trunc(n/p[e]),n%=p[e]}return[f,[i,o],u]}function zC(e,t,n,r,a){let s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const o=r.length,u=[t[0],e.length/t[0]],l=u[1],c=o>0?a[o-1]+1:0,h=c;if(h<0)throw new Error(Qp.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const d=t.slice();d[0]=h;const p=d.reduce(((e,t)=>e*t),1),f=pa.getArrayFromDType(n,p);if(0===o)return h>0&&f.fill(i),[f,d];if(h<=0)throw new Error(Qp.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=0,g=1,y=0,b=a[m];for(;;){let t=0;if(g<o){if(t=a[g],b===t){++g;continue}if(b>=t)throw new Error(Qp.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(b<0||b>=h)throw new Error(Qp.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(b,h));b>y&&f.fill(i,y*l,b*l);for(let t=m;t<g;++t){const n=r[t];if(n<0||n>=u[0])throw new Error(Qp.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(t,r[t],u[0]));for(let t=0;t<l;t++)f[b*l+t]+=e[n*l+t]}if(s)for(let e=0;e<l;e++)f[b*l+e]/=g-m;if(m=g,++g,y=b+1,b=t,g>o)break}return y<h&&f.fill(i,y*l,h*l),[f,d]}var PC=kE((e=>Math.sqrt(e))),BC=IE(wr,(e=>Math.sqrt(e))),WC={kernelName:wr,backendName:"cpu",kernelFunc:BC},VC=aE(((e,t)=>{const n=e-t;return n*n})),UC=fE(Ar,VC),GC={kernelName:Ar,backendName:"cpu",kernelFunc:UC};function HC(e,t,n,r){const a=Ei(e,t.dtype);for(let e=0;e<a.size;e++){const s=a.indexToLoc(e),i=new Array(s.length);for(let e=0;e<i.length;e++)i[e]=s[e]*n[e]+r[e];a.set(t.get(...i),...s)}return a}function jC(e,t,n,r,a,s,i,o){return new class{constructor(e,t,n,r,a,s){this.separator=pa.encodeString(e),this.nGramWidths=t,this.leftPad=pa.encodeString(n),this.rightPad=pa.encodeString(r),this.padWidth=a,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,s){for(let i=0;i<a;++i){const o=this.getPadWidth(s),u=Math.max(0,o-i),l=Math.max(0,o-(a-(i+1))),c=s-(u+l),h=t+(u>0?0:i-o);let d=0;d+=u*this.leftPad.length;for(let t=0;t<c;++t)d+=e[h+t].length;d+=l*this.rightPad.length,d+=(u+l+c-1)*this.separator.length,n[r+i]=new Uint8Array(d);const p=n[r+i];let f=0;const m=e=>e.forEach((e=>p[f++]=e));for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[h+t]),m(this.separator);if(c>0){m(e[h+c-1]);for(let e=0;e<l;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<l-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let a=1;a<r;++a){let r=t[a]>=e;if(r=r&&t[a]<=n,!r)throw new Error(`Invalid split value ${t[a]}, must be in [${e}, ${n}]`);e=t[a]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const a=r-1,s=pa.getArrayFromDType("int32",r);if(0===n||0===r){const e=new Array(n);for(let e=0;e<=a;++e)s[e]=0;return[e,s]}s[0]=0;for(let e=1;e<=a;++e){const n=t[e]-t[e-1];let r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),s[e]=s[e-1]+r}const i=new Array(s[a]);for(let n=0;n<a;++n){const r=t[n];let a=s[n];if(this.nGramWidths.forEach((s=>{const o=t[n+1]-t[n],u=this.getNumNGrams(o,s);this.createNGrams(e,r,i,a,u,s),a+=u})),this.preserveShort&&a===s[n]){const s=t[n+1]-t[n];if(0===s)continue;const o=s+2*this.padWidth,u=1;this.createNGrams(e,r,i,a,u,o)}}return[i,s]}}(n,r,a,s,i,o).compute(e,t)}function qC(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const a=t[0];let s=e.indexOf(a);for(;-1!==s;){const t=e.subarray(0,s);n&&0===t.length||r.push(t),s=(e=e.subarray(s+1)).indexOf(a)}return void(n&&0===e.length||r.push(e))}let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){const t=e.subarray(a,s);n&&0===t.length||r.push(t),a=s+1}}function KC(e,t,n){const r=e.length,a=[];let s=0,i=0;const o=new Array(r);for(let u=0;u<r;++u){const r=a.length;qC(e[u],t,n,a);const l=a.length-r;o[u]=l,s+=l,i=Math.max(i,l)}const u=pa.getArrayFromDType("int32",2*s),l=new Array(s),c=[r,i];let h=0;for(let e=0;e<r;++e)for(let t=0;t<o[e];++t)u[2*h]=e,u[2*h+1]=t,l[h]=a[h],++h;return[u,l,c]}function XC(e,t){const n=pa.getArrayFromDType("int32",e.length);for(let r=0;r<e.length;++r)n[r]=pa.fingerPrint64(e[r]).modulo(t).getLowBitsUnsigned();return n}var YC=aE(((e,t)=>e-t)),ZC=mE(((e,t,n,r)=>({real:e-n,imag:t-r}))),JC=fE(Lr,YC,ZC),QC={kernelName:Lr,backendName:"cpu",kernelFunc:JC};function e_(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=Ei(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),a=new Array(e.rank);for(let t=0;t<a.length;t++)a[t]=n[t]%e.shape[t];const s=e.locToIndex(a);r.values[t]=e.values[s]}return r}var t_=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function n_(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:e.length-1;for(;r>n;){if(r-n>600){const a=r-n+1,s=t-n+1,i=Math.log(a),o=.5*Math.exp(2*i/3),u=.5*Math.sqrt(i*o*(a-o)/a)*Math.sign(s-a/2);n_(e,t,Math.max(n,Math.floor(t-s*o/a+u)),Math.min(r,Math.floor(t+(a-s)*o/a+u)))}const a=e[t];let s=n,i=r;for(pa.swap(e,n,t),t_(e[r],a)>0&&pa.swap(e,n,r);s<i;){for(pa.swap(e,s,i),s++,i--;t_(e[s],a)<0;)s+=1;for(;t_(e[i],a)>0;)i-=1}0===t_(e[n],a)?pa.swap(e,n,i):(i+=1,pa.swap(e,i,r)),i<=t&&(n=i+1),t<=i&&(r=i-1)}}function r_(e,t,n,r,a){const s=t[t.length-1],[i,o]=[e.length/s,s],u=pa.getTypedArrayFromDType(n,i*r),l=pa.getTypedArrayFromDType("int32",i*r);for(let t=0;t<i;t++){const n=t*o,s=e.subarray(n,n+o);let i=new Array(s.length);s.forEach(((e,t)=>i[t]={value:e,index:t})),r<i.length&&(n_(i,r),i=i.slice(0,r)),a&&i.sort(t_);const c=t*r,h=u.subarray(c,c+r),d=l.subarray(c,c+r);for(let e=0;e<r;e++)h[e]=i[e].value,d[e]=i[e].index}const c=t.slice();return c[c.length-1]=r,[Ei(c,n,u),Ei(c,"int32",l)]}function a_(e,t,n,r){const a=pa.parseAxisParam(t,n)[0],s=[1,n[0],1];for(let e=0;e<a;e++)s[0]*=n[e];s[1]=n[a];for(let e=a+1;e<n.length;e++)s[2]*=n[e];const i={},o=new Int32Array(n[a]),u=new Ua(s,r,e),l=[],c=1===s[0]&&1===s[2];for(let t=0;t<n[a];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)e.push(u.get(n,t,r));n=e.join(",")}if(void 0!==i[n])o[t]=i[n];else{const e=Object.keys(i).length;i[n]=e,o[t]=e,l.push(t)}}const h=s.slice();h[1]=Object.keys(i).length;const d=new Ua(h,r);l.forEach(((e,t)=>{for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)d.set(u.get(n,e,r),n,t,r)}));const p=n.slice();return p[a]=h[1],{outputValues:d.values,outputShape:p,indices:o}}gu("cpu",(()=>new eE),1);var s_=IE(Gt,(e=>e>=0?e:Math.exp(e)-1)),i_={kernelName:Gt,backendName:"cpu",kernelFunc:s_};function o_(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r;JT([a],"leakyRelu");const i=pa.sizeFromShape(a.shape),o=n.data.get(a.dataId).values,u=pa.getTypedArrayFromDType("float32",i);for(let e=0;e<o.length;e++)u[e]=o[e]<0?s*o[e]:o[e];return n.makeTensorInfo(a.shape,"float32",u)}var u_={kernelName:fn,backendName:"cpu",kernelFunc:o_},l_=aE(((e,t)=>e<0?t*e:e));function c_(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t;JT([r,a],"prelu");const s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,u]=l_(r.shape,a.shape,s,i,"float32");return n.makeTensorInfo(u,"float32",o)}var h_={kernelName:Zn,backendName:"cpu",kernelFunc:c_},d_=IE(nr,(e=>Math.max(0,e))),p_={kernelName:nr,backendName:"cpu",kernelFunc:d_},f_=IE(ur,(e=>Math.min(Math.max(0,e),6))),m_={kernelName:ur,backendName:"cpu",kernelFunc:f_};function g_(e,t,n,r,a){if("linear"===n)return uE({inputs:{x:t},backend:e});if("relu"===n)return d_({inputs:{x:t},backend:e});if("elu"===n)return s_({inputs:{x:t},backend:e});if("relu6"===n)return f_({inputs:{x:t},backend:e});if("prelu"===n)return c_({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return o_({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===n)return AC({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function y_(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=pa.sizeFromShape(a.shape),o=pa.inferFromImplicitShape(s,i),u=pa.sizeFromShape(o);pa.assert(i===u,(()=>`The new shape (${o}) has ${u} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(a.dataId);const l=n.data.get(a.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.real,t=l.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}var b_={kernelName:rr,backendName:"cpu",kernelFunc:y_};function x_(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;JT([a,s],"matMul");const u=a.shape.length,l=s.shape.length,c=i?a.shape[u-2]:a.shape[u-1],h=o?s.shape[l-1]:s.shape[l-2],d=i?a.shape[u-1]:a.shape[u-2],p=o?s.shape[l-2]:s.shape[l-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=pa.sizeFromShape(f),y=pa.sizeFromShape(m),b=Ji.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([d,p]);pa.assert(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));const x=o?[y,p,h]:[y,h,p],v=y_({inputs:{x:a},backend:n,attrs:{shape:i?[g,c,d]:[g,d,c]}}),w=y_({inputs:{x:s},backend:n,attrs:{shape:x}}),k=i?v.shape[1]:v.shape[2],I=i?v.shape[2]:v.shape[1],S=o?w.shape[1]:w.shape[2],N=Math.max(g,y),T=n.data.get(v.dataId).values,E=n.data.get(w.dataId).values,C=pa.computeStrides(v.shape),_=pa.computeStrides(w.shape),[$,A,F]=i?[C[0],1,C[1]]:[C[0],C[1],1],[R,D,M]=o?[1,_[1],_[0]]:[_[1],1,_[0]],O=I*S,L=Ei([N,I,S],v.dtype),z=L.values,P=n.blockSize;for(let e=0;e<N;e++)for(let t=0;t<I;t+=P)for(let n=0;n<S;n+=P)for(let r=0;r<k;r+=P){const a=Math.min(t+P,I),s=Math.min(n+P,S),i=Math.min(r+P,k);for(let o=t;o<a;o++)for(let t=n;t<s;t++){let n=0;for(let a=r;a<i;a++){const r=Math.min(e,g-1)*$,s=Math.min(e,y-1)*M;n+=T[r+o*A+a*F]*E[a*R+t*D+s]}z[e*O+(o*S+t)]+=n}}return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(b,L.dtype,L.values)}var v_={kernelName:dt,backendName:"cpu",kernelFunc:x_},w_={kernelName:Zr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;let d,p,f;const m=[];d=x_({inputs:{a,b:s},attrs:{transposeA:u,transposeB:l},backend:n}),i&&(p=bE({inputs:{a:d,b:i},backend:n}),m.push(d),d=p),c&&(f=g_(n,d,c,o,h),m.push(d),d=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return d}},k_=IE(Xe,(e=>Math.acos(e))),I_={kernelName:Xe,backendName:"cpu",kernelFunc:k_},S_=IE(Ye,(e=>Math.acosh(e))),N_={kernelName:Ye,backendName:"cpu",kernelFunc:S_},T_={kernelName:Je,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;JT(t,"addN");const a=r.map((e=>n.data.get(e.dataId).values)),s=Ei(r[0].shape,r[0].dtype),i=s.values;for(let e=0;e<r.length;e++){const t=a[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}},E_={kernelName:Qe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;JT(a,"all");const o=pa.parseAxisParam(s,a.shape);let u=o;const l=Qp.getAxesPermutation(u,a.shape.length);let c=a;null!=l&&(c=kC({inputs:{x:a},backend:n,attrs:{perm:l}}),u=Qp.getInnerMostAxes(u.length,a.shape.length)),Qp.assertAxesAreInnerMostDims("all",u,c.shape.length);const[h,d]=Qp.computeOutAndReduceShapes(c.shape,u),p=pa.sizeFromShape(d),f=pa.makeZerosTypedArray(pa.sizeFromShape(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];n=n&&r}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=y_({inputs:{x:g},backend:n,attrs:{shape:Qp.expandShapeToKeepDim(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},C_={kernelName:et,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;JT(a,"any");const o=pa.parseAxisParam(s,a.shape);let u=o;const l=Qp.getAxesPermutation(u,a.shape.length);let c=a;null!=l&&(c=kC({inputs:{x:a},backend:n,attrs:{perm:l}}),u=Qp.getInnerMostAxes(u.length,a.shape.length)),Qp.assertAxesAreInnerMostDims("any",u,c.shape.length);const[h,d]=Qp.computeOutAndReduceShapes(c.shape,u),p=pa.sizeFromShape(d),f=pa.makeZerosTypedArray(pa.sizeFromShape(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];n=n||r}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=y_({inputs:{x:g},backend:n,attrs:{shape:Qp.expandShapeToKeepDim(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},__={kernelName:tt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;JT(a,"argMax");let i=pa.parseAxisParam(s,a.shape);const o=Qp.getAxesPermutation(i,a.shape.length);let u=a;const l=[];null!=o&&(u=kC({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),i=Qp.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],Qp.assertAxesAreInnerMostDims("argMax",i,u.shape.length);const[c,h]=Qp.computeOutAndReduceShapes(u.shape,i),d=pa.sizeFromShape(c),p=pa.makeZerosTypedArray(d,"int32"),f=pa.sizeFromShape(h),m=n.data.get(u.dataId).values;for(let e=0;e<p.length;++e){const t=e*f;let n=m[t],r=0;for(let e=0;e<f;++e){const a=m[t+e];a>n&&(n=a,r=e)}p[e]=r}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",p)}},$_={kernelName:nt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;JT(a,"argMin");let i=pa.parseAxisParam(s,a.shape);const o=Qp.getAxesPermutation(i,a.shape.length);let u=a;const l=[];null!=o&&(u=kC({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),i=Qp.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],Qp.assertAxesAreInnerMostDims("argMin",i,u.shape.length);const[c,h]=Qp.computeOutAndReduceShapes(u.shape,i),d=pa.sizeFromShape(c),p=pa.makeZerosTypedArray(d,"int32"),f=pa.sizeFromShape(h),m=n.data.get(u.dataId).values;for(let e=0;e<p.length;++e){const t=e*f;let n=m[t],r=0;for(let e=0;e<f;++e){const a=m[t+e];a<n&&(n=a,r=e)}p[e]=r}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",p)}},A_=IE(rt,(e=>Math.asin(e))),F_={kernelName:rt,backendName:"cpu",kernelFunc:A_},R_=IE(at,(e=>Math.asinh(e))),D_={kernelName:at,backendName:"cpu",kernelFunc:R_},M_=IE(st,(e=>Math.atan(e))),O_={kernelName:st,backendName:"cpu",kernelFunc:M_},L_=aE(((e,t)=>Math.atan2(e,t))),z_=fE(ot,L_),P_={kernelName:ot,backendName:"cpu",kernelFunc:z_},B_=IE(it,(e=>Math.atanh(e))),W_={kernelName:it,backendName:"cpu",kernelFunc:B_};function V_(e,t,n,r,a,s){const i=a.strideHeight,o=a.strideWidth,u=a.dilationHeight,l=a.dilationWidth,c=a.effectiveFilterHeight,h=a.effectiveFilterWidth,d=a.padInfo.top,p=a.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Ei(a.outShape,n),g=m.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],b=a.outShape[2]*a.outShape[3],x=a.outShape[3];for(let t=0;t<a.batchSize;++t){const n=t*y,m=t*r[0];for(let t=0;t<a.inChannels;++t)for(let y=0;y<a.outHeight;++y){const v=y*i-d,w=Math.max(0,v),k=Math.min(a.inHeight,c+v),I=n+y*b;for(let n=0;n<a.outWidth;++n){const i=n*o-p,c=Math.max(0,i),d=Math.min(a.inWidth,h+i);let y=f,b=0,v=0;for(let n=w;n<k;n+=u){const a=m+n*r[1];for(let n=c;n<d;n+=l){const i=e[a+n*r[2]+t];"max"===s&&i>y?y=i:"avg"===s&&(b+=i,v++)}if(isNaN(y))break}g[I+n*x+t]="avg"===s?b/v:y}}}return m}function U_(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const i=Ei(r.outShape,"int32"),o=r.strideHeight,u=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,m=Ei(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){const g=n*o-p;let y=g;for(;y<0;)y+=l;const b=Math.min(r.inHeight,h+g);for(let o=0;o<r.outWidth;++o){const h=o*u-f;let p=h;for(;p<0;)p+=c;const x=Math.min(r.inWidth,d+h);let v=Number.NEGATIVE_INFINITY,w=-1;for(let n=y;n<b;n+=l){const i=n-g;for(let o=p;o<x;o+=c){const u=o-h,l=m.get(e,n,o,t);l>v&&(v=l,w=a?s?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:i*d+u)}}i.set(w,e,n,o,t)}}return i}function G_(e,t,n,r,a,s){const i=a.strideDepth,o=a.strideHeight,u=a.strideWidth,l=a.dilationDepth,c=a.dilationHeight,h=a.dilationWidth,d=a.effectiveFilterDepth,p=a.effectiveFilterHeight,f=a.effectiveFilterWidth,m=a.padInfo.front,g=a.padInfo.top,y=a.padInfo.left,b="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Ei(a.outShape,n),v=x.values,w=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],k=a.outShape[2]*a.outShape[3]*a.outShape[4],I=a.outShape[3]*a.outShape[4],S=a.outShape[4];for(let t=0;t<a.batchSize;++t){const n=t*w,x=t*r[0];for(let t=0;t<a.inChannels;++t)for(let w=0;w<a.outDepth;++w){const N=w*i-m;let T=N;for(;T<0;)T+=l;const E=Math.min(a.inDepth,d+N),C=n+w*k;for(let n=0;n<a.outHeight;++n){const i=n*o-g;let d=i;for(;d<0;)d+=c;const m=Math.min(a.inHeight,p+i),w=C+n*I;for(let n=0;n<a.outWidth;++n){const i=n*u-y;let o=i;for(;o<0;)o+=h;const p=Math.min(a.inWidth,f+i),g=w+n*S;let k=b,I=0,N=0;for(let n=T;n<E;n+=l){const a=x+n*r[1];for(let n=d;n<m;n+=c){const i=a+n*r[2];for(let n=o;n<p;n+=h){const a=e[i+n*r[3]+t];if("max"===s&&a>k?k=a:"avg"===s&&(I+=a,N++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}v[g+t]="avg"===s?I/N:k}}}}return x}var H_={kernelName:ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;JT(a,"avgPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;pa.assert(Qp.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=Qp.computePool2DInfo(a.shape,s,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&pa.arraysEqual(l.inShape,l.outShape))c=uE({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=pa.computeStrides(a.shape),r=V_(e,a.shape,a.dtype,t,l,"avg");c=n.makeTensorInfo(l.outShape,a.dtype,r.values)}return c}},j_={kernelName:ct,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r;JT(a,"avgPool3d");const c=Qp.computePool3DInfo(a.shape,s,i,1,o,u,l),h=G_(n.data.get(a.dataId).values,a.shape,a.dtype,pa.computeStrides(a.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}},q_={kernelName:ht,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=r;JT([a,s],"avgPool3DGrad");const c=Qp.computePool3DInfo(s.shape,i,o,1,u,l),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,b=c.dilationHeight,x=c.dilationWidth,v=c.effectiveFilterDepth,w=c.effectiveFilterHeight,k=c.effectiveFilterWidth,I=v-1-c.padInfo.front,S=k-1-c.padInfo.left,N=w-1-c.padInfo.top,T=Ei(s.shape,"float32"),E=1/(f*m*g),C=n.bufferSync(a);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let a=0;a<c.inWidth;++a){const s=n-I,i=r-N,o=a-S;let u=0;for(let n=0;n<v;n+=y){const r=(s+n)/h;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let n=0;n<w;n+=b){const a=(i+n)/d;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let n=0;n<k;n+=x){const s=(o+n)/p;s<0||s>=c.outWidth||Math.floor(s)!==s||(u+=C.get(e,r,a,s,t))}}}T.set(u*E,e,n,r,a,t)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}},K_={kernelName:lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;JT([a,s],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,c=Qp.computePool2DInfo(i.shape,o,u,1,l),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,x=b-1-c.padInfo.left,v=y-1-c.padInfo.top,w=Ei(i.shape,"float32"),k=1/(p*f),I=n.data.get(a.dataId).values,S=Ei(a.shape,"float32",I);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const a=n-v,s=r-x;let i=0;for(let n=0;n<y;n+=m){const r=(a+n)/h;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<b;n+=g){const a=(s+n)/d;a<0||a>=c.outWidth||Math.floor(a)!==a||(i+=S.get(e,r,a,t))}}w.set(i*k,e,n,r,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},X_={kernelName:nn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,scale:s,offset:i,mean:o,variance:u}=t;pa.assert(o.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),pa.assert(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),pa.assert(null==s||o.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),JT([a,o,u,s,i],"batchNorm");let{varianceEpsilon:l}=r;null==l&&(l=.001);const c=n.data.get(a.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(u.dataId).values,p=s?n.data.get(s.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=p.length,b=d.length,x=h.length;let v=0,w=0,k=0,I=0;for(let e=0;e<c.length;++e)m[e]=f[v++]+(c[e]-h[w++])*p[k++]/Math.sqrt(d[I++]+l),v>=g&&(v=0),w>=x&&(w=0),k>=y&&(k=0),I>=b&&(I=0);return n.makeTensorInfo(a.shape,a.dtype,m)}},Y_={kernelName:pt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;JT([a],"batchToSpaceND");const o=s.reduce(((e,t)=>e*t)),u=Qp.getReshaped(a.shape,s,o),l=Qp.getPermuted(u.length,s.length),c=Qp.getReshapedPermuted(a.shape,s,o),h=Qp.getSliceBeginCoords(i,s.length),d=Qp.getSliceSize(c,i,s.length),p=y_({inputs:{x:a},backend:n,attrs:{shape:u}}),f=kC({inputs:{x:p},backend:n,attrs:{perm:l}}),m=y_({inputs:{x:f},backend:n,attrs:{shape:c}}),g=DC({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}},Z_={kernelName:ft,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=vE(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,o)}},J_={kernelName:gt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=Qp.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},Q_=IE(xt,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),e$={kernelName:xt,backendName:"cpu",kernelFunc:Q_},t$={kernelName:wt,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(pa.sizeFromShape(t.shape)),a=n.data.get(t.dataId),s=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,o=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=u[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};function n$(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var r$={kernelName:cn,backendName:"cpu",kernelFunc:n$};function a$(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=pa.parseAxisParam(a,t[0].shape)[0];let i=Qp.computeOutShape(t.map((e=>e.shape)),s);if(0===pa.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>pa.sizeFromShape(e.shape)>0));if(1===o.length)return uE({inputs:{x:o[0]},backend:n});const u=o.map((e=>e.shape));if(Qp.assertParamsConsistent(u,s),"complex64"===o[0].dtype){const e=o.map((e=>cE({inputs:{input:e},backend:n}))),t=o.map((e=>n$({inputs:{input:e},backend:n}))),r=a$({inputs:e,backend:n,attrs:{axis:s}}),a=a$({inputs:t,backend:n,attrs:{axis:s}}),i=sE({inputs:{real:r,imag:a},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}const l=o.map((e=>{const t=pa.sizeFromShape(e.shape.slice(s));return y_({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),c=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=Qp.computeOutShape(l.map((e=>e.shape)),1);const h=1===l[0].shape[0],d=CE(c,i,t[0].dtype,h),p=Qp.computeOutShape(o.map((e=>e.shape)),s),f=n.makeTensorInfo(p,t[0].dtype,d);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}var s$={kernelName:kt,backendName:"cpu",kernelFunc:a$};function i$(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r;JT([a,s],"conv2d");const h=Qp.convertConv2DDataFormat(u),d=Qp.computeConv2DInfo(a.shape,s.shape,i,l,o,c,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,b=d.padInfo.top,x="channelsLast"===d.dataFormat,v=new Ua(d.outShape,a.dtype),w=pa.computeStrides(a.shape),k=pa.computeStrides(s.shape),I=w[0],S=x?w[1]:w[2],N=x?w[2]:1,T=x?1:w[1],E=v.strides[0],C=x?v.strides[1]:v.strides[2],_=x?v.strides[2]:1,$=x?1:v.strides[1],A=n.data.get(a.dataId).values,F=n.data.get(s.dataId).values,R=v.values;for(let e=0;e<d.batchSize;++e){const t=e*I,n=e*E;for(let e=0;e<d.outHeight;++e){const r=n+e*C,a=e*d.strideHeight-b;for(let e=0;e<p;++e){const n=a+e*m;if(n<0||n>=d.inHeight)continue;const s=e*k[0],i=t+n*S;for(let e=0;e<d.outWidth;++e){const t=r+e*_,n=e*d.strideWidth-y;for(let e=0;e<f;++e){const r=n+e*g;if(r<0||r>=d.inWidth)continue;const a=i+r*N;let o=s+e*k[1];for(let e=0;e<d.inChannels;++e){const n=A[a+e*T];for(let e=0;e<d.outChannels;++e)R[t+e*$]+=n*F[o+e];o+=d.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,R)}var o$={kernelName:It,backendName:"cpu",kernelFunc:i$},u$={kernelName:St,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r;JT([a,s],"conv2dBackpropFilter");const h=Qp.convertConv2DDataFormat(u),d=Qp.computeConv2DInfo(a.shape,c,i,1,o,l,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,y="channelsLast"===d.dataFormat,b=new Ua(d.filterShape,"float32"),x=d.padInfo.left,v=d.padInfo.top,w=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=new Ua(a.shape,a.dtype,w),S=new Ua(s.shape,s.dtype,k);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((v-e)/p)),n=Math.min(d.outHeight,(d.inHeight+v-e)/p);for(let r=0;r<g;++r){const a=Math.max(0,Math.ceil((x-r)/f)),s=Math.min(d.outWidth,(d.inWidth+x-r)/f);for(let i=0;i<d.inChannels;++i)for(let o=0;o<d.outChannels;++o){let u=0;for(let l=0;l<d.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*p-v;for(let e=a;e<s;++e){const n=r+e*f-x;u+=y?I.get(l,t,n,i)*S.get(l,c,e,o):I.get(l,i,t,n)*S.get(l,o,c,e)}}b.set(u,e,r,i,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},l$={kernelName:Nt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r;JT([a,s],"conv2dBackpropInput");const h=pa.computeStrides(s.shape),d=pa.computeStrides(a.shape);let p=Qp.convertConv2DDataFormat(l);const f=Qp.computeConv2DInfo(i,s.shape,o,1,u,c,!1,p),m=new Ua(f.inShape,"float32"),g=m.values,y=n.data.get(a.dataId).values,b=n.data.get(s.dataId).values,[x,v,w]=h,{batchSize:k,filterHeight:I,filterWidth:S,inChannels:N,inHeight:T,inWidth:E,outChannels:C,outHeight:_,outWidth:$,strideHeight:A,strideWidth:F}=f;p=f.dataFormat;const R=I-1-f.padInfo.top,D=S-1-f.padInfo.left,M="channelsLast"===p,O=m.strides[0],L=M?m.strides[1]:m.strides[2],z=M?m.strides[2]:1,P=M?1:m.strides[1],B=d[0],W=M?d[1]:d[2],V=M?d[2]:1,U=M?1:d[1];for(let e=0;e<k;++e)for(let t=0;t<N;++t)for(let n=0;n<T;++n){const r=n-R,a=Math.max(0,Math.ceil(r/A)),s=Math.min(_,(I+r)/A);for(let i=0;i<E;++i){const o=i-D,u=Math.max(0,Math.ceil(o/F)),l=Math.min($,(S+o)/F);let c=0;for(let n=a;n<s;++n){const a=n*A-r;for(let r=u;r<l;++r){const s=B*e+W*n+V*r,i=x*(I-1-a)+v*(S-1-(r*F-o))+w*t;for(let e=0;e<C;++e)c+=y[s+U*e]*b[i+e]}}g[O*e+L*n+z*i+P*t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},c$={kernelName:Tt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r;JT([a,s],"conv3d");const l=Qp.computeConv3DInfo(a.shape,s.shape,i,u,o),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=l,y=g.front,b=g.left,x=g.top,v=new Ua(l.outShape,a.dtype),w=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=v.values,S=pa.computeStrides(a.shape),N=pa.computeStrides(s.shape);for(let e=0;e<l.batchSize;++e){const t=e*S[0],n=e*v.strides[0];for(let e=0;e<l.outDepth;++e){const r=n+e*v.strides[1],a=e*l.strideDepth-y;for(let e=0;e<c;++e){const n=a+e*p;if(n<0||n>=l.inDepth)continue;const s=e*N[0],i=t+n*S[1];for(let e=0;e<l.outHeight;++e){const t=r+e*v.strides[2],n=e*l.strideHeight-x;for(let e=0;e<h;++e){const r=n+e*f;if(r<0||r>=l.inHeight)continue;const a=s+e*N[1],o=i+r*S[2];for(let e=0;e<l.outWidth;++e){const n=t+e*l.outChannels,r=e*l.strideWidth-b;for(let e=0;e<d;++e){const t=r+e*m;if(t<0||t>=l.inWidth)continue;const s=a+e*N[2],i=o+t*l.inChannels;let u=s;for(let e=0;e<l.inChannels;++e){const t=w[i+e];for(let e=0;e<l.outChannels;++e)I[n+e]+=t*k[u+e];u+=l.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},h$={kernelName:Et,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:u}=r;JT([a,s],"conv3dBackpropFilterV2");const l=pa.computeStrides(a.shape),c=pa.computeStrides(s.shape),h=Qp.computeConv3DInfo(a.shape,u,i,1,o),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new Ua(h.filterShape,"float32"),x=b.values,[v,w,k,I]=b.strides,S=n.data.get(s.dataId).values,[N,T,E,C]=c,_=n.data.get(a.dataId).values,[$,A,F,R]=l,D=h.padInfo.front,M=h.padInfo.left,O=h.padInfo.top;for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((D-e)/d)),n=Math.min(h.outDepth,(h.inDepth+D-e)/d),r=e*v;for(let a=0;a<g;++a){const s=Math.max(0,Math.ceil((O-a)/p)),i=Math.min(h.outHeight,(h.inHeight+O-a)/p),o=a*w+r;for(let r=0;r<y;++r){const u=Math.max(0,Math.ceil((M-r)/f)),l=Math.min(h.outWidth,(h.inWidth+M-r)/f),c=r*k+o;for(let o=0;o<h.inChannels;++o){const m=o*I+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let m=0;m<h.batchSize;++m){const h=m*$,y=m*N;for(let m=t;m<n;++m){const t=(e+m*d-D)*A+h,n=m*T+y;for(let e=s;e<i;++e){const s=(a+e*p-O)*F+t,i=e*E+n;for(let e=u;e<l;++e){const t=e*C+i;g+=_[(r+e*f-M)*R+s+o]*S[t+c]}}}}x[m+c]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},d$={kernelName:Ct,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:u}=r;JT([a],"conv3dBackpropInputV2");const l=pa.computeStrides(a.shape),c=pa.computeStrides(s.shape),h=Qp.computeConv3DInfo(u,s.shape,o,1,i),d=new Ua(h.inShape,"float32"),p=d.values,[f,m,g,y]=d.strides,b=n.data.get(a.dataId).values,[x,v,w,k]=l,I=n.data.get(s.dataId).values,[S,N,T,E]=c,{batchSize:C,filterDepth:_,filterHeight:$,filterWidth:A,inChannels:F,inDepth:R,inHeight:D,inWidth:M,outChannels:O,outDepth:L,outHeight:z,outWidth:P,strideDepth:B,strideHeight:W,strideWidth:V}=h,U=_-1-h.padInfo.front,G=$-1-h.padInfo.top,H=A-1-h.padInfo.left;for(let e=0;e<C;++e)for(let t=0;t<F;++t)for(let n=0;n<R;++n){const r=n-U,a=Math.max(0,Math.ceil(r/B)),s=Math.min(L,(_+r)/B);for(let i=0;i<D;++i){const o=i-G,u=Math.max(0,Math.ceil(o/W)),l=Math.min(z,($+o)/W);for(let c=0;c<M;++c){const h=c-H,d=Math.max(0,Math.ceil(h/V)),C=Math.min(P,(A+h)/V);let F=0;for(let n=a;n<s;++n){const a=n*B-r;for(let r=u;r<l;++r){const s=r*W-o;for(let i=d;i<C;++i){const o=x*e+v*n+w*r+k*i,u=S*(_-1-a)+N*($-1-s)+T*(A-1-(i*V-h))+E*t;for(let e=0;e<O;++e)F+=b[o+e]*I[u+e]}}}p[f*e+m*n+g*i+y*c+t]=F}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},p$=IE(_t,(e=>Math.cos(e))),f$={kernelName:_t,backendName:"cpu",kernelFunc:p$},m$=IE($t,(e=>Math.cosh(e))),g$={kernelName:$t,backendName:"cpu",kernelFunc:m$},y$={kernelName:Ft,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=r,[c,h,d,p]=a.shape,f=s.shape[0],[m,g]=o,y=Ei([f,m,g,p],"float32"),b=n.data.get(s.dataId).values,x=n.data.get(i.dataId).values,v=n.data.get(a.dataId).values,w=pa.computeStrides(a.shape),k=pa.computeStrides(y.shape);for(let e=0;e<f;e++){const t=4*e,n=b[t],r=b[t+1],a=b[t+2],s=b[t+3],i=x[e];if(i>=c)continue;const o=m>1?(a-n)*(h-1)/(m-1):0,f=g>1?(s-r)*(d-1)/(g-1):0;for(let t=0;t<m;t++){const c=m>1?n*(h-1)+t*o:.5*(n+a)*(h-1);if(c<0||c>h-1)for(let n=0;n<g;n++)for(let r=0;r<p;r++){const a=r+n*k[2]+t*k[1]+e*k[0];y.values[a]=l}else if("bilinear"===u){const n=Math.floor(c),a=Math.ceil(c),o=c-n;for(let u=0;u<g;u++){const c=g>1?r*(d-1)+u*f:.5*(r+s)*(d-1);if(c<0||c>d-1){for(let n=0;n<p;n++){const r=n+u*k[2]+t*k[1]+e*k[0];y.values[r]=l}continue}const h=Math.floor(c),m=Math.ceil(c),b=c-h;for(let r=0;r<p;r++){let s=r+h*w[2]+n*w[1]+i*w[0];const l=v[s];s=r+m*w[2]+n*w[1]+i*w[0];const c=v[s];s=r+h*w[2]+a*w[1]+i*w[0];const d=v[s];s=r+m*w[2]+a*w[1]+i*w[0];const p=l+(c-l)*b,f=d+(v[s]-d)*b;s=r+u*k[2]+t*k[1]+e*k[0],y.values[s]=p+(f-p)*o}}}else for(let n=0;n<g;++n){const a=g>1?r*(d-1)+n*f:.5*(r+s)*(d-1);if(a<0||a>d-1){for(let r=0;r<p;r++){const a=r+n*k[2]+t*k[1]+e*k[0];y.values[a]=l}continue}const o=Math.round(a),u=Math.round(c);for(let r=0;r<p;r++){const a=r+o*w[2]+u*w[1]+i*w[0],s=r+n*k[2]+t*k[1]+e*k[0];y.values[s]=v[a]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},b$={kernelName:At,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;JT(a,"cumsum");const u=Qp.getAxesPermutation([s],a.shape.length);let l=a;null!=u&&(l=kC({inputs:{x:a},backend:n,attrs:{perm:u}}));const c=Qp.getInnerMostAxes(1,a.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const h=os(l.dtype,"int32"),d=pa.makeZerosTypedArray(pa.sizeFromShape(l.shape),h),p=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)d[n]=i?0:p[n];else{const r=m(e,t-1);d[n]=i?p[r]+d[r]:p[n]+d[r]}}const g=n.makeTensorInfo(l.shape,h,d);if(null!=u){const e=kC({inputs:{x:g},backend:n,attrs:{perm:Qp.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),e}return g}},x$={kernelName:Rt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const e=vE(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,e)}if(2===a.shape.length){const e=wE(n.bufferSync(a),n.bufferSync(s),i,o);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}},v$={kernelName:Dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;pa.assert("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`));const o=a.shape[0],u=a.shape[1],l=a.shape[2],c=a.shape[3],h=u*s,d=l*s,p=c/(s*s),f=n.data.get(a.dataId).values,m=new Float32Array(o*h*d*p);let g=0;for(let e=0;e<o;++e)for(let t=0;t<h;++t){const n=Math.floor(t/s),r=t%s;for(let t=0;t<d;++t){const a=Math.floor(t/s),i=(r*s+t%s)*p;for(let t=0;t<p;++t){const r=t+i+c*(a+l*(n+u*e));m[g++]=f[r]}}}return n.makeTensorInfo([o,h,d,p],a.dtype,m)}};function w$(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=r;JT([a,s],"depthwiseConv2DNative");const c=pa.computeStrides(a.shape),h=pa.computeStrides(s.shape);let d=u;null==d&&(d=[1,1]),pa.assert(Qp.eitherStridesOrDilationsAreOne(i,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));const p=Qp.computeConv2DInfo(a.shape,s.shape,i,d,o,l,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=p,x=b.left,v=b.top,w=p.outChannels/p.inChannels,k=new Ua(p.outShape,a.dtype),I=n.data.get(a.dataId).values,S=n.data.get(s.dataId).values,N=k.values;for(let e=0;e<p.batchSize;++e){const t=e*c[0],n=e*k.strides[0];for(let e=0;e<p.outHeight;++e){const r=n+e*k.strides[1],a=e*p.strideHeight-v;for(let e=0;e<f;++e){const n=a+e*g;if(n<0||n>=p.inHeight)continue;const s=e*h[0],i=t+n*c[1];for(let e=0;e<p.outWidth;++e){const t=r+e*k.strides[2],n=e*p.strideWidth-x;for(let e=0;e<m;++e){const r=n+e*y;if(r<0||r>=p.inWidth)continue;const a=s+e*h[1],o=i+r*p.inChannels;let u=t,l=a;for(let e=0;e<p.inChannels;++e){const t=I[o+e];for(let e=0;e<w;++e)N[u+e]+=t*S[l+e];u+=w,l+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}var k$={kernelName:Mt,backendName:"cpu",kernelFunc:w$},I$={kernelName:Ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r;JT([a,s],"depthwiseConv2dNativeBackpropFilter");const h=Qp.computeConv2DInfo(a.shape,c,i,o,u,l,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new Ua(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,v=n.data.get(a.dataId).values,w=new Ua(a.shape,a.dtype,v),k=n.data.get(s.dataId).values,I=new Ua(s.shape,s.dtype,k);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((b-e)/d)),n=Math.min(h.outHeight,(h.inHeight+b-e)/d);for(let r=0;r<m;++r){const a=Math.max(0,Math.ceil((y-r)/p)),s=Math.min(h.outWidth,(h.inWidth+y-r)/p);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/x),u=i%x;let l=0;for(let u=0;u<h.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*d-b;for(let e=a;e<s;++e){const n=r+e*p-y;l+=w.get(u,t,n,o)*I.get(u,c,e,i)}}g.set(l,e,r,o,u)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},S$={kernelName:Lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r;JT([a,s],"depthwiseConv2DNativeBackpropInput");const h=pa.computeStrides(a.shape),d=pa.computeStrides(s.shape),p=Qp.computeConv2DInfo(c,s.shape,i,o,u,l,!0),f=new Ua(p.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(a.dataId).values,[v,w,k]=h,I=n.data.get(s.dataId).values,[S,N,T]=d,{batchSize:E,filterHeight:C,filterWidth:_,inChannels:$,inHeight:A,inWidth:F,outChannels:R,outHeight:D,outWidth:M,strideHeight:O,strideWidth:L}=p,z=C-1-p.padInfo.top,P=_-1-p.padInfo.left,B=R/$;for(let e=0;e<E;++e)for(let t=0;t<$;++t)for(let n=0;n<A;++n){const r=n-z,a=Math.max(0,Math.ceil(r/O)),s=Math.min(D,(C+r)/O);for(let i=0;i<F;++i){const o=i-P,u=Math.max(0,Math.ceil(o/L)),l=Math.min(M,(_+o)/L);let c=0;for(let n=a;n<s;++n){const a=n*O-r;for(let r=u;r<l;++r){const s=v*e+w*n+k*r,i=S*(C-1-a)+N*(_-1-(r*L-o))+T*t;for(let e=0;e<B;++e)c+=x[s+(t*B+e)]*I[i+e]}}m[g*e+y*n+b*i+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},N$={kernelName:zt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=pa.sizeFromShape(r.shape),s=n.data.get(r.dataId).values,i=Ei([a,a],r.dtype),o=i.values;for(let e=0;e<s.length;e++)o[e*a+e]=s[e];const u=[...r.shape,...r.shape];return n.makeTensorInfo(u,i.dtype,i.values)}},T$={kernelName:Pt,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e;const{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r,l=n,c=l.data.get(a.dataId).values,h=a.shape.length,d=l.data.get(s.dataId).values,p=s.shape.length,{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:b,outWidth:x,padInfo:v,strideHeight:w,strideWidth:k,filterHeight:I,filterWidth:S,dilationHeight:N,dilationWidth:T,outShape:E}=Qp.computeDilation2DInfo(a.shape,s.shape,i,o,"NHWC",u),C=pa.sizeFromShape(E),_=E.length,$=pa.getArrayFromDType(a.dtype,C);for(let e=0;e<f;++e)for(let t=0;t<b;++t){const n=t*w-v.top;for(let r=0;r<x;++r){const i=r*k-v.left;for(let o=0;o<y;++o){let u=Number.MIN_SAFE_INTEGER;for(let t=0;t<I;++t){const r=n+t*N;if(r>=0&&r<m)for(let n=0;n<S;++n){const l=i+n*T;if(l>=0&&l<g){const i=pa.locToIndex([e,r,l,o],h,pa.computeStrides(a.shape)),f=pa.locToIndex([t,n,o],p,pa.computeStrides(s.shape)),m=c[i]+d[f];m>u&&(u=m)}}}$[pa.locToIndex([e,t,r,o],_,pa.computeStrides(E))]=u}}}return{dataId:l.write(pa.toTypedArray($,a.dtype),E,a.dtype),shape:E,dtype:a.dtype}}},E$={kernelName:Wt,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e;const{x:a,filter:s,dy:i}=t,{strides:o,pad:u,dilations:l}=r,c=n,h=pa.toNestedArray(a.shape,c.data.get(a.dataId).values),d=pa.toNestedArray(s.shape,c.data.get(s.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:N,outShape:T}=Qp.computeDilation2DInfo(a.shape,s.shape,o,u,"NHWC",l);pa.assert(i.rank===T.length,(()=>`Error in ${Wt}, dy must have the same rank as output ${T.length}, but got ${i.rank}`));const E=pa.toNestedArray(T,c.data.get(i.dataId).values),C=pa.makeZerosNestedTypedArray(s.shape,s.dtype);for(let e=0;e<p;++e)for(let t=0;t<y;++t){const n=t*v-x.top;for(let r=0;r<b;++r){const a=r*w-x.left;for(let s=0;s<g;++s){let i=Number.MIN_SAFE_INTEGER,o=0,u=0;for(let t=0;t<k;++t){const r=n+t*S;if(r>=0&&r<f)for(let n=0;n<I;++n){const l=a+n*N;if(l>=0&&l<m){const a=h[e][r][l][s]+d[t][n][s];a>i&&(i=a,o=t,u=n)}}}C[o][u][s]+=E[e][t][r][s]}}}return{dataId:c.write(pa.toTypedArray(C,a.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},C$={kernelName:Bt,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e;const{x:a,filter:s,dy:i}=t,{strides:o,pad:u,dilations:l}=r,c=n,h=pa.toNestedArray(a.shape,c.data.get(a.dataId).values),d=pa.toNestedArray(s.shape,c.data.get(s.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:N,outShape:T}=Qp.computeDilation2DInfo(a.shape,s.shape,o,u,"NHWC",l);pa.assert(i.rank===T.length,(()=>`Error in ${Bt}, dy must have the same rank as output ${T.length}, but got ${i.rank}`));const E=pa.toNestedArray(T,c.data.get(i.dataId).values),C=pa.makeZerosNestedTypedArray(a.shape,a.dtype);for(let e=0;e<p;++e)for(let t=0;t<y;++t){const n=t*v-x.top;for(let r=0;r<b;++r){const a=r*w-x.left;for(let s=0;s<g;++s){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,u=a<0?0:a;for(let t=0;t<k;++t){const r=n+t*S;if(r>=0&&r<f)for(let n=0;n<I;++n){const l=a+n*N;if(l>=0&&l<m){const a=h[e][r][l][s]+d[t][n][s];a>i&&(i=a,o=r,u=l)}}}C[e][o][u][s]+=E[e][t][r][s]}}}return{dataId:c.write(pa.toTypedArray(C,a.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}};function _$(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;let o;JT(a,"sum"),o="bool"===a.dtype?dE({inputs:{x:a},backend:n,attrs:{dtype:"int32"}}):uE({inputs:{x:a},backend:n});const u=o.shape.length,l=pa.parseAxisParam(s,o.shape),c=Qp.getAxesPermutation(l,u);let h=l,d=o;null!=c&&(d=kC({inputs:{x:o},backend:n,attrs:{perm:c}}),h=Qp.getInnerMostAxes(h.length,u)),Qp.assertAxesAreInnerMostDims("sum",h,d.shape.length);const[p,f]=Qp.computeOutAndReduceShapes(d.shape,h);let m=oE(n,p,Qp.upcastType(d.dtype,"int32"));const g=pa.sizeFromShape(f),y=n.data.get(m.dataId).values,b=n.data.get(d.dataId).values;for(let e=0;e<y.length;++e){const t=e*g;let n=0;for(let e=0;e<g;++e)n+=b[t+e];y[e]=n}if(i){const e=m;m=y_({inputs:{x:m},backend:n,attrs:{shape:Qp.expandShapeToKeepDim(m.shape,l)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(d),m}var $$={kernelName:kr,backendName:"cpu",kernelFunc:_$},A$={kernelName:Ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:u}=Qp.decodeEinsumEquation(a,s.length);Qp.checkEinsumDimSizes(i.length,u,s);const{path:l,steps:c}=Qp.getEinsumComputePath(o,u),h=c.length;let d=null,p=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=Qp.getEinsumPermutation(p,u[t]);let a;Qp.isIdentityPermutation(e)?a=s[t]:(a=kC({inputs:{x:s[t]},backend:n,attrs:{perm:e}}),f.push(a));const i=a.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);pa.arraysEqual(a.shape,i)||(a=y_({inputs:{x:a},backend:n,attrs:{shape:i}}),f.push(a)),null===d?d=a:(d=fC({inputs:{a,b:d},backend:n}),f.push(d))}e<h-1&&(l[e]>=0&&(d=_$({inputs:{x:d},backend:n,attrs:{axis:l[e]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},F$={kernelName:Ht,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:a}=t;JT([r,a],"eluGrad");const s=new Float32Array(pa.sizeFromShape(a.shape)),i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<i.length;++e){const t=i[e];s[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(a.shape,"float32",s)}},R$=Qp.ERF_P,D$=Qp.ERF_A1,M$=Qp.ERF_A2,O$=Qp.ERF_A3,L$=Qp.ERF_A4,z$=Qp.ERF_A5,P$=IE(jt,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+R$*n);return t*(1-((((z$*r+L$)*r+O$)*r+M$)*r+D$)*r*Math.exp(-n*n))})),B$={kernelName:jt,backendName:"cpu",kernelFunc:P$};function W$(e){const{inputs:t,backend:n,attrs:r}=e,{input:a}=t,{dim:s}=r,i=a.shape.length,o=a.shape.slice();let u=s;return s<0&&(pa.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+s+1),o.splice(u,0,1),y_({inputs:{x:a},backend:n,attrs:{shape:o}})}var V$={kernelName:Xt,backendName:"cpu",kernelFunc:W$},U$=aE(((e,t)=>e/t)),G$=fE(Vt,U$),H$={kernelName:Vt,backendName:"cpu",kernelFunc:G$};function j$(e,t,n){const r=e.shape,a=r[0],s=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,l=[a,s],c=pa.sizeFromShape(l),h=pa.getTypedArrayFromDType("float32",c),d=pa.getTypedArrayFromDType("float32",c);for(let e=0;e<a;e++){const r=DC({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,s]}}),a=DC({inputs:{x:u},backend:n,attrs:{begin:[e,0],size:[1,s]}}),i=sE({inputs:{real:r,imag:a},backend:n}),{real:l,imag:c}=q$(i,t,n),p=Qp.mergeRealAndImagArrays(l,c);for(let t=0;t<s;t++){const n=Qp.getComplexWithIndex(p,t);h[e*s+t]=n.real,d[e*s+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i)}const p=n.makeTensorInfo(l,"float32",h),f=n.makeTensorInfo(l,"float32",d),m=sE({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function q$(e,t,n){const r=pa.sizeFromShape(e.shape),a=n.data.get(e.dataId),s=n.data.get(a.complexTensorInfos.real.dataId).values,i=n.data.get(a.complexTensorInfos.imag.dataId).values;if(0==((o=r)&o-1)){const a=K$(s,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",a.real),t=n.makeTensorInfo(o,"float32",a.imag),s=n.makeTensorInfo([],"float32",pa.createScalarValue(r,"float32")),i=uE({inputs:{x:s},backend:n}),u=H$.kernelFunc({inputs:{a:e,b:s},backend:n}),l=H$.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(u.dataId).values,h=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),{real:c,imag:h}}return a}{const e=function(e,t,n){const r=new Float32Array(2*t);for(let a=0;a<t;a++){let s=0,i=0;for(let r=0;r<t;r++){const o=Qp.exponent(a*r,t,n),u=Qp.getComplexWithIndex(e,r);s+=u.real*o.real-u.imag*o.imag,i+=u.real*o.imag+u.imag*o.real}n&&(s/=t,i/=t),Qp.assignToTypedArray(r,s,i,a)}return r}(Qp.mergeRealAndImagArrays(s,i),r,t);return Qp.splitRealAndImagArrays(e)}var o}function K$(e,t,n,r,a){if(1===n)return{real:e,imag:t};const s=Qp.mergeRealAndImagArrays(e,t),i=n/2,o=Qp.complexWithEvenIndex(s),u=o.real,l=o.imag,c=[u.length],h=a.makeTensorInfo(c,"float32",u),d=a.makeTensorInfo(c,"float32",l),p=sE({inputs:{real:h,imag:d},backend:a}),f=Qp.complexWithOddIndex(s),m=f.real,g=f.imag,y=[m.length],b=a.makeTensorInfo(y,"float32",m),x=a.makeTensorInfo(y,"float32",g),v=sE({inputs:{real:b,imag:x},backend:a}),w=K$(u,l,i,r,a),k=w.real,I=w.imag,S=[k.length],N=a.makeTensorInfo(S,"float32",k),T=a.makeTensorInfo(S,"float32",I),E=sE({inputs:{real:N,imag:T},backend:a}),C=K$(m,g,i,r,a),_=C.real,$=C.imag,A=[_.length],F=a.makeTensorInfo(A,"float32",_),R=a.makeTensorInfo(A,"float32",$),D=sE({inputs:{real:F,imag:R},backend:a}),M=Qp.exponents(n,r),O=[M.real.length],L=a.makeTensorInfo(O,"float32",M.real),z=a.makeTensorInfo(O,"float32",M.imag),P=sE({inputs:{real:L,imag:z},backend:a}),B=fC({inputs:{a:P,b:D},backend:a}),W=bE({inputs:{a:E,b:B},backend:a}),V=JC({inputs:{a:E,b:B},backend:a}),U=cE({inputs:{input:W},backend:a}),G=cE({inputs:{input:V},backend:a}),H=n$({inputs:{input:W},backend:a}),j=n$({inputs:{input:V},backend:a}),q=a$({inputs:[U,G],backend:a,attrs:{axis:0}}),K=a$({inputs:[H,j],backend:a,attrs:{axis:0}}),X=a.data.get(q.dataId).values,Y=a.data.get(K.dataId).values;return a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(v),a.disposeIntermediateTensorInfo(N),a.disposeIntermediateTensorInfo(T),a.disposeIntermediateTensorInfo(E),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(R),a.disposeIntermediateTensorInfo(D),a.disposeIntermediateTensorInfo(L),a.disposeIntermediateTensorInfo(z),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(B),a.disposeIntermediateTensorInfo(W),a.disposeIntermediateTensorInfo(V),a.disposeIntermediateTensorInfo(U),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(G),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(q),a.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}var X$={kernelName:Zt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=pa.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=y_({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=j$(i,!1,n),u=y_({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}};function Y$(e){const{backend:t,attrs:n}=e,{shape:r,value:a,dtype:s}=n,i=s||pa.inferDtype(a),o=pa.getArrayFromDType(i,pa.sizeFromShape(r));return function(e,t,n){e.fill(t)}(o,a),t.makeTensorInfo(r,i,o)}var Z$={kernelName:Jt,backendName:"cpu",kernelFunc:Y$},J$={kernelName:Qt,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{image:a}=t,s=r,i=pa.getTypedArrayFromDType(a.dtype,pa.sizeFromShape(a.shape)),[o,u,l,c]=a.shape,h=s.data.get(a.dataId).values;for(let e=0;e<o;e++){const t=e*l*u*c;for(let e=0;e<u;e++){const n=e*(l*c);for(let e=0;e<l;e++){const r=e*c;for(let a=0;a<c;a++){const s=Math.round(l-e-1),o=t+n+r+a;let u=h[o];s>=0&&s<l&&(u=h[t+n+s*c+a]),i[o]=u}}}}return{dataId:s.write(i,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},Q$=aE(((e,t)=>Math.floor(e/t))),eA=fE(tn,Q$,null,"int32"),tA={kernelName:tn,backendName:"cpu",kernelFunc:eA},nA={kernelName:Jr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=i$({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=m;m=bE({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=g_(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}},rA={kernelName:Qr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=w$({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=m;m=bE({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=g_(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}},aA={kernelName:an,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=pa.sizeFromShape(r.shape),i=a.shape,o=i[i.length-1],[u,l,c,h]=Qp.prepareAndValidate(r,a);if(0===l)return n.makeTensorInfo(u,r.dtype,[]);const d=WE(n.data.get(a.dataId).values,n.bufferSync(r),r.dtype,l,o,c,h,r.shape,s);return n.makeTensorInfo(u,r.dtype,d.values)}},sA={kernelName:rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r;JT([a,s],"gatherV2");const u=pa.parseAxisParam(i,a.shape)[0],l=n.data.get(s.dataId).values,c=a.shape[u];for(let e=0;e<l.length;++e){const t=l[e];pa.assert(t<=c-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`))}let h=o;null==o&&(h=0);const d=pa.sizeFromShape(s.shape),p=Qp.segment_util.collectGatherOpShapeInfo(a,s,u,h),f=y_({inputs:{x:a},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=y_({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,d/p.batchSize]}}),g=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],y=n.bufferSync(m),b=VE(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(p.outputShape,b.dtype,b.values)}},iA={kernelName:ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=pa.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=y_({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=j$(i,!0,n),u=y_({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}},oA=IE(hn,(e=>Number.isFinite(e)?1:0),"bool"),uA={kernelName:hn,backendName:"cpu",kernelFunc:oA},lA=IE(dn,(e=>Math.abs(e)===1/0?1:0),"bool"),cA={kernelName:dn,backendName:"cpu",kernelFunc:lA},hA=IE(pn,(e=>Number.isNaN(e)?1:0),"bool"),dA={kernelName:pn,backendName:"cpu",kernelFunc:hA},pA={kernelName:yn,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=tC(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},fA=IE(xn,(e=>Math.log1p(e))),mA={kernelName:xn,backendName:"cpu",kernelFunc:fA},gA=aE(((e,t)=>e&&t)),yA=fE(vn,gA,null,"bool"),bA={kernelName:vn,backendName:"cpu",kernelFunc:yA},xA=IE(wn,(e=>e?0:1),"bool"),vA={kernelName:wn,backendName:"cpu",kernelFunc:xA},wA=aE(((e,t)=>e||t)),kA=fE(kn,wA,null,"bool"),IA={kernelName:kn,backendName:"cpu",kernelFunc:kA},SA={kernelName:Sn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:u}=r;JT(a,"LRN");const l=a.shape[3],c=l-1,h=n.data.get(a.dataId).values,d=pa.sizeFromShape(a.shape),p=new Float32Array(d);function f(e){const t=e%l;let n=e-t+Math.max(0,t-s);const r=e-t+Math.min(t+s,c);let a=0;for(;n<=r;n++){const e=h[n];a+=e*e}return a}for(let e=0;e<d;e++){const t=f(e),n=h[e]*Math.pow(i+o*t,-u);p[e]=n}return n.makeTensorInfo(a.shape,a.dtype,p)}},NA={kernelName:Nn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r;JT(i,"LRNGrad");const h=pa.sizeFromShape(i.shape),d=i.shape[3],p=n.data.get(i.dataId).values,f=n.data.get(a.dataId).values,m=n.data.get(s.dataId).values,g=new Float32Array(h),y=h;for(let e=0;e<y;e++){const t=e%d,n=e-t+Math.max(0,t-o),r=e-t+Math.min(d,t+o+1);let a=0;for(let e=n;e<r;e++)a+=Math.pow(f[e],2);a=l*a+u;for(let t=n;t<r;t++){let n=-2*l*c*f[t]*m[e]/a;e===t&&(n+=Math.pow(a,-c)),n*=p[e],g[t]+=n}}return n.makeTensorInfo(i.shape,a.dtype,g)}};function TA(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=n;let u=a.shape;const l=u.length,c=pa.parseAxisParam(s,u);let h=c;const d=Qp.getAxesPermutation(h,l);let p=o.data.get(a.dataId).values;if(null!=d){const e=new Array(l);for(let t=0;t<e.length;t++)e[t]=u[d[t]];p=wC(p,u,a.dtype,d,e),h=Qp.getInnerMostAxes(h.length,l),u=e}JT(a,"max"),Qp.assertAxesAreInnerMostDims("max",h,l);const[f,m]=Qp.computeOutAndReduceShapes(u,h),g=sC(p,pa.sizeFromShape(m),f,a.dtype),y=o.write(g,f,a.dtype);let b=f;return i&&(b=Qp.expandShapeToKeepDim(f,c)),{dataId:y,shape:b,dtype:a.dtype}}var EA={kernelName:Tn,backendName:"cpu",kernelFunc:TA},CA={kernelName:Cn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;JT(a,"maxPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;pa.assert(Qp.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=Qp.computePool2DInfo(a.shape,s,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&pa.arraysEqual(l.inShape,l.outShape))c=uE({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=pa.computeStrides(a.shape),r=V_(e,a.shape,a.dtype,t,l,"max");c=n.makeTensorInfo(l.outShape,a.dtype,r.values)}return c}},_A={kernelName:$n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r;JT(a,"maxPool3d");const c=Qp.computePool3DInfo(a.shape,s,i,1,o,u,l),h=G_(n.data.get(a.dataId).values,a.shape,a.dtype,pa.computeStrides(a.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}},$A={kernelName:An,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=r;JT([a,s],"maxPool3DGrad");const c=Qp.computePool3DInfo(s.shape,i,o,1,u,l),h=function(e,t){const n=Ei(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*r-d;let x=b;for(;x<0;)x+=i;const v=Math.min(t.inDepth,l+b);for(let r=0;r<t.outHeight;++r){const l=r*a-p;let d=l;for(;d<0;)d+=o;const w=Math.min(t.inHeight,c+l);for(let a=0;a<t.outWidth;++a){const p=a*s-f;let k=p;for(;k<0;)k+=u;const I=Math.min(t.inWidth,h+p);let S=Number.NEGATIVE_INFINITY,N=-1;for(let t=x;t<v;t+=i){const n=t-b;for(let r=d;r<w;r+=o){const a=r-l;for(let s=k;s<I;s+=u){const i=s-p,o=e.get(m,t,r,s,g);o>=S&&(S=o,N=n*c*h+a*c+i)}}}n.set(N,m,y,r,a,g)}}}return n}(n.bufferSync(s),c),d=c.strideDepth,p=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,y=c.dilationWidth,b=c.effectiveFilterDepth,x=c.effectiveFilterHeight,v=c.effectiveFilterWidth,w=b-1-c.padInfo.front,k=v-1-c.padInfo.left,I=x-1-c.padInfo.top,S=Ei(s.shape,"float32"),N=n.bufferSync(a);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let a=0;a<c.inWidth;++a){const s=n-w,i=r-I,o=a-k;let u=0;for(let n=0;n<b;n+=m){const r=(s+n)/d;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let a=0;a<x;a+=g){const s=(i+a)/p;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let i=0;i<v;i+=y){const l=(o+i)/f;if(l<0||l>=c.outWidth||Math.floor(l)!==l)continue;const d=b*x*v-1-h.get(e,r,s,l,t)===n*x*v+a*v+i?1:0;0!==d&&(u+=N.get(e,r,s,l,t)*d)}}}S.set(u,e,n,r,a,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}},AA={kernelName:_n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;JT([s,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,d=Qp.computePool2DInfo(o.shape,u,l,1,c,h),p=n.data.get(o.dataId).values,f=Ei(d.outShape,o.dtype,U_(p,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,b=d.dilationWidth,x=d.effectiveFilterHeight,v=d.effectiveFilterWidth,w=v-1-d.padInfo.left,k=x-1-d.padInfo.top,I=Ei(o.shape,"float32"),S=n.data.get(a.dataId).values,N=Ei(a.shape,"float32",S);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){const a=n-k,s=r-w;let i=0;for(let n=0;n<x;n+=y){const r=(a+n)/m;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let a=0;a<v;a+=b){const o=(s+a)/g;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const u=x*v-1-f.get(e,r,o,t)===n*v+a?1:0;0!==u&&(i+=N.get(e,r,o,t)*u)}}I.set(i,e,n,r,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},FA={kernelName:Fn,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{x:a}=t,{filterSize:s,strides:i,pad:o,includeBatchInIndex:u}=n,l=r;JT(a,"MaxPoolWithArgmax");const c=l.data.get(a.dataId).values,h=Qp.computePool2DInfo(a.shape,s,i,[1,1],o),[d,p]=function(e,t,n,r,a){const s=V_(e,0,n,pa.computeStrides(t),a,"max"),i=U_(e,t,n,a,!0,r);return[s.values,i.values]}(c,a.shape,a.dtype,u,h),f=l.write(d,h.outShape,a.dtype),m=l.write(p,h.outShape,a.dtype);return[{dataId:f,shape:h.outShape,dtype:a.dtype},{dataId:m,shape:h.outShape,dtype:"int32"}]}},RA={kernelName:Rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=pa.parseAxisParam(s,a.shape),u=Qp.computeOutAndReduceShapes(a.shape,o)[1],l=pa.sizeFromShape(u),c=[],h=n.makeTensorInfo([],"float32",new Float32Array([l]));c.push(h);const d=dE({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});c.push(d);const p=G$({inputs:{a:d,b:h},backend:n});c.push(p);const f=_$({inputs:{x:p},backend:n,attrs:{axis:s,keepDims:i}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}},DA={kernelName:Dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;JT(a,"min");const o=pa.parseAxisParam(s,a.shape);let u=o;const l=Qp.getAxesPermutation(u,a.shape.length);let c=a;null!=l&&(c=kC({inputs:{x:a},backend:n,attrs:{perm:l}}),u=Qp.getInnerMostAxes(u.length,a.shape.length)),Qp.assertAxesAreInnerMostDims("min",u,c.shape.length);const[h,d]=Qp.computeOutAndReduceShapes(c.shape,u),p=pa.sizeFromShape(d),f=pa.makeZerosTypedArray(pa.sizeFromShape(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];(Number.isNaN(r)||r<n)&&(n=r)}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=y_({inputs:{x:g},backend:n,attrs:{shape:Qp.expandShapeToKeepDim(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},MA={kernelName:On,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,mode:i}=r;JT(a,"mirrorPad");const o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),u=s.map((e=>e[0])),l=s.map(((e,t)=>e[0]+a.shape[t])),c="reflect"===i?0:1,h=n.data.get(a.dataId).values,d=a.shape.length,p=pa.computeStrides(a.shape),f=pa.sizeFromShape(o),m=o.length,g=pa.computeStrides(o),y=pa.getTypedArrayFromDType(a.dtype,f);for(let e=0;e<f;e++){let t=pa.indexToLoc(e,m,g);for(let e=0;e<m;e++)t[e]<u[e]?t[e]=2*u[e]-t[e]-c:t[e]>=l[e]&&(t[e]=2*(l[e]-1)-t[e]+c);t=t.map(((e,t)=>e-u[t]));const n=pa.locToIndex(t,d,p);y[e]=h[n]}return{dataId:n.write(y,o,a.dtype),shape:o,dtype:a.dtype}}},OA=aE(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),LA=fE(Ln,OA),zA={kernelName:Ln,backendName:"cpu",kernelFunc:LA},PA=f(T());function BA(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=a.shape.length;let o=s;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const u=pa.parseAxisParam([o],a.shape),l=TA({inputs:{x:a},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),c=Qp.expandShapeToKeepDim(l.shape,u),h=y_({inputs:{x:l},backend:n,attrs:{shape:c}}),d=JC({inputs:{a,b:h},backend:n}),p=RE({inputs:{x:d},backend:n}),f=_$({inputs:{x:p},backend:n,attrs:{axis:u,keepDims:!1}}),m=y_({inputs:{x:f},backend:n,attrs:{shape:c}}),g=G$({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var WA={kernelName:Nr,backendName:"cpu",kernelFunc:BA},VA={kernelName:zn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;JT(a,"multinomial");const u=o?a:BA({inputs:{logits:a},backend:n,attrs:{dim:-1}}),l=u.shape[0],c=u.shape[1],h=n.data.get(u.dataId).values,d=[l,s],p=pa.makeZerosTypedArray(pa.sizeFromShape(d),"int32");for(let e=0;e<l;++e){const t=e*c,n=new Float32Array(c-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];const r=PA.alea(i.toString()),a=e*s;for(let e=0;e<s;++e){const t=r();p[a+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){p[a+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(d,"int32",p)}},UA=Qf.nonMaxSuppressionV3Impl,GA={kernelName:Vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r;JT(a,"NonMaxSuppression");const l=n.data.get(a.dataId).values,c=n.data.get(s.dataId).values,{selectedIndices:h}=UA(l,c,i,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},HA=Qf.nonMaxSuppressionV4Impl,jA={kernelName:Un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r;JT(a,"NonMaxSuppressionPadded");const c=n.data.get(a.dataId).values,h=n.data.get(s.dataId).values,{selectedIndices:d,validOutputs:p}=HA(c,h,i,o,u,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},qA=Qf.nonMaxSuppressionV5Impl,KA={kernelName:Gn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r;JT(a,"NonMaxSuppressionWithScore");const c=n.data.get(a.dataId).values,h=n.data.get(s.dataId).values,d=i,p=o,f=u,m=l,{selectedIndices:g,selectedScores:y}=qA(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},XA={kernelName:jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r;JT(a,"oneHot");const u=pa.sizeFromShape(a.shape),l=new Float32Array(u*s);l.fill(o);const c=n.data.get(a.dataId).values;for(let e=0;e<u;++e)c[e]>=0&&c[e]<s&&(l[e*s+c[e]]=i);return n.makeTensorInfo([...a.shape,s],"int32",l)}};function YA(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=cE({inputs:{input:r},backend:n}),t=YA({inputs:{x:e},backend:n}),a=n$({inputs:{input:r},backend:n}),s=YA({inputs:{x:a},backend:n}),i=sE({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return Y$({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}var ZA={kernelName:qr,backendName:"cpu",kernelFunc:YA},JA={kernelName:Hn,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){const t=cE({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=n$({inputs:{input:a},backend:r}),i=YA({inputs:{x:s},backend:r}),o=sE({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return Y$({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}};function QA(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return W$({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,i=t[0].dtype;t.forEach((e=>{pa.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),pa.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=a$({inputs:t.map((e=>{const t=W$({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}var eF={kernelName:qn,backendName:"cpu",kernelFunc:QA},tF={kernelName:Kn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;JT(a,"pad");const o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),u=s.map((e=>e[0])),l=n.data.get(a.dataId).values,c=pa.sizeFromShape(a.shape),h=a.shape.length,d=pa.computeStrides(a.shape),p=pa.sizeFromShape(o),f=o.length,m=pa.computeStrides(o),g=pa.getTypedArrayFromDType(a.dtype,p);0!==i&&g.fill(i);for(let e=0;e<c;e++){const t=pa.indexToLoc(e,h,d).map(((e,t)=>e+u[t]));g[pa.locToIndex(t,f,m)]=l[e]}return{dataId:n.write(g,o,a.dtype),shape:o,dtype:a.dtype}}},nF=aE(((e,t)=>Math.pow(e,t))),rF=fE(Yn,nF),aF={kernelName:Yn,backendName:"cpu",kernelFunc:rF},sF={kernelName:Qn,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:i}=n,o=TC(r,a,i,s);return t.makeTensorInfo([o.length],s,o)}},iF=IE(tr,(e=>1/e)),oF={kernelName:tr,backendName:"cpu",kernelFunc:iF},uF={kernelName:ir,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;JT(a,"resizeBilinear");const u=pa.computeStrides(a.shape),[l,c]=o,[h,d,p,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(pa.sizeFromShape([h,l,c,f])),y=[s&&l>1?d-1:d,s&&c>1?p-1:p],b=[s&&l>1?l-1:l,s&&c>1?c-1:c];let x=0;const v=y[0]/b[0],w=y[1]/b[1];for(let e=0;e<h;e++)for(let t=0;t<l;t++){let n;n=i?v*(t+.5)-.5:v*t;const r=Math.max(0,Math.floor(n)),a=n-r,s=Math.min(d-1,Math.ceil(n)),o=e*u[0]+r*u[1],l=e*u[0]+s*u[1];for(let e=0;e<c;e++){let t;t=i?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),r=t-n,s=Math.min(p-1,Math.ceil(t)),c=o+n*u[2],h=l+n*u[2],d=o+s*u[2],y=l+s*u[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[h+e],s=t+(m[d+e]-t)*r,i=s+(n+(m[y+e]-n)*r-s)*a;g[x++]=i}}}return n.makeTensorInfo([h,l,c,f],"float32",g)}},lF={kernelName:or,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;JT([s,a],"resizeBilinearGrad");const o=pa.computeStrides(a.shape),[u,l,c,h]=a.shape,[,d,p]=s.shape,f=new Float32Array(u*l*c*h),m=[i&&d>1?l-1:l,i&&p>1?c-1:c],g=[i&&d>1?d-1:d,i&&p>1?p-1:p],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(s.dataId).values;let v=0;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<d;e++){const n=e*y,r=Math.floor(n),a=Math.min(Math.ceil(n),l-1),s=t+r*o[1],i=t+a*o[1],u=n-r,d=1-u;for(let e=0;e<p;e++){const t=e*b,n=Math.floor(t),r=Math.min(Math.ceil(t),c-1),a=t-n,l=1-a,p=s+n*o[2],m=s+r*o[2],g=i+n*o[2],y=i+r*o[2],w=d*l,k=d*a,I=u*l,S=u*a;for(let e=0;e<h;e++){const t=x[v++];f[p+e]+=t*w,f[m+e]+=t*k,f[g+e]+=t*I,f[y+e]+=t*S}}}}return n.makeTensorInfo([u,c,l,h],"float32",f)}},cF={kernelName:ar,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;JT(a,"resizeNearestNeighbor");const u=pa.computeStrides(a.shape),[l,c]=o,[h,d,p,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(h*l*c*f),y=[s&&l>1?d-1:d,s&&c>1?p-1:p],b=[s&&l>1?l-1:l,s&&c>1?c-1:c],x=y[0]/b[0],v=y[1]/b[1];let w=0;for(let e=0;e<h;e++){const t=e*u[0];for(let e=0;e<l;e++){const n=i?x*(e+.5):x*e;let r=Math.min(d-1,s?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));const a=t+r*u[1];for(let e=0;e<c;e++){const t=i?v*(e+.5):v*e;let n=Math.min(p-1,s?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const r=a+n*u[2];for(let e=0;e<f;e++){const t=m[r+e];g[w++]=t}}}}return n.makeTensorInfo([h,l,c,f],a.dtype,g)}},hF={kernelName:sr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;JT([s,a],"resizeNearestNeighborGrad");const o=pa.computeStrides(a.shape),u=pa.computeStrides(s.shape),[l,c,h,d]=a.shape,[,p,f]=s.shape,m=new Float32Array(l*c*h*d),g=n.data.get(s.dataId).values,y=[i&&p>1?c-1:c,i&&f>1?h-1:h],b=[i&&p>1?p-1:p,i&&f>1?f-1:f],x=y[0]/b[0],v=y[1]/b[1],w=1/x,k=1/v,I=2*Math.ceil(w)+2,S=2*Math.ceil(k)+2;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],r=Math.floor(e*w),a=Math.floor(r-I/2);for(let r=0;r<h;r++){const s=n+r*o[2],l=Math.floor(r*k),y=Math.floor(l-S/2);for(let n=0;n<d;n++){let o=0;for(let s=0;s<I;s++){const l=s+a;if(l<0||l>=p)continue;const d=t+l*u[1],m=l*x;if(e===Math.min(c-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<S;e++){const t=e+y;if(t<0||t>=f)continue;const a=d+t*u[2],s=t*v;r===Math.min(h-1,i?Math.round(s):Math.floor(s))&&(o+=g[a+n])}}m[s+n]=o}}}}return n.makeTensorInfo(a.shape,a.dtype,m)}},dF={kernelName:lr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r;JT(a,"reverse");const i=a.shape.length,o=pa.parseAxisParam(s,a.shape);if(0===i)return uE({inputs:{x:a},backend:n});const u=new Ua(a.shape,a.dtype),l=n.bufferSync(a);for(let e=0;e<u.size;e++){const t=u.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=a.shape[e]-1-n[e])),u.set(l.get(...n),...t)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},pF={kernelName:Yr,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{image:a}=t,{radians:s,fillValue:i,center:o}=n,u=r,l=pa.getTypedArrayFromDType(a.dtype,pa.sizeFromShape(a.shape)),[c,h,d,p]=a.shape,[f,m]=Qp.getImageCenter(o,h,d),g=Math.sin(s),y=Math.cos(s),b=u.data.get(a.dataId).values;for(let e=0;e<c;e++){const t=e*d*h*p;for(let e=0;e<h;e++){const n=e*(d*p);for(let r=0;r<d;r++){const a=r*p;for(let s=0;s<p;s++){const o=[c,e,r,s],u=o[2],x=o[1];let v=(u-f)*y-(x-m)*g,w=(u-f)*g+(x-m)*y;v=Math.round(v+f),w=Math.round(w+m);let k=i;"number"!=typeof i&&(k=3===s?255:i[s]),v>=0&&v<d&&w>=0&&w<h&&(k=b[t+w*(d*p)+v*p+s]),l[t+n+a+s]=k}}}}return{dataId:u.write(l,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},fF=IE(cr,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),mF={kernelName:cr,backendName:"cpu",kernelFunc:fF};function gF(e,t,n,r,a,s,i,o,u,l){const c=[r/a,a],h=e.values,d=t.values;if(0===r)return Ei(n,t.dtype);const p=Ei(c,t.dtype);p.values.fill(u);for(let e=0;e<s;e++){const s=[];let u=0;for(let t=0;t<i;t++){const n=h[e*i+t];s.push(n),u+=n*o[t]}if(u<0||u>=r/a)throw new Error(`Invalid indices: ${s} does not index into ${n}`);for(let n=0;n<a;n++)l?p.values[u*a+n]+=d[e*a+n]:p.values[u*a+n]=0===t.rank?d[0]:d[e*a+n]}return p}var yF={kernelName:dr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=Qp.calculateShapes(s,a,i),d=gF(n.bufferSync(a),n.bufferSync(s),i,h,l,u,o,c,0,!0);return n.makeTensorInfo(i,d.dtype,d.values)}},bF={kernelName:pr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t;JT([r,a,s],"select");const i=r.shape.length,o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,c=os(a.dtype,s.dtype),h=pa.makeZerosTypedArray(pa.sizeFromShape(a.shape),c);let d=0;const p=0===i||i>1||1===a.shape.length?1:pa.sizeFromShape(a.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<p;t++)1===o[e]?h[d++]=u[e]:h[d++]=l[e];return n.makeTensorInfo(a.shape,c,h)}},xF=Qp.SELU_SCALEALPHA,vF=Qp.SELU_SCALE,wF=IE(fr,(e=>e>=0?vF*e:xF*(Math.exp(e)-1))),kF={kernelName:fr,backendName:"cpu",kernelFunc:wF},IF=IE(br,(e=>e<0?-1:e>0?1:0)),SF={kernelName:br,backendName:"cpu",kernelFunc:IF},NF=IE(gr,(e=>Math.sin(e))),TF={kernelName:gr,backendName:"cpu",kernelFunc:NF},EF=IE(yr,(e=>Math.sinh(e))),CF={kernelName:yr,backendName:"cpu",kernelFunc:EF},_F=Math.log(1.1920928955078125e-7)+2,$F=IE(vr,(e=>{const t=e>-_F,n=e<_F,r=Math.exp(e);let a;return a=n?r:t?e:Math.log(1+r),a})),AF={kernelName:vr,backendName:"cpu",kernelFunc:$F},FF={kernelName:Ir,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;JT([a],"spaceToBatchND");const o=pa.sizeFromShape(s),u=[[0,0]];u.push(...i);for(let e=1+s.length;e<a.shape.length;++e)u.push([0,0]);const l=tF.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),c=Qp.getReshaped(l.shape,s,o,!1),h=Qp.getPermuted(c.length,s.length,!1),d=Qp.getReshapedPermuted(l.shape,s,o,!1),p=y_({inputs:{x:l},backend:n,attrs:{shape:c}}),f=kC({inputs:{x:p},backend:n,attrs:{perm:h}}),m=y_({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}},RF={kernelName:Tr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n        ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,c=n.data.get(i.dataId).values[0],[h,d,p,f,m]=OC(o,r.shape,r.dtype,u,a.dtype,l,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],a.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},DF={kernelName:Er,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.data.get(a.dataId).values),o=n.data.get(r.dataId).values,u=Array.from(n.data.get(s.dataId).values),[l,c,h]=LC(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}},MF={kernelName:Cr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,[l,c]=zC(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}},OF={kernelName:_r,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,[l,c]=zC(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}},LF={kernelName:$r,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:d}=Qp.calculateShapes(s,a,o),p=gF(n.bufferSync(a),n.bufferSync(s),o,d,c,l,u,h,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(o,p.dtype,p.values)}},zF={kernelName:Sr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=pa.parseAxisParam(i,a.shape)[0],u=Qp.prepareSplitSize(a,s,o),l=new Array(a.shape.length).fill(0),c=a.shape.slice();return u.map((e=>{const t=[...c];t[o]=e;const r=DC({inputs:{x:a},backend:n,attrs:{begin:l,size:t}});return l[o]+=e,r}))}},PF={kernelName:Fr,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{x:r}=t,a=n;JT(r,"square");const s=a.data.get(r.dataId).values,i=new Float32Array(s.length);for(let e=0;e<s.length;++e){const t=s[e];i[e]=t*t}return{dataId:a.write(i,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},BF=IE(Kr,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),WF={kernelName:Kr,backendName:"cpu",kernelFunc:BF},VF={kernelName:Rr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r;JT(a,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=yo.sliceInfo(a.shape,s,i,o,u,l,c,h,d);let w;if(m)w=y_({inputs:{x:a},backend:n,attrs:{shape:f}});else if(g||y){pa.assert(a.shape.length>=1,(()=>`Input must have rank at least 1, got: ${a.shape.length}`));const e=yo.computeOutShape(b,x,v),t=DC({inputs:{x:a},backend:n,attrs:{begin:b,size:e}});w=y_({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=HC(p,n.bufferSync(a),v,b);w=n.makeTensorInfo(f,e.dtype,e.values)}return w}},UF={kernelName:Dr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:h}=t,d=n.data.get(c.dataId).values,p=n.data.get(h.dataId).values,[f,m]=jC(d,p,a,s,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}},GF={kernelName:Mr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values[0],[l,c,h]=KC(o,u,a),d=c.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},HF={kernelName:Or,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=XC(n.data.get(s.dataId).values,a);return n.makeTensorInfo(s.shape,"int32",i)}},jF=IE(zr,(e=>Math.tan(e))),qF={kernelName:zr,backendName:"cpu",kernelFunc:jF},KF=IE(Pr,(e=>Math.tanh(e)));function XF(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return pa.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return pa.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return pa.clamp(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function YF(e,t,n,r,a,s,i,o,u,l,c){return 0<=o&&o<t&&0<=u&&u<n?e[i*r+o*a+u*s+l]:c}function ZF(e,t,n,r,a,s,i,o,u,l,c){return YF(e,t,n,r,a,s,i,Math.round(o),Math.round(u),l,c)}function JF(e,t,n,r,a,s,i,o,u,l,c){const h=Math.floor(o),d=Math.floor(u),p=h+1,f=d+1;return(p-o)*((f-u)*YF(e,t,n,r,a,s,i,h,d,l,c)+(u-d)*YF(e,t,n,r,a,s,i,h,f,l,c))+(o-h)*((f-u)*YF(e,t,n,r,a,s,i,p,d,l,c)+(u-d)*YF(e,t,n,r,a,s,i,p,f,l,c))}var QF=[w_,rE,I_,N_,xE,T_,E_,C_,__,$_,F_,D_,O_,P_,W_,H_,j_,q_,K_,v_,X_,Y_,Z_,J_,pE,EE,e$,iE,t$,s$,o$,u$,l$,c$,h$,d$,f$,g$,y$,b$,x$,v$,k$,I$,S$,N$,T$,E$,C$,A$,i_,F$,AE,B$,DE,V$,LE,X$,Z$,J$,BE,tA,nA,rA,aA,sA,HE,KE,lE,iA,r$,uA,cA,dA,u_,ZE,eC,pA,aC,mA,bA,vA,IA,SA,NA,EA,uC,CA,_A,$A,AA,FA,RA,DA,hC,MA,zA,VA,mC,yC,GA,jA,KA,vC,XA,JA,eF,tF,aF,h_,NC,sF,hE,H$,oF,p_,m_,b_,uF,lF,cF,hF,dF,pF,mF,_C,yF,bF,kF,FC,SF,TF,CF,MC,WA,AF,FF,RF,DF,MF,OF,LF,zF,WC,PF,GC,WF,VF,UF,GF,HF,QC,$$,qF,{kernelName:Pr,backendName:"cpu",kernelFunc:KF},{kernelName:Br,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;JT(a,"tile");const i=e_(n.bufferSync(a),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},{kernelName:Wr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r;JT(a,"topk");const o=n.data.get(a.dataId).values,[u,l]=r_(o,a.shape,a.dtype,s,i);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}},{kernelName:Vr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=n,[c,h,d,p]=a.shape,[f,m]=null!=l?l:[h,d],g=[c,f,m,p],y=pa.computeStrides(a.shape),b=y[0],x=y[1],v=y[2],w=pa.getTypedArrayFromDType(a.dtype,pa.sizeFromShape(g));w.fill(u);const k=r.data.get(a.dataId).values,I=r.data.get(s.dataId).values;for(let e=0;e<c;++e){const t=1===s.shape[0]?I:I.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let r=0;r<m;++r)for(let a=0;a<p;++a){let s;const l=t[6]*r+t[7]*n+1;if(0===l)continue;const c=(t[0]*r+t[1]*n+t[2])/l,p=(t[3]*r+t[4]*n+t[5])/l,f=XF(c,d,o),m=XF(p,h,o);switch(i){case"nearest":s=ZF(k,h,d,b,x,v,e,m,f,a,u);break;case"bilinear":s=JF(k,h,d,b,x,v,e,m,f,a,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}w[e*b+n*x+r*v+a]=s}return r.makeTensorInfo(g,a.dtype,w)}return{dataId:r.write(w,g,a.dtype),shape:a.shape,dtype:a.dtype}}},IC,{kernelName:Gr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;JT(s,"unique");const i=r.data.get(s.dataId).values,{outputValues:o,outputShape:u,indices:l}=a_(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}},{kernelName:Hr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a.shape.length,o=a.shape[s],u=new Array(i-1);let l=0;for(let e=0;e<i;e++)e!==s&&(u[l++]=a.shape[e]);const c=new Array(i).fill(0),h=a.shape.slice();h[s]=1;const d=new Array(o);for(let e=0;e<d.length;e++){c[s]=e;const t=DC({inputs:{x:a},backend:n,attrs:{begin:c,size:h}});d[e]=y_({inputs:{x:t},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(t)}return d}},{kernelName:jr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r;JT(a,"unsortedSegmentSum");const o=[],u=[],l=a.shape.length-s.shape.length;let c=s;for(let e=0;e<l;++e){const t=W$({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,u.push(t)}for(let e=0;e<i;++e){const t=pa.createScalarValue(e,"int32"),r=n.makeTensorInfo([],"int32",t),s=$E({inputs:{a:r,b:c},backend:n}),i=dE({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),l=fC({inputs:{a:i,b:a},backend:n}),h=_$({inputs:{x:l},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),u.push(r),u.push(s),u.push(i),u.push(l),u.push(h)}const h=QA({inputs:o,backend:n,attrs:{axis:0}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},ZA];for(const e of QF)oa(e);var eR={};p(eR,{assertNotComplex:()=>lD,bindCanvasToFramebuffer:()=>PR,bindColorTextureToFramebuffer:()=>BR,bindTextureToProgramUniformSampler:()=>zR,bindTextureUnit:()=>DR,bindVertexBufferToProgramAttribute:()=>RR,callAndCheck:()=>mR,canBeRepresented:()=>gR,createFragmentShader:()=>vR,createFramebuffer:()=>FR,createProgram:()=>SR,createStaticIndexBuffer:()=>CR,createStaticVertexBuffer:()=>ER,createTexture:()=>$R,createVertexShader:()=>xR,getBatchDim:()=>jR,getExtensionOrThrow:()=>bR,getFramebufferErrorMessage:()=>UR,getMaxTexturesInShader:()=>tD,getNumChannels:()=>_R,getProgramUniformLocation:()=>LR,getProgramUniformLocationOrThrow:()=>OR,getRowsCols:()=>qR,getShapeAs3D:()=>KR,getTextureShapeFromLogicalShape:()=>XR,getWebGLDisjointQueryTimerVersion:()=>nD,getWebGLErrorMessage:()=>yR,getWebGLMaxTextureSize:()=>JR,hasExtension:()=>rD,isCapableOfRenderingToFloatTexture:()=>sD,isDownloadFloatTextureEnabled:()=>iD,isReshapeFree:()=>ZR,isWebGLFenceEnabled:()=>uD,isWebGLVersionEnabled:()=>aD,linkProgram:()=>NR,resetMaxTextureSize:()=>QR,resetMaxTexturesInShader:()=>eD,unbindColorTextureFromFramebuffer:()=>WR,unbindTextureUnit:()=>MR,validateFramebuffer:()=>VR,validateProgram:()=>TR,validateTextureSize:()=>AR});var tR,nR,rR,aR,sR,iR,oR={},uR={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function lR(e,t){oR[e]=t}function cR(e,t){if(!(e in oR)){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e):t;return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete oR[e]}),!1),1===e?n.getContext("webgl",uR)||n.getContext("experimental-webgl",uR):n.getContext("webgl2",uR)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;oR[e]=n}const n=oR[e];return null==n||n.isContextLost()?(delete oR[e],cR(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),oR[e])}function hR(e,t){return[t,e]}function dR(e){const t=pa.sizeFromShape(e),n=Math.ceil(t/4);return pa.sizeToSquarishShape(n)}function pR(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function fR(e,t){const n=e;let r,a,s,i,o,u,l,c,h,d;return 2===Ue().getNumber("WEBGL_VERSION")?(r=n.R32F,a=n.R16F,s=n.RGBA16F,i=n.RGBA32F,o=n.RED,l=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT,u=n.RGBA8):(r=e.RGBA,a=e.RGBA,s=e.RGBA,i=n.RGBA,o=e.RGBA,l=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT,u=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function mR(e,t){const n=t();return Ue().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+yR(e,t))}(e),n}function gR(e){return!!(Ue().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function yR(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function bR(e,t){return GR(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function xR(e,t){const n=GR(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(mR(e,(()=>e.shaderSource(n,t))),mR(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function vR(e,t){const n=GR(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(mR(e,(()=>e.shaderSource(n,t))),mR(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=IR.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],a=e.split("\n"),s=a.length.toString().length+2,i=a.map(((e,t)=>pa.rightPad((t+1).toString(),s)+e));let o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);const u=i.slice(0,r-1),l=i.slice(r-1,r),c=i.slice(r);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${pa.rightPad(l[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(nR=tR||(tR={}))[nR.DENSE=0]="DENSE",nR[nR.SHARED_BATCH=1]="SHARED_BATCH",(aR=rR||(rR={}))[aR.RENDER=0]="RENDER",aR[aR.UPLOAD=1]="UPLOAD",aR[aR.PIXELS=2]="PIXELS",aR[aR.DOWNLOAD=3]="DOWNLOAD",(iR=sR||(sR={}))[iR.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",iR[iR.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",iR[iR.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",iR[iR.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",iR[iR.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16";var wR,kR,IR=/ERROR: [0-9]+:([0-9]+):/g;function SR(e){return GR(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}function NR(e,t){if(mR(e,(()=>e.linkProgram(t))),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function TR(e,t){if(mR(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function ER(e,t){const n=GR(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return mR(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),mR(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function CR(e,t){const n=GR(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return mR(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),mR(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function _R(){return 2===Ue().getNumber("WEBGL_VERSION")?1:4}function $R(e){return GR(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}function AR(e,t){const n=Ue().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}function FR(e){return GR(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}function RR(e,t,n,r,a,s,i){const o=e.getAttribLocation(t,n);return-1!==o&&(mR(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),mR(e,(()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i))),mR(e,(()=>e.enableVertexAttribArray(o))),!0)}function DR(e,t,n){HR(e,n),mR(e,(()=>e.activeTexture(e.TEXTURE0+n))),mR(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}function MR(e,t){HR(e,t),mR(e,(()=>e.activeTexture(e.TEXTURE0+t))),mR(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function OR(e,t,n){return GR(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}function LR(e,t,n){return e.getUniformLocation(t,n)}function zR(e,t,n,r){mR(e,(()=>DR(e,t,r))),mR(e,(()=>e.uniform1i(n,r)))}function PR(e){mR(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),mR(e,(()=>e.viewport(0,0,e.canvas.width,e.canvas.height))),mR(e,(()=>e.scissor(0,0,e.canvas.width,e.canvas.height)))}function BR(e,t,n){mR(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),mR(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function WR(e,t){mR(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),mR(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function VR(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+UR(e,t))}function UR(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function GR(e,t,n){const r=mR(e,(()=>t()));if(null==r)throw new Error(n);return r}function HR(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)}function jR(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return pa.sizeFromShape(e.slice(0,e.length-t))}function qR(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function KR(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[jR(e),...qR(e)]),t}function XR(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=Ue().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?pa.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=pa.squeezeShape(e);e=t.newShape}let r=pa.sizeFromShape(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=jR(e);let n=2,a=2;return e.length&&([n,a]=qR(e)),r=t*(n/2)*(a/2),pa.sizeToSquarishShape(r).map((e=>2*e))}return pa.sizeToSquarishShape(r)}function YR(e){return e%2==0}function ZR(e,t){if(e=e.slice(-2),t=t.slice(-2),pa.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(YR(n)&&YR(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&YR(e[0])&&YR(t[0])}function JR(e){if(null==wR){const t=cR(e);wR=t.getParameter(t.MAX_TEXTURE_SIZE)}return wR}function QR(){wR=null}function eD(){kR=null}function tD(e){if(null==kR){const t=cR(e);kR=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,kR)}function nD(e){if(0===e)return 0;let t;const n=cR(e);return t=rD(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:rD(n,"EXT_disjoint_timer_query")?1:0,t}function rD(e,t){return null!=e.getExtension(t)}function aD(e){try{if(null!=cR(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function sD(e){if(0===e)return!1;const t=cR(e);if(1===e){if(!rD(t,"OES_texture_float"))return!1}else if(!rD(t,"EXT_color_buffer_float"))return!1;return oD(t)}function iD(e){if(0===e)return!1;const t=cR(e);if(1!==e){if(rD(t,"EXT_color_buffer_float"))return oD(t);const e="EXT_color_buffer_half_float";if(rD(t,e)){const n=t.getExtension(e);return function(e,t){const n=fR(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(a),s}(t,n)}return!1}return!!rD(t,"OES_texture_float")&&(!!rD(t,"WEBGL_color_buffer_float")&&oD(t))}function oD(e){const t=fR(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function uD(e){return 2===e&&null!=cR(e).fenceSync}function lD(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&pa.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}var cD=Ue();function hD(){let e,t,n,r,a,s,i,o,u,l;return 2===Ue().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",s="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",u="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:u,defineRound:l}}function dD(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const r=pa.computeStrides(t);return r.map(((t,a)=>`int ${e[a]} = ${n} / ${t}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`};`)).join("")}function pD(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const r=pa.computeStrides(t);return r.map(((t,a)=>`int ${e[a]} = ${n} / outShapeStrides[${a}]; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`};`)).join("")}function fD(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),a=new Array(n-1);a[n-2]=r[n-1];for(let e=n-3;e>=0;--e)a[e]=`(${a[e+1]} * ${r[e+1]})`;return a}function mD(e){const t=pa.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}cD.registerFlag("HAS_WEBGL",(()=>cD.getNumber("WEBGL_VERSION")>0)),cD.registerFlag("WEBGL_VERSION",(()=>aD(2)?2:aD(1)?1:0)),cD.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),cD.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===cD.get("WEBGL_VERSION"))),cD.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),cD.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),cD.registerFlag("WEBGL_PACK",(()=>cD.getBool("HAS_WEBGL"))),cD.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>cD.getBool("WEBGL_PACK"))),cD.registerFlag("WEBGL_PACK_CLIP",(()=>cD.getBool("WEBGL_PACK"))),cD.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>cD.getBool("WEBGL_PACK"))),cD.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>cD.getBool("WEBGL_PACK"))),cD.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>cD.getBool("WEBGL_PACK"))),cD.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>cD.getBool("WEBGL_PACK"))),cD.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>cD.getBool("WEBGL_PACK"))),cD.registerFlag("WEBGL_PACK_REDUCE",(()=>cD.getBool("WEBGL_PACK"))),cD.registerFlag("WEBGL_LAZILY_UNPACK",(()=>cD.getBool("WEBGL_PACK"))),cD.registerFlag("WEBGL_CONV_IM2COL",(()=>cD.getBool("WEBGL_PACK"))),cD.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>JR(cD.getNumber("WEBGL_VERSION")))),cD.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>tD(cD.getNumber("WEBGL_VERSION")))),cD.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=cD.getNumber("WEBGL_VERSION");return 0===e?0:nD(e)})),cD.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>cD.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!ws.isMobile())),cD.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>sD(cD.getNumber("WEBGL_VERSION")))),cD.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!cD.getBool("WEBGL_FORCE_F16_TEXTURES")&&cD.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),cD.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>iD(cD.getNumber("WEBGL_VERSION")))),cD.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>uD(cD.getNumber("WEBGL_VERSION")))),cD.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>cD.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),cD.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),cD.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>ws.isMobile()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),cD.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),cD.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),cD.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),cD.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128));var gD="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:yD}=Qp;function bD(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return ND(e,t);case 1:return TD(e,t);case 2:return ED(e,t);case 3:return CD(e,t);case 4:return _D(e,t);case 5:return $D(e);case 6:return AD(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function xD(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${hD().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=hD();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=s[0],o=s[1],u=hD();if(null!=s&&pa.arraysEqual(n,s))return t?`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${a}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `;const l=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${a}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${l[0]}, ${l[1]}, row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){const r=[1,2],s=["b","row","col"];return`\n        ${xD(LD(e,n.slice(1)),t)}\n        vec4 ${a}(int b, int row, int col) {\n          return ${a}(${zD(s,r)});\n        }\n      `}const o=hD();if(t)return`\n    vec4 ${a}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;const u=i[0],l=i[1],c=Math.ceil(n[2]/2);return`\n    vec4 ${a}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${u}, ${l}, ${c*Math.ceil(n[1]/2)}, ${c}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=hD();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);\n    }\n  `;const s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=u[0],c=u[1],h=Math.ceil(s[i-1]/2);let d=h*Math.ceil(s[i-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let e=2;e<i-1;e++)p=`int b${e}, `+p,d*=s[i-e-1],f=`b${e} * ${d} + `+f;return`\n    vec4 ${r}(${p}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${l});\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}var vD="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",wD="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",kD="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",ID="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function SD(e){return`offset${e}`}function ND(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[a,s]=e.shapeInfo.texShape;if(1===a&&1===s)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=SD(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,u]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${u}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}function TD(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${FD(e)}\n      }\n    `;const a=e.shapeInfo.texShape,s=a[0],i=a[1];if(1===i&&1===s)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=SD(n);return 1===i?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===s?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}function ED(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape;if(null!=s&&pa.arraysEqual(n,s)){if(t)return`\n      float ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=s[0];return`\n    float ${a}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:i,keptDims:o}=pa.squeezeShape(n),u=i;if(u.length<n.length){const n=["row","col"];return`\n      ${bD(LD(e,u),t)}\n      float ${a}(int row, int col) {\n        return ${a}(${zD(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${FD(e)}\n      }\n    `;const l=s[0],c=s[1],h=SD(r);return 1===c?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===l?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:t?`\n      float ${a}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${a}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${l}, ${c}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}function CD(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[1]*n[2],i=n[2],{newShape:o,keptDims:u}=pa.squeezeShape(n),l=o;if(l.length<n.length){const n=["row","col","depth"];return`\n        ${bD(LD(e,l),t)}\n        float ${a}(int row, int col, int depth) {\n          return ${a}(${zD(n,u)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${i}, 1)));\n        ${FD(e)}\n      }\n    `;const c=e.shapeInfo.texShape,h=c[0],d=c[1],p=e.shapeInfo.flatOffset;if(d===s&&null==p)return t?`\n      float ${a}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${a}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${h}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(d===i&&null==p)return t?`\n      float ${a}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const f=SD(r);return t?`\n    float ${a}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * ${s} + col * ${i} + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${a}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}function _D(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[3],i=n[2]*s,o=n[1]*i,{newShape:u,keptDims:l}=pa.squeezeShape(n);if(u.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${bD(LD(e,u),t)}\n      float ${a}(int row, int col, int depth, int depth2) {\n        return ${a}(${zD(n,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${s}, 1)));\n        ${FD(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(p===o&&null==c)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(p===s&&null==c)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const y=SD(r);return t?`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${p}, index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `}function $D(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],s=t[3]*a,i=t[2]*s,o=t[1]*i,{newShape:u,keptDims:l}=pa.squeezeShape(t);if(u.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${bD(LD(e,u))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${zD(t,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${s}, ${a})) +\n          depth3;\n        ${FD(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];return p===o&&null==c?`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:p===a&&null==c?`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${s} +\n          depth2 * ${a} + depth3 + ${SD(n)};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}function AD(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:s}=pa.squeezeShape(t);if(a.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${bD(LD(e,a))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${zD(t,s)});\n      }\n    `}const i=t[5],o=t[4]*i,u=t[3]*o,l=t[2]*u,c=t[1]*l;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${l}, ${u}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${FD(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];return f===c&&null==h?`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${u}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:f===i&&null==h?`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${l} + depth * ${u} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${SD(n)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}function FD(e){const t=e.name,n=pa.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function RD(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=yD(e.shapeInfo.logicalShape,t.logicalShape),u=MD(i),l=i-s;let c;const h=["x","y","z","w","u","v"];c=0===s?"":i<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+l]} = 0;`)).join("\n");let d="";d=i<2&&s>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+l]}`)).join(", ");let p="return outputValue;";const f=1===pa.sizeFromShape(e.shapeInfo.logicalShape),m=1===pa.sizeFromShape(t.logicalShape);if(1!==s||f||m){if(f&&!m)p=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=s-2,t=s-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?p="return vec4(outputValue.x);":o.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${a}() {\n      ${u} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${d});\n      ${p}\n    }\n  `}function DD(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===u&&null==e.shapeInfo.flatOffset&&pa.arraysEqual(i,s))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=MD(u),c=yD(e.shapeInfo.logicalShape,t.logicalShape),h=u-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":u<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${p[e+h]} = 0;`)).join("\n");let f="";return f=u<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+h]}`)).join(", "),`\n    float ${a}() {\n      ${l} coords = getOutputCoords();\n      ${d}\n      return get${r}(${f});\n    }\n  `}function MD(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function OD(e,t,n){const{newShape:r,keptDims:a}=pa.squeezeShape(t),s=t.length,i=e&&3===s&&1===t[0],o=i?t.slice(1):r,u=!e&&s>1&&!pa.arraysEqual(t,n)&&r.length<s||i;return{useSqueezeShape:u,uniformShape:u?o:t,keptDims:a}}function LD(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function zD(e,t){return t.map((t=>e[t])).join(", ")}function PD(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,a=t[n],s=a.shape;if(!pa.arraysEqual(r,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${s} must match`);if(e.isUniform&&a.isUniform)return;const i=e.texShape,o=a.isUniform?null:a.texData.texShape;if(!pa.arraysEqual(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function BD(e){return Ue().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var WD={};function VD(e){const t=hD();return xR(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function UD(e){return ER(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function GD(e){return CR(e,new Uint16Array([0,1,2,2,1,3]))}function HD(e,t,n,r,a,s){AR(t,n);const i=$R(e),o=e.TEXTURE_2D;return mR(e,(()=>e.bindTexture(o,i))),mR(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),mR(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),mR(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),mR(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===Ue().getNumber("WEBGL_VERSION")?mR(e,(()=>e.texImage2D(o,0,r,t,n,0,a,s,null))):mR(e,(()=>e.texStorage2D(o,1,r,t,n))),mR(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function jD(e){return e.internalFormatFloat}function qD(e,t,n,r){const[a,s]=hR(t,n);return HD(e,a,s,jD(r),r.textureFormatFloat,e.FLOAT)}function KD(e){return e.internalFormatHalfFloat}function XD(e,t,n,r){const[a,s]=hR(t,n);return HD(e,a,s,KD(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function YD(e){return e.downloadTextureFormat}function ZD(e,t,n,r){const[a,s]=hR(t,n);return HD(e,a,s,YD(r),e.RGBA,e.UNSIGNED_BYTE)}function JD(e){return e.internalFormatPackedFloat}function QD(e,t,n,r){const[a,s]=pR(t,n);return HD(e,a,s,JD(r),e.RGBA,e.FLOAT)}function eM(e){return e.internalFormatPackedHalfFloat}function tM(e,t,n,r){const[a,s]=pR(t,n);return HD(e,a,s,eM(r),e.RGBA,r.textureTypeHalfFloat)}function nM(e,t,n){return mR(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),RR(e,t,"clipSpacePos",n,3,20,0)&&RR(e,t,"uv",n,2,20,12)}function rM(e,t,n,r,a,s){let i,o,u;mR(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),a instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,u=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,u=s.internalFormatPackedFloat),i.set(a),2===Ue().getNumber("WEBGL_VERSION")?mR(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,i))):mR(e,(()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,o,i))),mR(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function aM(e,t,n){mR(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===Ue().getNumber("WEBGL_VERSION")?mR(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):mR(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===Ue().getNumber("WEBGL_VERSION")?mR(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):mR(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),mR(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function sM(e,t,n,r){const a=e.createBuffer();mR(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));const s=16*t*n;return mR(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),mR(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),mR(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}function iM(e,t,n){const r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}function oM(e,t,n,r){const[a,s]=hR(t,n),i=new Uint8Array(t*n*4);return mR(e,(()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}function uM(e,t,n,r,a,s,i,o){const u=e,l=new Float32Array(function(e,t){const[n,r]=pR(e,t);return n*r*4}(s,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}function lM(e,t,n){const r=new Float32Array(t*n*4);return mR(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}p(WD,{bindVertexProgramAttributeStreams:()=>nM,createBufferFromOutputTexture:()=>sM,createFloat16MatrixTexture:()=>XD,createFloat16PackedMatrixTexture:()=>tM,createFloat32MatrixTexture:()=>qD,createIndexBuffer:()=>GD,createPackedMatrixTexture:()=>QD,createUnsignedBytesMatrixTexture:()=>ZD,createVertexBuffer:()=>UD,createVertexShader:()=>VD,downloadByteEncodedFloatMatrixFromOutputTexture:()=>oM,downloadFloat32MatrixFromBuffer:()=>iM,downloadMatrixFromPackedOutputTexture:()=>lM,downloadPackedMatrixFromBuffer:()=>uM,getInternalFormatForFloat16MatrixTexture:()=>KD,getInternalFormatForFloat16PackedMatrixTexture:()=>eM,getInternalFormatForFloat32MatrixTexture:()=>jD,getInternalFormatForPackedMatrixTexture:()=>JD,getInternalFormatForUnsignedBytesMatrixTexture:()=>YD,uploadDenseMatrixToTexture:()=>rM,uploadPixelDataToTexture:()=>aM});var cM=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=Ue().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,lR(t,e)):this.gl=cR(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===Ue().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=bR(this.gl,e),rD(this.gl,t))this.textureHalfFloatExtension=bR(this.gl,t);else if(Ue().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),rD(this.gl,r))this.colorBufferHalfFloatExtension=bR(this.gl,r);else if(Ue().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",rD(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!rD(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=UD(this.gl),this.indexBuffer=GD(this.gl),this.framebuffer=FR(this.gl),this.textureConfig=fR(this.gl,this.textureHalfFloatExtension)}get debug(){return Ue().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;mR(e,(()=>e.finish())),mR(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),mR(e,(()=>e.deleteFramebuffer(this.framebuffer))),mR(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),mR(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),mR(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),qD(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),XD(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),ZD(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),aM(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),rM(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),tM(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),QD(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(WR(this.gl,this.framebuffer),this.outputTexture=null),mR(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>oM(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return uM(this.gl,e,0,0,0,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return iM(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=sM(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Ue().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else Ue().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Ue().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>lM(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=VD(t));const n=SR(t);return mR(t,(()=>t.attachShader(n,this.vertexShader))),mR(t,(()=>t.attachShader(n,e))),NR(t,n),this.debug&&TR(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=nM(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&mR(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&TR(this.gl,this.program),mR(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return this.throwIfDisposed(),n?OR(this.gl,e,t):LR(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),mR(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),zR(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,a]=pR(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&TR(this.gl,this.program),VR(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),mR(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),mR(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=bR(this.gl,2===Ue().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Ue().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Ue().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await pa.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,Ue().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,Ue().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||pa.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),BR(this.gl,e,this.framebuffer),this.debug&&VR(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(BR(this.gl,this.outputTexture,this.framebuffer),this.debug&&VR(this.gl)):WR(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;BR(r,e,this.framebuffer),this.debug&&VR(r),this.outputTexture=e,mR(r,(()=>r.viewport(0,0,t,n))),mR(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),mR(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}},{addImpl:hM,bincountImpl:dM,bincountReduceImpl:pM,ceilImpl:fM,concatImpl:mM,equalImpl:gM,expImpl:yM,expm1Impl:bM,floorImpl:xM,gatherNdImpl:vM,gatherV2Impl:wM,greaterImpl:kM,greaterEqualImpl:IM,lessImpl:SM,lessEqualImpl:NM,linSpaceImpl:TM,logImpl:EM,maxImpl:CM,maximumImpl:_M,minimumImpl:$M,multiplyImpl:AM,negImpl:FM,notEqualImpl:RM,prodImpl:DM,rangeImpl:MM,rsqrtImpl:OM,sigmoidImpl:LM,simpleAbsImpl:zM,sliceImpl:PM,sparseFillEmptyRowsImpl:BM,sparseReshapeImpl:WM,sparseSegmentReductionImpl:VM,sqrtImpl:UM,stridedSliceImpl:GM,stringNGramsImpl:HM,stringSplitImpl:jM,stringToHashBucketFastImpl:qM,subImpl:KM,tileImpl:XM,topKImpl:YM,transposeImpl:ZM,uniqueImpl:JM}=tE;function QM(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function eO(e,t){return 1===t?[e]:QM(e,t)}var tO=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=BD(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r,a;this.userCode=`\n      ${r=t,a=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${a?function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const r=fD(e.map(((e,t)=>t)),t);return r.map(((t,a)=>`int ${e[a]} = ${n} / ${r[a]}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${r[a]}`:`index -= ${e[a]} * ${r[a]}`};`)).join("")}(["r","c","d"],"inputShape"):dD(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":mD(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}};function nO(e,t,n,r,a){const s=function(e,t){switch(e){case sR.PACKED_2X2_FLOAT32:return JD(t);case sR.PACKED_2X2_FLOAT16:return eM(t);case sR.UNPACKED_FLOAT32:return jD(t);case sR.UNPACKED_FLOAT16:return KD(t);case sR.PACKED_4X1_UNSIGNED_BYTE:return YD(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let i;if(a){const[t,n]=pR(e[0],e[1]);i=t*n}else{const[t,n]=hR(e[0],e[1]);i=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,s);return i*o}function rO(e,t){if(e===rR.UPLOAD)return sR.PACKED_2X2_FLOAT32;if(e===rR.RENDER||null==e)return function(e){return Ue().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?sR.PACKED_2X2_FLOAT32:sR.UNPACKED_FLOAT32:e?sR.PACKED_2X2_FLOAT16:sR.UNPACKED_FLOAT16}(t);if(e===rR.DOWNLOAD||e===rR.PIXELS)return sR.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function aO(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var sO=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=BD(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},iO="if (isnan(x)) return x;",oO="return x;",uO="return abs(x);",lO="return (x >= 0.0) ? x : (exp(x) - 1.0);",cO=iO+"\n  return (x < 0.0) ? 0.0 : x;\n",hO=iO+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",dO="return x;",pO="return 1.0 / (1.0 + exp(-1.0 * x));",fO="return x;",mO="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",gO="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",yO="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",bO="return 1.0 / (1.0 + exp(-1.0 * x));",xO=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=BD(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},vO=Qf.whereImpl,wO={},kO=Ue().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),IO=class extends G{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Ue().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof cM)t=e;else{const n=cR(Ue().getNumber("WEBGL_VERSION"),e);t=new cM(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=cR(Ue().getNumber("WEBGL_VERSION"));t=new cM(e),this.binaryCache=((n=Ue().getNumber("WEBGL_VERSION"))in wO||(wO[n]={}),wO[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=rO(t,n),a=aO(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const s=nO(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[a].shift();return this.usedTextures[a].push(e),e}let i;return r===sR.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===sR.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===sR.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===sR.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===sR.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const a=rO(n,r),s=aO(t,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);const i=nO(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=Ue().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const u=this.usedTextures[s],l=u.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(l,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}(this.gpgpu),this.numMBBeforeWarning=null==Ue().global.screen?1024:Ue().global.screen.height*Ue().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new U(this,ru())}nextDataId(){return IO.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((Ue().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Ue().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:rR.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,r,a){if(Ue().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:rR.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:s,shape:i,isPacked:o}=t;if(null!=s){let t;t=o?new xO(i,dO):new sO(i,dO);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const u=null!=this.activeTimers;let l,c;if(u&&(l=pa.now()),"complex64"===r){const e=this.readSync(a.real.dataId),t=this.readSync(a.imag.dataId);c=Qp.mergeRealAndImagArrays(e,t)}else c=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=pa.now()-l),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:s,complexTensorInfos:i,isPacked:o}=t;if(null!=a){let t;t=o?new xO(r,dO):new sO(r,dO);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:s}],s),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if(Ue().getBool("DEBUG")&&!Ue().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Ue().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,l,c=null;if("complex64"!==s&&Ue().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(t.texture.texture,...dR(r))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),t=e[0],n=e[1];l=Qp.mergeRealAndImagArrays(t,n)}else if(null==c)l=this.getValuesFromTexture(e);else{const e=pa.sizeFromShape(r);l=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=u&&this.disposeIntermediateTensorInfo(u),null!=c){const e=this.gpgpu.gl;mR(e,(()=>e.deleteBuffer(c)))}const h=this.convertAndCacheOnCPU(e,l),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&ru().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=this.texData.get(e),{values:r,shape:a,slice:s,dtype:i,isPacked:o,texture:u}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=s){let n;n=o?new xO(a,dO):new sO(a,dO);const r=this.runWebGLProgram(n,[{dataId:e,shape:a,dtype:i}],i),s=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),s}if(null==u)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(e,t.customTexShape),c=ru().makeTensorFromDataId(l.dataId,l.shape,l.dtype),h=this.texData.get(l.dataId);return Object.assign({tensorRef:c},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>pa.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ei(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!gR(n)){if(Ue().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=pa.sizeFromShape(t);if(Ue().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...dR(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}const s=Ue().getBool("WEBGL_PACK")&&!0===r,i=s?KR(t):t,o=s?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=rR.DOWNLOAD;const t=hD();this.outputShape=e,this.userCode=`\n      ${gD}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}(i):new class{constructor(e){this.variableNames=["A"],this.outTexUsage=rR.DOWNLOAD;const t=hD();this.outputShape=e,this.userCode=`\n      ${gD}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}(i),u=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),l=this.texData.get(u.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(u),c}timerAvailable(){return Ue().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const a=pa.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=pa.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Ue().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(a);i.kernelMs=pa.sum(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:s[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Ue().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:pa.now(),endMs:null}}endTimer(e){return Ue().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=pa.now(),e)}async getQueryTime(e){if(Ue().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:kO;return Ue().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&pa.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){Qp.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return vO(e.shape,t)}packedUnaryOp(e,t,n){const r=new xO(e.shape,t),a=this.compileAndRun(r,[e],n);return ru().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=zM(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Ue().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,uO,e.dtype);const t=new sO(e.shape,uO),n=this.compileAndRun(t,[e]);return ru().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&pa.isString(n[0])){const a=n.map((e=>pa.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:r}=this.makeTensorInfo(e,t,n);return ru().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=BD(this.outputShape.length);const t=e.length,n=eO("rc",t),r=MD(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new class{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=BD(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=eO("rc",this.rank),t=MD(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),a=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${a}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let a=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)a=`${e[e.length-1-t]},`+a;t.push(a)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[jR(e.shape),...qR(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[jR(t),...qR(t)],s=new tO(a,n),i=[n],o=this.runWebGLProgram(s,[r],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:r,shape:a,dtype:s}=n;if(null!=t){const e=pa.sizeFromShape(a),n=t[0]*t[1]*4;pa.assert(e<=n,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const i=KR(a);let o;o=r?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=tR.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=hD();this.outputShape=e,this.enableShapeUniforms=BD(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?pD(["r","c","d"],e):dD(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}(i):new class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=tR.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=hD();this.outputShape=e,this.enableShapeUniforms=BD(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?pD(["r","c","d"],e):dD(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}(i);const u=[null!=t?t:dR(i)];return{dtype:s,shape:a,dataId:this.runWebGLProgram(o,[{shape:i,dtype:s,dataId:e}],s,u,!0,t).dataId}}runWebGLProgram(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5?arguments[5]:void 0;const i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===tR.DENSE){const t=null!=s?s:dR(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===pa.sizeFromShape(i.shape))return o.values=pa.getTypedArrayFromDType(i.dtype,0),i;const u=[],l=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&pa.sizeFromShape(t.shape)<=Ue().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),u.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!ZR(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),u.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const c={shape:i.shape,texData:o,isUniform:!1},h=function(e,t,n){let r="";t.concat(n).forEach((t=>{const a=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const s=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:u}=OD(e.packedInputs,t.shape,s);let l="",c="",h="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];l=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=pa.computeStrides(o);h=`${e[0]===s[1]}_${e[e.length-1]===s[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const d=t.shape.length,p=2===o.length&&pa.arraysEqual(t.shape,s),f=1===pa.sizeFromShape(t.shape),m=Qp.getBroadcastDims(t.shape,n.shape),g=!e.packedInputs&&d===n.shape.length&&pa.arraysEqual(s,n.texData.texShape),y=e.packedInputs||o.length>2?"":`${s[0]>1}_${s[1]>1}`;r+=`${d}_${g}_${i?u:""}_${o.length}_${f}_${m}_${p}_${l}_${c}_${h}_${y}_${a}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${a}`}}));const a=e.userCode;let s=e.constructor.name;return s+="_"+r+"_"+a+`${Ue().getNumber("WEBGL_VERSION")}`,s}(e,l,c),d=this.getAndSaveBinary(h,(()=>function(e,t,n,r){const a=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),s=a.map((e=>e.shapeInfo)),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=function(e,t,n){const r=[];if(e.forEach((e=>{const t=pa.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=OD(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const a=r.join("\n"),s=e.map((e=>function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3?arguments[3]:void 0,a="";a+=n?xD(e,r):bD(e,r);const s=e.shapeInfo.logicalShape,i=t.logicalShape;return s.length<=i.length&&(a+=n?RD(e,t):DD(e,t)),a}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),i=t.texShape,o=hD(),u=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let l,c,h=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${vD}\n    ${wD}\n    ${kD}\n  `}(o);return t.isPacked?(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(pa.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const a=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),s=a*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),s=a*Math.ceil(e[e.length-2]/2);let i=s,o="",u="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,u=`b${t}, `+u;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec${e.length}(${u});\n    }\n  `}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return pa.arraysEqual(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${pD(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;const r=dD(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${pD(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const r=dD(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=dD(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=dD(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(h+=ID),[h,u,c,a,l,s,n.userCode].join("\n")}(a,i,t),u=vR(e.gl,o),l=e.createProgram(u);let c=null;const h=e.getUniformLocation(l,"NAN",!1);1===Ue().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(l,"INFINITY",!1));const d=!1,p={},f={},m={};for(let n=0;n<t.variableNames.length;n++){const r=t.variableNames[n];p[r]=e.getUniformLocation(l,r,d),p[`offset${r}`]=e.getUniformLocation(l,`offset${r}`,d),t.enableShapeUniforms&&(f[`${r}Shape`]=e.getUniformLocation(l,`${r}Shape`,d),m[`${r}TexShape`]=e.getUniformLocation(l,`${r}TexShape`,d))}let g,y,b;t.enableShapeUniforms&&(g=e.getUniformLocation(l,"outShape",d),b=e.getUniformLocation(l,"outShapeStrides",d),y=e.getUniformLocation(l,"outTexShape",d));const x=[];return t.customUniforms&&t.customUniforms.forEach(((t,n)=>{x[n]=e.getUniformLocation(l,t.name,d)})),{program:t,fragmentShader:u,source:o,webGLProgram:l,uniformLocations:p,customUniformLocations:x,inShapeInfos:s,outShapeInfo:i,infLoc:c,nanLoc:h,inShapesLocations:f,inTexShapesLocations:m,outShapeLocation:g,outShapeStridesLocation:b,outTexShapeLocation:y}}(this.gpgpu,e,l,c))),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),function(e,t,n,r,a){t.program.enableShapeUniforms||(PD(t.inShapeInfos,n),PD([t.outShapeInfo],[r]));const s=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(s.texture,i[0],i[1]):e.setOutputMatrixTexture(s.texture,i[0],i[1]),e.setProgram(t.webGLProgram),1===Ue().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{const a=t.program.variableNames[r],s=t.uniformLocations[a],i=t.uniformLocations[`offset${a}`],o=t.inShapesLocations[`${a}Shape`],u=t.inTexShapesLocations[`${a}TexShape`];if(o){const{uniformShape:r}=OD(t.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:e.gl.uniform1iv(o,new Int32Array(r));break;case 2:e.gl.uniform2iv(o,new Int32Array(r));break;case 3:e.gl.uniform3iv(o,new Int32Array(r));break;case 4:e.gl.uniform4iv(o,new Int32Array(r))}}if(u&&e.gl.uniform2i(u,n.texData.texShape[0],n.texData.texShape[1]),null!=s)if(n.isUniform)if(pa.sizeFromShape(n.shape)<2)e.gl.uniform1f(s,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}else null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture.texture,s,r)}));const o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=pa.computeStrides(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&a&&t.program.customUniforms.forEach(((n,r)=>{const s=t.customUniformLocations[r],i=a[r];if("float"===n.type)e.gl.uniform1fv(s,i);else if("vec2"===n.type)e.gl.uniform2fv(s,i);else if("vec3"===n.type)e.gl.uniform3fv(s,i);else if("vec4"===n.type)e.gl.uniform4fv(s,i);else if("int"===n.type)e.gl.uniform1iv(s,i);else if("ivec2"===n.type)e.gl.uniform2iv(s,i);else if("ivec3"===n.type)e.gl.uniform3iv(s,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(s,i)}})),e.executeProgram()}(this.gpgpu,d,l,c,r),u.forEach((e=>this.disposeIntermediateTensorInfo(e))),p&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=Ue().get("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=pa.now();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Ue().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===a){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Ue().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=iu((()=>{if(!Ue().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Ue().getBool("DEBUG");Ue().set("DEBUG",!1);const t=this.abs(Fh(1e-8)).dataSync()[0];if(Ue().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:s,usage:i,isPacked:o}=t;if(null!=s)return;const u=null!=this.activeTimers;let l;u&&(l=pa.now());let c=t.texShape;if(null==c&&(c=XR(n,o),t.texShape=c),null!=a){const e=KR(n);let s,i=c[1],h=c[0];const d=a instanceof Uint8Array||a instanceof Uint8ClampedArray;!o&&d||([i,h]=pR(c[0],c[1])),s=o?new class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=hD();this.outputShape=e,this.enableShapeUniforms=BD(this.outputShape.length);let r="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let a=0;a<=1;a++){const s=2*t+a;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${a};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${s}] = values[0];\n            } else if (offset == 1) {\n              result[${s}] = values[1];\n            } else if (offset == 2) {\n              result[${s}] = values[2];\n            } else {\n              result[${s}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":mD(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${a};\n        }\n    `}}(e,d):new class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=hD();this.outputShape=e,this.enableShapeUniforms=BD(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":mD(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}}(e,d);const p=d?[h,i]:c,f=this.makeTensorInfo(p,r),m=this.texData.get(f.dataId);m.usage=d?rR.PIXELS:rR.UPLOAD,m.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,h,a);const g=[[h,i]],y=!0,b=this.runWebGLProgram(s,[f],r,g,y),x=this.texData.get(b.dataId);t.texture=x.texture,t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,this.disposeIntermediateTensorInfo(f),this.texData.delete(b.dataId),t.values=null,u&&(this.uploadWaitMs+=pa.now()-l)}else{const e=this.acquireTexture(c,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*pa.bytesPerElement(t)}};IO.nextDataId=0;var SO="3.13.0";function NO(){Ue().set("WEBGL_FORCE_F16_TEXTURES",!0)}ws.isBrowser()&&gu("webgl",(()=>new IO),2);var TO={forceHalfFloat:NO},EO=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=Qp.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=BD(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}},CO=class{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Qp.assertAndGetBroadcastShape(t,n);const a=this.outputShape.length;this.enableShapeUniforms=BD(a);let s="";if(r)if(0===a||1===pa.sizeFromShape(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(s=`\n          ${MD(a)} coords = getOutputCoords();\n        `,1===a)this.enableShapeUniforms?s+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=eO("coords",a);this.enableShapeUniforms?s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= outShape[${a} - 2];\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= outShape[${a} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}};function _O(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var $O={kernelName:un,backendName:"webgl",kernelFunc:_O};function AO(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=_O({inputs:{x:r},backend:n}),u=_O({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:u},s}var FO={kernelName:vt,backendName:"webgl",kernelFunc:AO},RO="return (a < 0.) ? b * a : a;",DO="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",MO={kernelName:fn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r,i=n.makeTensorInfo([],"float32",pa.createScalarValue(s,"float32")),o=Ue().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new CO(DO,a.shape,i.shape):new EO(RO,a.shape,i.shape),u=n.runWebGLProgram(o,[a,i],"float32");return n.disposeIntermediateTensorInfo(i),u}},OO="return (a < 0.) ? b * a : a;",LO="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",zO={kernelName:Zn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=Ue().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new CO(LO,r.shape,a.shape):new EO(OO,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],"float32")}};function PO(e){let{opSnippet:t,packedOpSnippet:n,cpuKernelImpl:r,dtype:a}=e;return e=>{let{inputs:s,backend:i}=e;const{x:o}=s,u=i,l=a||o.dtype;if(u.shouldExecuteOnCPU([o])&&null!=r){const e=u.texData.get(o.dataId),t=r(e.values,l);return u.makeTensorInfo(o.shape,l,t)}let c;return c=Ue().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=n?new xO(o.shape,n):new sO(o.shape,t),u.runWebGLProgram(c,[o],l)}}function BO(e){let{opSnippet:t,packedOpSnippet:n,checkOutOfBounds:r=!1,supportsComplex:a=!1,cpuKernelImpl:s,dtype:i}=e;return e=>{let{inputs:o,backend:u}=e;const{a:l,b:c}=o,h=u;if(a&&"complex64"===l.dtype){const e=h.texData.get(l.dataId),n=h.texData.get(c.dataId),[r,a]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{const[n,r]=e,a={dataId:n.dataId,dtype:n.dtype,shape:l.shape},s={dataId:r.dataId,dtype:r.dtype,shape:c.shape},i=new EO(t,l.shape,c.shape);return h.runWebGLProgram(i,[a,s],os(n.dtype,r.dtype))})),s=AO({inputs:{real:r,imag:a},backend:h});return h.disposeIntermediateTensorInfo(r),h.disposeIntermediateTensorInfo(a),s}const d=i||os(l.dtype,c.dtype);if(("string"===l.dtype||"string"===c.dtype||h.shouldExecuteOnCPU([l,c]))&&null!=s){const e=h.texData.get(l.dataId).values,t=h.texData.get(c.dataId).values,n="string"===l.dtype?Qp.fromUint8ToStringArray(e):e,r="string"===l.dtype?Qp.fromUint8ToStringArray(t):t,[a,i]=s(l.shape,c.shape,n,r,d),o=h.makeTensorInfo(i,d);return h.texData.get(o.dataId).values=a,o}let p;return p=Ue().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=n?new CO(n,l.shape,c.shape,r):new EO(t,l.shape,c.shape),h.runWebGLProgram(p,[l,c],d)}}function WO(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if("linear"===e)return t?fO:oO;if("relu"===e)return t?gO:cO;if("elu"===e)return t?mO:lO;if("relu6"===e)return t?yO:hO;if("prelu"===e)return t?LO:OO;if("leakyrelu"===e)return t?DO:RO;if("sigmoid"===e)return t?bO:pO;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var VO=class{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,o=arguments.length>7&&void 0!==arguments[7]&&arguments[7],u=arguments.length>8&&void 0!==arguments[8]&&arguments[8];this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=BD(this.outputShape.length);const l=r?e[1]:e[2],c=Math.ceil(l/2),h=r?"i * 2, rc.y":"rc.y, i * 2",d=a?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${b};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}},UO=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Qp.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}},GO="return a * b;";function HO(e){const{inputs:t,backend:n}=e,{a:r,b:a}=t,s=Qp.upcastType(r.dtype,a.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),s=new UO("return areal * breal - aimag * bimag;",r.shape,a.shape),i=new UO("return areal * bimag + aimag * breal;",r.shape,a.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:a.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:a.shape}],u=n.runWebGLProgram(s,o,"float32"),l=n.runWebGLProgram(i,o,"float32"),c=AO({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([r,a])){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),[i,o]=AM(r.shape,a.shape,e.values,t.values,s),u=n.makeTensorInfo(o,s);return n.texData.get(u.dataId).values=i,u}let i;return i=Ue().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new CO(GO,r.shape,a.shape):new EO(GO,r.shape,a.shape),n.runWebGLProgram(i,[r,a],s)}var jO={kernelName:Pn,backendName:"webgl",kernelFunc:HO};function qO(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=n,o=pa.sizeFromShape(a.shape),u=pa.inferFromImplicitShape(s,o),l=pa.sizeFromShape(u);pa.assert(o===l,(()=>`The new shape (${u}) has ${l} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=i.texData.get(a.dataId);return!c.isPacked||ZR(a.shape,u)||null!==c.texture&&ZR(c.shape,u)?(i.incRef(a.dataId),{dataId:a.dataId,shape:u,dtype:a.dtype}):function(e,t,n){const r=[jR(e.shape),...qR(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[jR(t),...qR(t)],i=new tO(s,r),o=[r],u=n.runWebGLProgram(i,[a],e.dtype,o,!0);return{dataId:u.dataId,shape:t,dtype:u.dtype}}(a,u,i)}var KO={kernelName:rr,backendName:"webgl",kernelFunc:qO},XO=class{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];const i=4*Math.floor(n/4),o=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${pa.isInt(e)?e.toPrecision(2):e}, ones);`}let l="";a%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}},YO=class{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";a%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${u});\n      }\n    `}};function ZO(e,t,n,r){const a=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=Qp.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let s=e;for(let i=0;i<a.length;i++){const{inSize:o,windowSize:u,outSize:l}=a[i];let c,h;c="mean"===n?0===i?new XO({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},o):new XO({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l}):new YO({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},n),h=s,s=r.runWebGLProgram(c,[s],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return s}function JO(e,t,n){const r=Ue().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=MD(this.rank),a=QM("rc",this.rank),s=new Array(this.rank);for(let e=0;e<t.length;e++)s[t[e]]=a[e];const i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}(e.shape,t):new class{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=MD(this.rank),a=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function QO(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return function(e,t,n,r){const a=t,s=e.shape.length,i=pa.parseAxisParam(a,e.shape);let o=i;const u=Qp.getAxesPermutation(o,s),l=null!=u;let c=e;l&&(c=JO(e,u,r),o=Qp.getInnerMostAxes(o.length,s)),Qp.assertAxesAreInnerMostDims("sum",o,s);const[h,d]=Qp.computeOutAndReduceShapes(c.shape,o);let p=h;n&&(p=Qp.expandShapeToKeepDim(h,i));const f=pa.sizeFromShape(d),m=qO({inputs:{x:c},attrs:{shape:[pa.sizeFromShape(e.shape)/f,f]},backend:r}),g=ZO(m,us(e.dtype),"sum",r),y=qO({inputs:{x:g},attrs:{shape:p},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),l&&r.disposeIntermediateTensorInfo(c),y}(a,s,i,n)}var eL={kernelName:kr,backendName:"webgl",kernelFunc:QO};function tL(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:s}=r,i=n,o=a.shape.length,u=new Array(o);for(let e=0;e<u.length;e++)u[e]=a.shape[s[e]];let l;if(i.shouldExecuteOnCPU([a])){const e=i.texData.get(a.dataId).values,t=ZM(e,a.shape,a.dtype,s,u);l=i.makeTensorInfo(u,a.dtype),i.texData.get(l.dataId).values=t}else l=JO(a,s,i);return l}var nL={kernelName:Ur,backendName:"webgl",kernelFunc:tL};function rL(e){let{a:t,b:n,transposeA:r,transposeB:a,backend:s,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:u=0,activation:l=null}=e;const c=t.shape.length,h=n.shape.length,d=r?t.shape[c-2]:t.shape[c-1],p=a?n.shape[h-1]:n.shape[h-2],f=r?t.shape[c-1]:t.shape[c-2],m=a?n.shape[h-2]:n.shape[h-1],g=t.shape.slice(0,-2),y=n.shape.slice(0,-2),b=pa.sizeFromShape(g),x=pa.sizeFromShape(y),v=Ji.assertAndGetBroadcastShape(t.shape.slice(0,-2),n.shape.slice(0,-2)).concat([f,m]);pa.assert(d===p,(()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${t.shape} and ${n.shape} and transposeA=${r} and transposeB=${a} must match.`));const w=r?[b,d,f]:[b,f,d],k=a?[x,m,p]:[x,p,m],I=qO({inputs:{x:t},backend:s,attrs:{shape:w}}),S=qO({inputs:{x:n},backend:s,attrs:{shape:k}}),N=[I,S],T=Math.max(b,x),E=r?I.shape[1]:I.shape[2],C=null!=i,_=null!=o,$="leakyrelu"===l,A=null!=l?WO(l,!0):null;let F;if((1===f||1===m)&&E>1e3&&!1===(C||_||$||null!=A)){let e=I,t=S;r&&(e=tL({inputs:{x:I},backend:s,attrs:{perm:[0,2,1]}}),N.push(e)),a&&(t=tL({inputs:{x:S},backend:s,attrs:{perm:[0,2,1]}}),N.push(t));const n=1===m;let i=e;1!==m&&(i=qO({inputs:{x:e},backend:s,attrs:{shape:[T,E,1]}}),N.push(i));const o=1===m?2:1;let u=t;n&&(u=qO({inputs:{x:t},backend:s,attrs:{shape:[T,1,E]}}),N.push(u));const l=HO({inputs:{a:i,b:u},backend:s});F=QO({inputs:{x:l},backend:s,attrs:{axis:o,keepDims:!0}}),N.push(l)}else{const e=os(t.dtype,n.dtype),l=new VO(w,k,[T,f,m],r,a,C,A,_,$),c=[I,S];if(null!=i&&c.push(i),_&&c.push(o),$){const e=s.makeTensorInfo([],"float32",pa.createScalarValue(u,"float32"));c.push(e),N.push(e)}F=s.runWebGLProgram(l,c,e)}const R=qO({inputs:{x:F},backend:s,attrs:{shape:v}});N.push(F);for(const e of N)s.disposeIntermediateTensorInfo(e);return R}var aL={kernelName:Zr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;return rL({a,b:s,transposeA:u,transposeB:l,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},sL="return abs(x);",iL={kernelName:Ke,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=zM(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let a;return a=Ue().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new xO(r.shape,sL):new sO(r.shape,sL),n.runWebGLProgram(a,[r],r.dtype)}},oL=PO({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),uL={kernelName:Xe,backendName:"webgl",kernelFunc:oL},lL=PO({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),cL={kernelName:Ye,backendName:"webgl",kernelFunc:lL},hL="return a + b;",dL=BO({opSnippet:hL,packedOpSnippet:hL,supportsComplex:!0,cpuKernelImpl:hM}),pL={kernelName:Ze,backendName:"webgl",kernelFunc:dL},fL={kernelName:Je,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,a=n;if(1===a.length)return _O({inputs:{x:a[0]},backend:r});if(a.length>Ue().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(a.length/2),n=e({inputs:a.slice(0,t),backend:r}),s=e({inputs:a.slice(t),backend:r});return e({inputs:[n,s],backend:r})}const s=a.map((e=>e.dtype)).reduce(((e,t)=>os(e,t))),i=a.map((e=>e.shape)),o=Ue().getBool("WEBGL_PACK")?new class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}(a[0].shape,i):new class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}(a[0].shape,i);return r.runWebGLProgram(o,a,s)}},mL={kernelName:Qe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=pa.parseAxisParam(s,a.shape);let l=u;const c=Qp.getAxesPermutation(l,o);let h=a;null!=c&&(h=tL({inputs:{x:a},backend:n,attrs:{perm:c}}),l=Qp.getInnerMostAxes(l.length,o)),Qp.assertAxesAreInnerMostDims("all",l,o);const[d,p]=Qp.computeOutAndReduceShapes(h.shape,l),f=qO({inputs:{x:h},backend:n,attrs:{shape:[-1,pa.sizeFromShape(p)]}}),m=ZO(f,f.dtype,"all",n);let g;return g=qO(i?{inputs:{x:m},backend:n,attrs:{shape:Qp.expandShapeToKeepDim(d,u)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},gL={kernelName:et,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=pa.parseAxisParam(s,a.shape);let l=u;const c=Qp.getAxesPermutation(l,o);let h=a;null!=c&&(h=tL({inputs:{x:a},backend:n,attrs:{perm:c}}),l=Qp.getInnerMostAxes(l.length,o)),Qp.assertAxesAreInnerMostDims("any",l,o);const[d,p]=Qp.computeOutAndReduceShapes(h.shape,l),f=qO({inputs:{x:h},backend:n,attrs:{shape:[-1,pa.sizeFromShape(p)]}}),m=ZO(f,f.dtype,"any",n);let g;return g=qO(i?{inputs:{x:m},backend:n,attrs:{shape:Qp.expandShapeToKeepDim(d,u)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},yL=class{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}},bL=class{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,pa.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const a=e[e.length-1],s=Math.ceil(a/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,u=MD(o),l=eO("coords",o);let c,h;if(1===s){h=o+1;const e=MD(h);c=`\n        ${e} sourceLocR = ${e}(${l.join()}, 0);\n        ++${l[o-1]};\n        ${e} sourceLocG = ${e}(${l.join()}, 0);\n        ++${l[o-2]};\n        ${e} sourceLocA = ${e}(${l.join()}, 0);\n        --${l[o-1]};\n        ${e} sourceLocB = ${e}(${l.join()}, 0);\n        --${l[o-2]};`}else h=o,c=`\n        ${u} sourceLocR = coords;\n        ++${l[o-1]};\n        ${u} sourceLocG = coords;\n        ++${l[o-2]};\n        ${u} sourceLocA = coords;\n        --${l[o-1]};\n        ${u} sourceLocB = coords;\n        --${l[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],f=d.map((e=>"int "+e)),m=eO("sourceLocR",h-1).concat("inIdx.r"),g=eO("sourceLocG",h-1).concat("inIdx.g"),y=eO("sourceLocB",h-1).concat("inIdx.b"),b=eO("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",v=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,w=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${l[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${l[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}};function xL(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,a=t.shape[0],s=t.shape[1];null!=r&&(a=r.shape[0],s=r.shape[1]);const i=Qp.computeOptimalWindowSize(s),o={windowSize:i,inSize:s,batchSize:a,outSize:Math.ceil(s/i)},u=new yL(o,n,null==r),l=[t];null!=r&&l.push(r);const c=e.runWebGLProgram(u,l,"int32");if(1===c.shape[1])return c;const h=xL(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function vL(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const a=null!=r?r.shape:t.shape,s=a[a.length-1],i=Qp.computeOptimalWindowSize(s),o=new bL(a,i,n,null==r),u=null==r?[t]:[t,r],l=e.runWebGLProgram(o,u,"int32");if(l.shape.length===t.shape.length){const r=vL(e,t,n,l);return e.disposeIntermediateTensorInfo(l),r}return l}function wL(e,t,n,r){const a=[n];if(Qp.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!Ue().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],s=e.texData.get(t.dataId);let i=t;null!==s&&s.isPacked&&(i=e.unpackTensor(t),n.push(i));const[o,u]=Qp.computeOutAndReduceShapes(i.shape,a),l=pa.sizeFromShape(u),c=qO({inputs:{x:i},backend:e,attrs:{shape:[-1,l]}});n.push(c);const h=xL(e,c,r);n.push(h);const d=qO({inputs:{x:h},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),d}return vL(e,t,r)}var kL={kernelName:tt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;let i=pa.parseAxisParam(s,a.shape);const o=Qp.getAxesPermutation(i,a.shape.length);let u=a;const l=[];null!=o&&(u=tL({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),i=Qp.getInnerMostAxes(i.length,u.shape.length)),Qp.assertAxesAreInnerMostDims("argMax",[i[0]],u.shape.length);const c=wL(n,u,i[0],"max");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},IL={kernelName:nt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;let i=pa.parseAxisParam(s,a.shape);const o=Qp.getAxesPermutation(i,a.shape.length);let u=a;const l=[];null!=o&&(u=tL({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),i=Qp.getInnerMostAxes(i.length,u.shape.length)),Qp.assertAxesAreInnerMostDims("argMin",[i[0]],u.shape.length);const c=wL(n,u,i[0],"min");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},SL=PO({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),NL={kernelName:rt,backendName:"webgl",kernelFunc:SL},TL=PO({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),EL={kernelName:at,backendName:"webgl",kernelFunc:TL},CL=PO({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),_L={kernelName:st,backendName:"webgl",kernelFunc:CL},$L=BO({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),AL={kernelName:ot,backendName:"webgl",kernelFunc:$L},FL=PO({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),RL={kernelName:it,backendName:"webgl",kernelFunc:FL},DL=class{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / count");const x=4*Math.floor(s/4),v=s%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${b});\n      }\n    `}},ML=class{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / count");const w=4*Math.floor(s/4),k=s%4,I=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${v});\n        }\n      }\n    `}},OL={kernelName:ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;lD(a,"avgPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;pa.assert(Qp.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=Qp.computePool2DInfo(a.shape,s,i,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&pa.arraysEqual(l.inShape,l.outShape))return _O({inputs:{x:a},backend:n});const c=new DL(l,"avg",!1);return n.runWebGLProgram(c,[a],"float32")}},LL={kernelName:ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r,c=Qp.computePool3DInfo(a.shape,s,i,[1,1,1],o,u,l),h=new ML(c,"avg",!1);return n.runWebGLProgram(h,[a],"float32")}},zL={kernelName:ht,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,h=Qp.computePool3DInfo(i.shape,o,u,[1,1,1],l,c),d=new class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(h);return n.runWebGLProgram(d,[a],i.dtype)}},PL={kernelName:lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;lD([a,s],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,c=Qp.computePool2DInfo(i.shape,o,u,1,l),h=new class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=o-1-e.padInfo.top,c=u-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(c);return n.runWebGLProgram(h,[a],i.dtype)}},BL={kernelName:dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;return rL({a,b:s,transposeA:i,transposeB:o,backend:n})}},WL={kernelName:nn,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e;const{x:a,mean:s,variance:i,offset:o,scale:u}=t;pa.assert(s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),pa.assert(null==o||s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),pa.assert(null==u||s.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=r;null==l&&(l=.001);const c=[a,s,i];let h=null;null!=o&&(h=o.shape,c.push(o));let d=null;null!=u&&(d=u.shape,c.push(u));const p=Ue().getBool("WEBGL_PACK_NORMALIZATION")?new class{constructor(e,t,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Qp.assertAndGetBroadcastShape(e,t),Qp.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=r&&(Qp.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=a&&(Qp.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}(a.shape,s.shape,i.shape,h,d,l):new class{constructor(e,t,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],Qp.assertAndGetBroadcastShape(e,t),Qp.assertAndGetBroadcastShape(e,n);let i="0.0";null!=r&&(Qp.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=a&&(Qp.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}(a.shape,s.shape,i.shape,h,d,l);return n.runWebGLProgram(p,c,c[0].dtype)}},VL=["x","y","z","w","u","v"];function UL(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r,[o,u]=yo.parseSliceParams(a,s,i);if(yo.assertParamsValid(a,o,u),0===pa.sizeFromShape(u))return n.makeTensorInfo(u,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){const e=n.texData.get(a.dataId),t=PM(e.values,o,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,t)}const{isPacked:l}=n.texData.get(a.dataId),c=yo.isSliceContinous(a.shape,o,u);if(l||!c){const e=Ue().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=MD(this.rank),n=eO("coords",this.rank),r=eO("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}(u):new class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=MD(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return VL.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${VL[t]} = start[${t}] + coords.${VL[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}(u),t=[o];return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),function(e,t,n,r){const a=r.texData.get(e.dataId),s=r.makeTensorInfo(n,e.dtype),i=r.texData.get(s.dataId);Object.assign(i,a),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=yo.computeFlatOffset(t,pa.computeStrides(e.shape));a.slice&&(o+=a.slice.flatOffset),i.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||e.dataId};const u=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,u+1),s}(a,o,u,n)}var GL={kernelName:mr,backendName:"webgl",kernelFunc:UL},HL={kernelName:pt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;pa.assert(a.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=s.reduce(((e,t)=>e*t)),u=Qp.getReshaped(a.shape,s,o),l=Qp.getPermuted(u.length,s.length),c=Qp.getReshapedPermuted(a.shape,s,o),h=Qp.getSliceBeginCoords(i,s.length),d=Qp.getSliceSize(c,i,s.length),p=[],f=qO({inputs:{x:a},backend:n,attrs:{shape:u}}),m=tL({inputs:{x:f},backend:n,attrs:{perm:l}}),g=qO({inputs:{x:m},backend:n,attrs:{shape:c}}),y=UL({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},jL={kernelName:ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.readSync(a.dataId),u=n.readSync(s.dataId),l=dM(o,u,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,l)}},qL={kernelName:gt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.readSync(r.dataId),i=n.readSync(a.dataId),o=Qp.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},KL=BO({opSnippet:"return float(a != b);",cpuKernelImpl:RM,dtype:"bool"}),XL={kernelName:Wn,backendName:"webgl",kernelFunc:KL};function YL(e){const{inputs:t,backend:n}=e,{input:r}=t;return _O({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}var ZL={kernelName:er,backendName:"webgl",kernelFunc:YL},JL={kernelName:yt,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:a}=t,{x:s}=n,{dtype:i}=a;if("complex64"===i){if("complex64"===s.dtype)return _O({inputs:{x:s},backend:r});const t=Vc(s.shape),n=e({inputs:{x:s},backend:r,attrs:{dtype:"float32"}}),a=AO({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),a}if("complex64"===s.dtype){const t=YL({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!pa.hasEncodingLoss(s.dtype,i)){const e=_O({inputs:{x:s},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){const n=new sO(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(s,r);if("bool"===i){const e=r.makeTensorInfo([],"bool",pa.getTypedArrayFromDType("bool",1)),t=KL({inputs:{a:s,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}},QL="return ceil(x);",ez=PO({opSnippet:QL,packedOpSnippet:QL,cpuKernelImpl:fM}),tz={kernelName:bt,backendName:"webgl",kernelFunc:ez},nz={kernelName:xt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r;let o;o=Ue().getBool("WEBGL_PACK_CLIP")?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}(a.shape):new class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}(a.shape);const u=[[s],[i]];return n.runWebGLProgram(o,[a],a.dtype,u)}};function rz(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}var az={kernelName:wt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}(r.shape),i=[rz(r,a.complexTensorInfos.real),rz(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}};function sz(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function iz(e){const{inputs:t,backend:n}=e,{input:r}=t;return _O({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}var oz={kernelName:cn,backendName:"webgl",kernelFunc:iz};function uz(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>YL({inputs:{input:e},backend:n}))),a=e.map((e=>iz({inputs:{input:e},backend:n}))),s=uz(r,t,n),i=uz(a,t,n),o=AO({inputs:{real:s,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),a.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}let a=n.shouldExecuteOnCPU(e);if("string"===r&&(a=!0),a){const a=e.map((e=>{const r=pa.sizeFromShape(e.shape.slice(t));return qO({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),s=a.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=Qp.computeOutShape(a.map((e=>e.shape)),1),o=1===a[0].shape[0],u=mM(s,i,r,o),l=Qp.computeOutShape(e.map((e=>e.shape)),t),c=n.makeTensorInfo(l,r,u);return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}if(e.length>Ue().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),a=uz(e.slice(0,r),t,n),s=uz(e.slice(r),t,n),i=uz([a,s],t,n);return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}if(Ue().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const a=new class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Qp.computeOutShape(e,t);const n=this.outputShape,r=n.length,a=MD(r),s=eO("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const u=i[t],l=i.slice(-2),c=i.join();let h=`if (${u} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${l.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];h+=`\n        if (${u} < ${o[e]}  && ${u} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${sz(i,u,t)}),\n            vec2(${sz(l,u,t)}));\n        }`}const d=o.length,p=o[o.length-1];h+=`\n        return getChannel(\n          getT${d}(${sz(i,u,p)}),\n          vec2(${sz(l,u,p)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[r-1]} = ${s[r-1]} + 1;\n        if (${s[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[r-2]} = ${s[r-2]} + 1;\n        if (${s[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[r-1]} = ${s[r-1]} - 1;\n        if (${s[r-2]} < ${n[r-2]} &&\n            ${s[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}}(e.map((e=>e.shape)),t);return n.runWebGLProgram(a,e,r)}const{tensors2D:s,outShape:i}=function(e,t,n){const r=Qp.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>qO({inputs:{x:e},attrs:{shape:[-1,pa.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:r}}(e,t,n),o=new class{constructor(e){this.outputShape=[],this.outputShape=Qp.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}(s.map((e=>e.shape))),u=n.runWebGLProgram(o,s,r);s.forEach((e=>n.disposeIntermediateTensorInfo(e)));const l=qO({inputs:{x:u},attrs:{shape:i},backend:n});return n.disposeIntermediateTensorInfo(u),l}function lz(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=pa.parseAxisParam(a,t[0].shape)[0],i=Qp.computeOutShape(t.map((e=>e.shape)),s);if(0===pa.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>pa.sizeFromShape(e.shape)>0));if(1===o.length)return _O({inputs:{x:o[0]},backend:n});const u=o.map((e=>e.shape));return Qp.assertParamsConsistent(u,s),uz(o,s,n)}var cz={kernelName:kt,backendName:"webgl",kernelFunc:lz},hz=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",v="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${u});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}};function dz(e){let{x:t,filter:n,convInfo:r,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}=e;const l=t.shape,c=a.texData.get(t.dataId),h=r.inChannels,d=l[0]*l[1]*l[2],p=r.outChannels,f="channelsLast"===r.dataFormat;let m;const g=[];if((1!==d&&1!==p||!(h>1e3))&&c.isPacked&&f&&null!=c.texture&&l[2]%2!=0&&pa.arraysEqual(c.shape.slice(-3),l.slice(-3))){const e=l[0]*l[1]*(l[2]+1),h={dataId:t.dataId,shape:[1,e,r.inChannels],dtype:t.dtype},d=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,pa.assert(ZR(c.shape,h.shape),(()=>`packed reshape ${c.shape} to ${h.shape} isn't free`));const p=qO({inputs:{x:n},backend:a,attrs:{shape:[1,r.inChannels,r.outChannels]}});g.push(p);const f=rL({a:h,b:p,backend:a,transposeA:!1,transposeB:!1,bias:s,activation:u,preluActivationWeights:i,leakyreluAlpha:o}),y=a.texData.get(f.dataId);pa.assert(y.isPacked,(()=>"batchMatMul result is expected to be packed")),c.shape=d,y.shape=r.outShape,m=_O({inputs:{x:f},backend:a}),m.shape=r.outShape,g.push(f)}else{const e=qO({inputs:{x:t},backend:a,attrs:{shape:[1,f?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],r.inChannels]}}),c=qO({inputs:{x:n},backend:a,attrs:{shape:[1,r.inChannels,r.outChannels]}}),h=rL({a:e,b:c,transposeA:!1,transposeB:!1,backend:a,bias:s,activation:u,preluActivationWeights:i,leakyreluAlpha:o});m=qO({inputs:{x:h},backend:a,attrs:{shape:r.outShape}}),g.push(e),g.push(c),g.push(h)}for(const e of g)a.disposeIntermediateTensorInfo(e);return m}function pz(e){let{x:t,filter:n,convInfo:r,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}=e;const{filterWidth:l,filterHeight:c,inChannels:h,outWidth:d,outHeight:p,dataFormat:f}=r,m="channelsLast"===f,g=l*c*h,y=p*d,b=[g,y],x=[],v=qO({inputs:{x:t},backend:a,attrs:{shape:t.shape.slice(1)}}),w=qO({inputs:{x:n},backend:a,attrs:{shape:[1,g,pa.sizeFromShape(n.shape)/g]}});x.push(v),x.push(w);const k=new class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=BD(this.outputShape.length);const{dataFormat:n}=t,r=hD(),a="channelsLast"===n,s=a?0:1,i=a?1:2,o=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`;let u="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)u+=`\n          blockIndex = rc.y + ${t};\n          pos = rc.x + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${s}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${a}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${u}\n\n        ${r.output} = result;\n      }\n    `}}(b,r),I=[v.shape,[r.padInfo.top,r.padInfo.left],[r.strideHeight,r.strideWidth],[r.dilationHeight,r.dilationWidth],[r.inChannels],[r.filterWidth*r.inChannels],[r.outWidth]],S=a.runWebGLProgram(k,[v],"float32",I),N=qO({inputs:{x:S},backend:a,attrs:{shape:[1,b[0],b[1]]}});x.push(S),x.push(N);const T=null!=s,E=null!=i,C="leakyrelu"===u,_=u?WO(u,!0):null,$=new VO(N.shape,w.shape,[1,y,r.outChannels],!0,!1,T,_,E,C),A=[N,w];if(s&&A.push(s),E&&A.push(i),C){const e=a.makeTensorInfo([],"float32",pa.createScalarValue(o,"float32"));A.push(e),x.push(e)}const F=a.runWebGLProgram($,A,"float32"),R=qO({inputs:{x:F},backend:a,attrs:{shape:m?[1,p,d,r.outChannels]:[1,r.outChannels,p,d]}});x.push(F);for(const e of x)a.disposeIntermediateTensorInfo(e);return R}var fz={kernelName:It,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r,h=Qp.convertConv2DDataFormat(u),d=Qp.computeConv2DInfo(a.shape,s.shape,i,l,o,c,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(Ue().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])p=pz({x:a,filter:s,convInfo:d,backend:n});else{const e=new hz(d);p=n.runWebGLProgram(e,[a,s],"float32")}else p=dz({x:a,filter:s,convInfo:d,backend:n});const f=qO({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}},mz={kernelName:St,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r,h=Qp.convertConv2DDataFormat(u),d=Qp.computeConv2DInfo(a.shape,c,i,1,o,l,!1,h),p=new class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${s}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(d);return n.runWebGLProgram(p,[a,s],"float32")}},gz={kernelName:Nt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r,h=Qp.convertConv2DDataFormat(l),d=Qp.computeConv2DInfo(i,s.shape,o,1,u,c,!1,h),p=new class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,u=s?1:2,l=s?2:3,c=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(d);return n.runWebGLProgram(p,[a,s],"float32")}},yz={kernelName:Tt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r,l=Qp.computeConv3DInfo(a.shape,s.shape,i,u,o),c=new class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(l);return n.runWebGLProgram(c,[a,s],"float32")}},bz={kernelName:Et,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:u}=r,l=Qp.computeConv3DInfo(a.shape,u,i,1,o),c=new class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(l);return n.runWebGLProgram(c,[a,s],"float32")}},xz={kernelName:Ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:u}=r,l=Qp.computeConv3DInfo(u,s.shape,o,1,i),c=new class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(l);return n.runWebGLProgram(c,[a,s],"float32")}},vz=PO({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),wz={kernelName:_t,backendName:"webgl",kernelFunc:vz},kz=PO({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),Iz={kernelName:$t,backendName:"webgl",kernelFunc:kz},Sz={kernelName:Ft,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=r,c=new class{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,i,o,u]=e,[l]=t,[c,h]=n;this.outputShape=[l,c,h,u];const d="bilinear"===r?1:0,[p,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[b,x,v]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}(a.shape,s.shape,o,u,l);return n.runWebGLProgram(c,[a,s,i],"float32")}},Nz=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;const r=e.length,a=t?"0.0":`getX(${Tz(r,"coords")})`,s=e[e.length-1];let i="",o="";t?(i=n?"end != "+(s-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${s}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${MD(r)} coords = getOutputCoords();\n        int end = ${Ez(r,"coords")};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${Ez(r,"coords")} = idx;\n          val += getX(${Tz(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}};function Tz(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function Ez(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}var Cz={kernelName:At,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,u=a.shape.length,l=Qp.getAxesPermutation([s],u);let c=a;null!=l&&(c=tL({inputs:{x:a},backend:n,attrs:{perm:l}}));const h=Qp.getInnerMostAxes(1,u)[0];if(h!==u-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${a.shape.length-1} but got axis=${s}`);const d=c.shape[h];let p=_O({inputs:{x:c},backend:n});for(let e=0;e<=Math.ceil(Math.log2(d))-1;e++){const t=new Nz(c.shape,!1,o),r=[[e]],a=p;p=n.runWebGLProgram(t,[p],p.dtype,r),n.disposeIntermediateTensorInfo(a)}if(i){const e=new Nz(c.shape,i,o),t=p;p=n.runWebGLProgram(e,[p],p.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=l){const e=tL({inputs:{x:p},backend:n,attrs:{perm:Qp.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(c),e}return p}},_z={kernelName:Rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const e=n.readSync(a.dataId),t=n.readSync(s.dataId),r=dM(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(s),r=pM(e,t,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}},$z={kernelName:Dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r,o=a.shape[0],u=("NHWC"===i?a.shape[1]:a.shape[2])*s,l=("NHWC"===i?a.shape[2]:a.shape[3])*s,c=("NHWC"===i?a.shape[3]:a.shape[1])/(s*s),h="NHWC"===i?[o,u,l,c]:[o,c,u,l],d=new class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}(h,s,i);return n.runWebGLProgram(d,[a],a.dtype)}},Az=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=BD(this.outputShape.length);const s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels;let u="",l="";n&&(u=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,l="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${u}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${s}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${l}\n        setOutput(result);\n      }\n    `}},Fz=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=BD(this.outputShape.length);const s=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,u=e.dilationWidth,l=e.filterHeight,c=e.filterWidth,h=c;let d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<c;e++)d+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;d+=`\n    for (int r = 0; r < ${l}; r++) {\n      `;for(let e=0;e<c;e++)d+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(h+1)/2;e++){const t=2*e;if(d+=`\n          xC = xCCorner + ${t*u};\n          `,1===o){if(t<c&&(i%2==1?(d+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,d+=1===u&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):d+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<c)){const e=i%2==0?pa.nearestLargerEven(u):u;u%2==0&&i%2==1||u%2!=0&&i%2!=1?(d+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,u>1&&(d+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                      xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${t}Ready = 1;\n                    }\n                    `),d+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                  `):d+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<c&&(i%2==1?(d+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<c&&(d+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(d+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<c&&(d+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<c&&(d+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<c&&(d+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}d+="\n    }\n  ",d+="\n      }\n    ";let p="",f="";n&&(p=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${p}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${s};\n        int q = d2 - d1 * ${s};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${d}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}},Rz={kernelName:Mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=r;let c=u;null==c&&(c=[1,1]),pa.assert(Qp.eitherStridesOrDilationsAreOne(i,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const h=Qp.computeConv2DInfo(a.shape,s.shape,i,c,o,l,!0);let d;d=Ue().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new Fz(h):new Az(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[a,s],"float32",p)}},Dz={kernelName:Ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r,h=Qp.computeConv2DInfo(a.shape,c,i,o,u,l,!0),d=new class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(h);return n.runWebGLProgram(d,[a,s],"float32")}},Mz={kernelName:Lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r,h=Qp.computeConv2DInfo(c,s.shape,i,o,u,l,!0),d=new class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(h);return n.runWebGLProgram(d,[a,s],"float32")}},Oz={kernelName:zt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],s=pa.sizeFromShape(r.shape),i=qO({inputs:{x:r},backend:n,attrs:{shape:[s]}}),o=new class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}(s),u=n.runWebGLProgram(o,[i],i.dtype),l=qO({inputs:{x:u},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),l}},Lz={kernelName:Pt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r,l=Qp.computeDilation2DInfo(a.shape,s.shape,i,o,"NHWC",u);let c;const h=new class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:u,dilationWidth:l}=e,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}(l);c=n.runWebGLProgram(h,[a,s],"float32");const d=qO({inputs:{x:c},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(c),d}},zz={kernelName:Ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:u}=Qp.decodeEinsumEquation(a,s.length);Qp.checkEinsumDimSizes(i.length,u,s);const{path:l,steps:c}=Qp.getEinsumComputePath(o,u),h=c.length;let d=null,p=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=Qp.getEinsumPermutation(p,u[t]);let a;Qp.isIdentityPermutation(e)?a=s[t]:(a=tL({inputs:{x:s[t]},backend:n,attrs:{perm:e}}),f.push(a));const i=a.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);pa.arraysEqual(a.shape,i)||(a=qO({inputs:{x:a},backend:n,attrs:{shape:i}}),f.push(a)),null===d?d=a:(d=HO({inputs:{a,b:d},backend:n}),f.push(d))}e<h-1&&(l[e]>=0&&(d=QO({inputs:{x:d},backend:n,attrs:{axis:l[e]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},Pz=PO({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),Bz={kernelName:Gt,backendName:"webgl",kernelFunc:Pz},Wz={kernelName:Ht,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=Ue().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new CO("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,a.shape):new EO("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}},Vz=BO({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:gM}),Uz={kernelName:qt,backendName:"webgl",kernelFunc:Vz},Gz=PO({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${Qp.ERF_P};\n  float a1 = ${Qp.ERF_A1};\n  float a2 = ${Qp.ERF_A2};\n  float a3 = ${Qp.ERF_A3};\n  float a4 = ${Qp.ERF_A4};\n  float a5 = ${Qp.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),Hz={kernelName:jt,backendName:"webgl",kernelFunc:Gz},jz=PO({opSnippet:"if (isnan(x)) return x;\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:yM,dtype:"float32"}),qz={kernelName:Kt,backendName:"webgl",kernelFunc:jz};function Kz(e){const{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice();let u=a;return a<0&&(pa.assert(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+a+1),o.splice(u,0,1),qO({inputs:{x:s},backend:r,attrs:{shape:o}})}var Xz={kernelName:Xt,backendName:"webgl",kernelFunc:Kz},Yz="return exp(x) - 1.0;",Zz=PO({opSnippet:Yz,packedOpSnippet:Yz,cpuKernelImpl:bM}),Jz={kernelName:Yt,backendName:"webgl",kernelFunc:Zz},Qz=class{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const a=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${r}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}};function eP(e,t,n){const r=n.texData.get(e.dataId),a=pa.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=qO({inputs:{x:e},backend:n,attrs:{shape:[a/s,s]}}),o=i.shape,u=new Qz("real",o,t),l=new Qz("imag",o,t),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(u,c,"float32"),d=n.runWebGLProgram(l,c,"float32"),p=AO({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const f=qO({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(p),f}var tP={kernelName:Zt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return eP(r,!1,n)}};function nP(e){const{backend:t,attrs:n}=e,{shape:r,value:a}=n;let{dtype:s}=n;if(s=s||pa.inferDtype(a),"string"===s){const e=pa.getArrayFromDType(s,pa.sizeFromShape(r));return e.fill(a),t.makeTensorInfo(r,s,e)}{const e=new class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}(r,a),n=[[a]];return t.runWebGLProgram(e,[],s,n)}}var rP,aP={kernelName:Jt,backendName:"webgl",kernelFunc:nP},sP={kernelName:Qt,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{image:r}=t,a=n,s=new class{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}(r.shape);return a.runWebGLProgram(s,[r],r.dtype)}},iP="return floor(x);",oP=PO({opSnippet:iP,packedOpSnippet:iP,cpuKernelImpl:xM}),uP={kernelName:en,backendName:"webgl",kernelFunc:oP},lP=BO({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),cP={kernelName:tn,backendName:"webgl",kernelFunc:lP},hP={kernelName:Xr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:a}=t;const{numChannels:s}=r,i="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[u,l]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],c=[l,u],h=[l,u,s];(o||i)&&(null==rP&&(rP=document.createElement("canvas").getContext("2d")),rP.canvas.width=u,rP.canvas.height=l,rP.drawImage(a,0,0,u,l),a=rP.canvas);const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=rR.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),a);const p=Ue().getBool("WEBGL_PACK")?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=hD(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}(h):new class{constructor(e){this.variableNames=["A"];const t=hD(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}},dP={kernelName:Jr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r,m=Qp.convertConv2DDataFormat(c),g=Qp.computeConv2DInfo(a.shape,s.shape,u,h,l,d,!1,m);let y;const b=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(Ue().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])y=pz({x:a,filter:s,convInfo:g,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const e=null!=i,t=null!=o,r="leakyrelu"===p,u=p?WO(p,!1):null,l=new hz(g,e,u,t,r),c=[a,s];if(i&&c.push(i),o&&c.push(o),r){const e=n.makeTensorInfo([],"float32",pa.createScalarValue(f,"float32"));c.push(e),b.push(e)}y=n.runWebGLProgram(l,c,"float32")}else y=dz({x:a,filter:s,convInfo:g,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const x=qO({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},pP={kernelName:Qr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=r,f=[];let m=c;null==m&&(m=[1,1]),pa.assert(Qp.eitherStridesOrDilationsAreOne(u,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${m}'`));const g=Qp.computeConv2DInfo(a.shape,s.shape,u,m,l,h,!0),y=Ue().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,b=d?WO(d,y):null,x=[a,s],v=null!=i,w=null!=o,k="leakyrelu"===d;if(v&&x.push(i),w&&x.push(o),k){const e=n.makeTensorInfo([],"float32",pa.createScalarValue(p,"float32"));x.push(e),f.push(e)}let I;I=y?new Fz(g,v,b,w,k):new Az(g,v,b,w,k);const S=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],N=n.runWebGLProgram(I,x,"float32",S);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),N}},fP={kernelName:an,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=a.shape,i=s[s.length-1],o=pa.sizeFromShape(r.shape),[u,l,c,h]=Qp.prepareAndValidate(r,a),d=qO({inputs:{x:a},backend:n,attrs:{shape:[l,i]}}),p=qO({inputs:{x:r},backend:n,attrs:{shape:[pa.sizeFromShape(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){const e=n.readSync(a.dataId),t=n.bufferSync(r),s=vM(e,t,r.dtype,l,i,c,h,r.shape,o);return n.makeTensorInfo(u,r.dtype,s.values)}const f=new class{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=MD(t.length),a=MD(n.length),s=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${s};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}(i,h,[l,c]),m=n.runWebGLProgram(f,[p,d],p.dtype),g=qO({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),g}};function mP(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r,u=pa.parseAxisParam(i,a.shape)[0];if(Ue().get("DEBUG")){const e=n.readSync(s.dataId),t=a.shape[u];for(let n=0;n<e.length;++n){const r=e[n];pa.assert(r<=t-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`))}}const l=Qp.segment_util.collectGatherOpShapeInfo(a,s,u,o),c=pa.sizeFromShape(s.shape),h=[],d=qO({inputs:{x:a},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),p=qO({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,c/l.batchSize]}});h.push(d),h.push(p);const f=[l.batchSize,l.outerSize,c/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){const e=n.bufferSync(p),t=n.bufferSync(d),r=wM(t,e,f);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l.outputShape,r.dtype,r.values)}const m=new class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=MD(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("index"):r.push(`${n[t]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}(d.shape,f),g=n.runWebGLProgram(m,[d,p],d.dtype);h.push(g);const y=qO({inputs:{x:g},backend:n,attrs:{shape:l.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}var gP={kernelName:rn,backendName:"webgl",kernelFunc:mP},yP=BO({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:kM,dtype:"bool"}),bP={kernelName:sn,backendName:"webgl",kernelFunc:yP},xP=BO({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:IM}),vP={kernelName:on,backendName:"webgl",kernelFunc:xP},wP={kernelName:ln,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return eP(r,!0,n)}},kP=PO({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),IP={kernelName:hn,backendName:"webgl",kernelFunc:kP},SP=PO({opSnippet:"return float(isinf(x));",dtype:"bool"}),NP={kernelName:dn,backendName:"webgl",kernelFunc:SP},TP=PO({opSnippet:"return float(isnan(x));",dtype:"bool"}),EP={kernelName:pn,backendName:"webgl",kernelFunc:TP},CP=BO({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:SM,dtype:"bool"}),_P={kernelName:mn,backendName:"webgl",kernelFunc:CP},$P=BO({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:NM,dtype:"bool"}),AP={kernelName:gn,backendName:"webgl",kernelFunc:$P},FP={kernelName:yn,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=TM(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},RP=PO({opSnippet:"if (isnan(x)) return x;\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:EM}),DP={kernelName:bn,backendName:"webgl",kernelFunc:RP},MP=PO({opSnippet:"if (isnan(x)) return x;\n  return log(1.0 + x);\n"}),OP={kernelName:xn,backendName:"webgl",kernelFunc:MP},LP=BO({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),zP={kernelName:vn,backendName:"webgl",kernelFunc:LP},PP=PO({opSnippet:"return float(!(x >= 1.0));"}),BP={kernelName:wn,backendName:"webgl",kernelFunc:PP},WP=BO({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),VP={kernelName:kn,backendName:"webgl",kernelFunc:WP},UP={kernelName:Sn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:u}=r,l=Ue().getBool("WEBGL_PACK_NORMALIZATION")?new class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}(a.shape,s,i,o,u):new class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];const s=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}(a.shape,s,i,o,u);return n.runWebGLProgram(l,[a],a.dtype)}},GP={kernelName:Nn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r,h=new class{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}(a.shape,o,u,l,c);return n.runWebGLProgram(h,[a,s,i],a.dtype)}};function HP(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=a.shape.length,u=pa.parseAxisParam(s,a.shape);let l=u;const c=Qp.getAxesPermutation(l,o),h=null!=c,d=n.shouldExecuteOnCPU([a]);let p=a;if(h){if(d){const e=n.texData.get(p.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=a.shape[c[e]];const r=ZM(e,a.shape,a.dtype,c,t);p=n.makeTensorInfo(t,a.dtype),n.texData.get(p.dataId).values=r}else p=JO(a,c,n);l=Qp.getInnerMostAxes(l.length,o)}Qp.assertAxesAreInnerMostDims("max",l,o);const[f,m]=Qp.computeOutAndReduceShapes(p.shape,l);let g,y=f;if(i&&(y=Qp.expandShapeToKeepDim(f,u)),d){const e=n.texData.get(p.dataId).values,t=CM(e,pa.sizeFromShape(m),y,a.dtype);g=n.makeTensorInfo(y,a.dtype),n.texData.get(g.dataId).values=t}else g=function(e,t,n,r){const a=pa.sizeFromShape(t),s=qO({inputs:{x:e},attrs:{shape:[pa.sizeFromShape(e.shape)/a,a]},backend:r}),i=ZO(s,e.dtype,"max",r),o=qO({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(p,m,y,n);return h&&n.disposeIntermediateTensorInfo(p),g}var jP={kernelName:Tn,backendName:"webgl",kernelFunc:HP},qP=BO({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:_M}),KP={kernelName:En,backendName:"webgl",kernelFunc:qP},XP={kernelName:Cn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;lD(a,"maxPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;pa.assert(Qp.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=Qp.computePool2DInfo(a.shape,s,i,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&pa.arraysEqual(l.inShape,l.outShape))return _O({inputs:{x:a},backend:n});const c=new DL(l,"max",!1);return n.runWebGLProgram(c,[a],a.dtype)}},YP={kernelName:$n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dataFormat:u,dimRoundingMode:l}=r,c=Qp.computePool3DInfo(a.shape,s,i,[1,1,1],o,l,u),h=new ML(c,"max",!1);return n.runWebGLProgram(h,[a],a.dtype)}},ZP={kernelName:An,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,h=Qp.computePool3DInfo(i.shape,o,u,[1,1,1],l,c),d=new ML(h,"max",!0),p=n.runWebGLProgram(d,[i],i.dtype),f=new class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=u-1-e.padInfo.top,d=l-1-e.padInfo.left,p=o*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(h),m=n.runWebGLProgram(f,[a,p],i.dtype);return n.disposeIntermediateTensorInfo(p),m}},JP={kernelName:_n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;lD([s,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,d=Qp.computePool2DInfo(o.shape,u,l,1,c,h),p=new DL(d,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=s-1-e.padInfo.left,u=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(d),g=n.runWebGLProgram(m,[a,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},QP={kernelName:Fn,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{x:a}=t,{filterSize:s,strides:i,pad:o,includeBatchInIndex:u}=n,l=r;pa.assert(4===a.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${a.shape.length}.`));const c=[1,1];pa.assert(Qp.eitherStridesOrDilationsAreOne(i,c),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const h=Qp.computePool2DInfo(a.shape,s,i,c,o),[d,p]=function(e,t,n,r){let a=new DL(n,"max",!1);const s=r.runWebGLProgram(a,[e],"float32");return a=new DL(n,"max",!0,!0,t),[s,r.runWebGLProgram(a,[e],"float32")]}(a,u,h,l);return[d,p]}},eB={kernelName:Rn,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{x:a}=t,{keepDims:s,axis:i}=n,o=r,u=a.shape.length,l=pa.parseAxisParam(i,a.shape);let c=l;const h=Qp.getAxesPermutation(c,u),d=null!=h,p=o.shouldExecuteOnCPU([a]),f=[];let m=a;if(d){if(p){const e=o.texData.get(m.dataId).values,t=new Array(u);for(let e=0;e<t.length;e++)t[e]=a.shape[h[e]];const n=ZM(e,a.shape,a.dtype,h,t);m=o.makeTensorInfo(t,a.dtype),o.texData.get(m.dataId).values=n}else m=JO(a,h,o);f.push(m),c=Qp.getInnerMostAxes(c.length,u)}Qp.assertAxesAreInnerMostDims("sum",c,u);const[g,y]=Qp.computeOutAndReduceShapes(m.shape,c);let b=g;s&&(b=Qp.expandShapeToKeepDim(g,l));const x=function(e,t,n,r){const a=pa.sizeFromShape(t),s=qO({inputs:{x:e},attrs:{shape:[pa.sizeFromShape(e.shape)/a,a]},backend:r}),i=ZO(s,"float32","mean",r),o=qO({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(m,y,b,o);for(const e of f)o.disposeIntermediateTensorInfo(e);return x}},tB={kernelName:Dn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=pa.parseAxisParam(s,a.shape);let l=u;const c=Qp.getAxesPermutation(l,o);let h=a;null!=c&&(h=tL({inputs:{x:a},backend:n,attrs:{perm:c}}),l=Qp.getInnerMostAxes(l.length,a.shape.length)),Qp.assertAxesAreInnerMostDims("min",l,o);const[d,p]=Qp.computeOutAndReduceShapes(h.shape,l),f=qO({inputs:{x:h},backend:n,attrs:{shape:[-1,pa.sizeFromShape(p)]}}),m=ZO(f,f.dtype,"min",n);let g;return g=qO(i?{inputs:{x:m},backend:n,attrs:{shape:Qp.expandShapeToKeepDim(d,u)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},nB=BO({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:$M}),rB={kernelName:Mn,backendName:"webgl",kernelFunc:nB},aB={kernelName:On,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e;const{x:a}=t,{paddings:s,mode:i}=r,o=Ue().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=MD(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=eO("rc",r),u=eO("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===r){const e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${l}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}(a.shape,s,i):new class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=MD(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}(a.shape,s,i);return n.runWebGLProgram(o,[a],a.dtype)}},sB=BO({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),iB={kernelName:Ln,backendName:"webgl",kernelFunc:sB},oB=BO({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),uB={kernelName:Vt,backendName:"webgl",kernelFunc:oB},lB="return a - b;",cB=BO({opSnippet:lB,packedOpSnippet:lB,supportsComplex:!0,cpuKernelImpl:KM}),hB={kernelName:Lr,backendName:"webgl",kernelFunc:cB};function dB(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=pa.parseAxisParam([s],a.shape),o=HP({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),u=Qp.expandShapeToKeepDim(o.shape,i),l=qO({inputs:{x:o},backend:n,attrs:{shape:u}}),c=cB({inputs:{a,b:l},backend:n}),h=jz({inputs:{x:c},backend:n}),d=QO({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),p=qO({inputs:{x:d},backend:n,attrs:{shape:u}}),f=oB({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}var pB={kernelName:Nr,backendName:"webgl",kernelFunc:dB},fB={kernelName:zn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r,u=o?a:dB({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),l=u.shape[0],c=u.shape[1],h=new class{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}(l,c,s),d=[[i]],p=n.runWebGLProgram(h,[u],"int32",d);return o||n.disposeIntermediateTensorInfo(u),p}},mB={kernelName:Bn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,a]=FM(e.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,t)}let a;return a=Ue().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new xO(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new sO(r.shape,"if (isnan(x)) return x;\n  return -x;\n"),n.runWebGLProgram(a,[r],r.dtype)}},gB=Qf.nonMaxSuppressionV3Impl,yB={kernelName:Vn,backendName:"webgl",kernelFunc:function(e){Qp.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r,l=n.readSync(a.dataId),c=n.readSync(s.dataId),{selectedIndices:h}=gB(l,c,i,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},bB=Qf.nonMaxSuppressionV4Impl,xB={kernelName:Un,backendName:"webgl",kernelFunc:function(e){Qp.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r,c=n.readSync(a.dataId),h=n.readSync(s.dataId),{selectedIndices:d,validOutputs:p}=bB(c,h,i,o,u,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},vB=Qf.nonMaxSuppressionV5Impl,wB={kernelName:Gn,backendName:"webgl",kernelFunc:function(e){Qp.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r,c=n.readSync(a.dataId),h=n.readSync(s.dataId),d=i,p=o,f=u,m=l,{selectedIndices:g,selectedScores:y}=vB(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},kB={kernelName:jn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r,u=pa.sizeFromShape(a.shape),l=new class{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}(u,s,i,o),c=qO({inputs:{x:a},backend:n,attrs:{shape:[u]}}),h=n.runWebGLProgram(l,[c],a.dtype);n.disposeIntermediateTensorInfo(c);const d=qO({inputs:{x:h},backend:n,attrs:{shape:[...a.shape,s]}});return n.disposeIntermediateTensorInfo(h),d}};function IB(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=YL({inputs:{input:r},backend:n}),t=IB({inputs:{x:e},backend:n}),a=iz({inputs:{input:r},backend:n}),s=IB({inputs:{x:a},backend:n}),i=AO({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return nP({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}var SB={kernelName:qr,backendName:"webgl",kernelFunc:IB},NB={kernelName:Hn,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){const t=YL({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=iz({inputs:{input:a},backend:r}),i=IB({inputs:{x:s},backend:r}),o=AO({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return nP({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}},TB={kernelName:qn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return Kz({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,i=t[0].dtype;t.forEach((e=>{pa.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),pa.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=lz({inputs:t.map((e=>{const t=Kz({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}},EB=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;if(0===pa.sizeFromShape(a.shape))return nP({backend:n,attrs:{shape:s.map(((e,t)=>e[0]+a.shape[t]+e[1])),value:i,dtype:a.dtype}});const o=Ue().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=MD(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=eO("rc",r),u=eO("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h=[`${a} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${l}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let e=0,t=1===r?2:4;e<t;e++)p+=`\n        ${h[e]}\n        if (${d}) {\n          result[${e}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${e}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}(a.shape,s,i):new class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=MD(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}(a.shape,s,i),u=[[i]];return n.runWebGLProgram(o,[a],a.dtype,u)},CB={kernelName:Kn,backendName:"webgl",kernelFunc:EB},_B=BO({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),$B={kernelName:Yn,backendName:"webgl",kernelFunc:_B},AB={kernelName:Jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=[],l=pa.parseAxisParam(s,a.shape);let c=l;const h=Qp.getAxesPermutation(c,o);let d,p=a;if(null!=h&&(p=tL({inputs:{x:a},backend:n,attrs:{perm:h}}),c=Qp.getInnerMostAxes(c.length,o),u.push(p)),Qp.assertAxesAreInnerMostDims("prod",c,o),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:r,outDtype:a}=DM(p.shape,p.dtype,e,c);d=n.makeTensorInfo(r,a,t)}else{const[e,t]=Qp.computeOutAndReduceShapes(p.shape,c),r=pa.sizeFromShape(t),s=qO({inputs:{x:p},backend:n,attrs:{shape:[-1,r]}}),i=ZO(s,us(a.dtype),"prod",n);d=qO({inputs:{x:i},backend:n,attrs:{shape:e}}),u.push(s),u.push(i)}if(i){u.push(d);const e=Qp.expandShapeToKeepDim(d.shape,l);d=qO({inputs:{x:d},backend:n,attrs:{shape:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},FB=e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=MM(r,a,s,i);return t.makeTensorInfo([o.length],i,o)},RB={kernelName:Qn,backendName:"webgl",kernelFunc:FB},DB=PO({opSnippet:"return 1.0 / x;"}),MB={kernelName:tr,backendName:"webgl",kernelFunc:DB},OB=PO({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),LB={kernelName:nr,backendName:"webgl",kernelFunc:OB},zB=PO({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),PB={kernelName:ur,backendName:"webgl",kernelFunc:zB},BB={kernelName:ir,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[u,l]=o,c=Ue().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}(a.shape,u,l,s,i):new class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}(a.shape,u,l,s,i);return n.runWebGLProgram(c,[a],"float32")}},WB={kernelName:or,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}},VB={kernelName:ar,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[u,l]=o,c=Ue().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}(a.shape,u,l,s,i):new class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}(a.shape,u,l,s,i);return n.runWebGLProgram(c,[a],a.dtype)}},UB={kernelName:sr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}},GB={kernelName:lr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=a.shape.length,o=pa.parseAxisParam(s,a.shape);if(0===i)return _O({inputs:{x:a},backend:n});const u=Ue().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=eO("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=MD(n);var o;function u(n){const r=e.map(((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(a,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${o=r.slice(),u(o)};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",u(e)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",u(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",u(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}(a.shape,o):new class{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),a=MD(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}(a.shape,o);return n.runWebGLProgram(u,[a],a.dtype)}},HB={kernelName:Yr,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{image:a}=t,{radians:s,fillValue:i,center:o}=n,u=r,l=new class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}(a.shape,i),[c,h]=Qp.getImageCenter(o,a.shape[1],a.shape[2]),d=[[c,h,Math.sin(s),Math.cos(s)]];return u.runWebGLProgram(l,[a],a.dtype,d)}},jB=PO({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),qB={kernelName:cr,backendName:"webgl",kernelFunc:jB},KB=PO({opSnippet:"return inversesqrt(x);",cpuKernelImpl:OM}),XB={kernelName:hr,backendName:"webgl",kernelFunc:KB},YB=class{constructor(e,t,n,r,a,s){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const i=MD(a.length),o=MD(s.length);let u="";1===n?u="i":2===n&&(u="i, j");const l=`getIndices(${u})`;let c="";1===r?c="i":2===r&&(c="i, coords[1]");const h=`getUpdates(${c})`,d=t>1?"strides[j]":"strides";this.userCode=`\n        ${i} strides = ${i}(${a});\n\n        void main() {\n          ${o} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${l});\n              flattenedIndex += index * ${d};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${h};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}},ZB={kernelName:dr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=Qp.calculateShapes(s,a,i),d=[h/l,l];if(0===h)return n.makeTensorInfo(i,a.dtype);const p=qO({inputs:{x:a},backend:n,attrs:{shape:[u,o]}}),f=qO({inputs:{x:s},backend:n,attrs:{shape:[u,l]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new YB(u,o,p.shape.length,f.shape.length,c,d),y=n.runWebGLProgram(g,[f,p,m],f.dtype),b=qO({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}},JB={kernelName:pr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=new class{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&s.push(`${n[r]}`);r=s.join(),a=i.join()}const s=MD(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(i,[r,a,s],os(a.dtype,s.dtype))}},QB=PO({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Qp.SELU_SCALEALPHA};\n  float scale = ${Qp.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),eW={kernelName:fr,backendName:"webgl",kernelFunc:QB},tW=PO({opSnippet:"if (isnan(x)) return x;\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:LM}),nW={kernelName:xr,backendName:"webgl",kernelFunc:tW},rW=PO({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),aW={kernelName:br,backendName:"webgl",kernelFunc:rW},sW=PO({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),iW={kernelName:gr,backendName:"webgl",kernelFunc:sW},oW=PO({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),uW={kernelName:yr,backendName:"webgl",kernelFunc:oW},lW=PO({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),cW={kernelName:vr,backendName:"webgl",kernelFunc:lW},hW={kernelName:Ir,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;pa.assert(a.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=s.reduce(((e,t)=>e*t)),u=[[0,0]];u.push(...i);for(let e=1+s.length;e<a.shape.length;++e)u.push([0,0]);const l=[],c=EB({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),h=Qp.getReshaped(c.shape,s,o,!1),d=Qp.getPermuted(h.length,s.length,!1),p=Qp.getReshapedPermuted(c.shape,s,o,!1),f=qO({inputs:{x:c},backend:n,attrs:{shape:h}}),m=tL({inputs:{x:f},backend:n,attrs:{perm:d}}),g=qO({inputs:{x:m},backend:n,attrs:{shape:p}});return l.push(c),l.push(f),l.push(m),l.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}},dW={kernelName:Tr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n         ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(r.dataId),u=n.readSync(a.dataId),l=n.readSync(s.dataId),c=n.readSync(i.dataId)[0],[h,d,p,f,m]=BM(o,r.shape,r.dtype,u,a.dtype,l,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],a.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},pW={kernelName:Er,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.readSync(a.dataId)),o=n.readSync(r.dataId),u=Array.from(n.readSync(s.dataId)),[l,c,h]=WM(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}},fW={kernelName:Cr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${s.shape}`);const i=n.readSync(r.dataId),o=n.readSync(a.dataId),u=n.readSync(s.dataId),[l,c]=VM(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}},mW={kernelName:_r,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${s.shape}`);const i=n.readSync(r.dataId),o=n.readSync(a.dataId),u=n.readSync(s.dataId),[l,c]=VM(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}},gW={kernelName:$r,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,strides:c,outputSize:h}=Qp.calculateShapes(s,a,o),d=new YB(l,u,a.shape.length,s.shape.length,c,[h,1],!1),p=n.runWebGLProgram(d,[s,a,i],s.dtype),f=qO({inputs:{x:p},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(p),f}},yW={kernelName:Sr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=pa.parseAxisParam(i,a.shape)[0],u=Qp.prepareSplitSize(a,s,o),l=a.shape.length,c=new Array(l).fill(0),h=a.shape.slice();return u.map((e=>{const t=[...h];t[o]=e;const r=UL({inputs:{x:a},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,r}))}},bW="return sqrt(x);",xW=PO({opSnippet:bW,packedOpSnippet:bW,cpuKernelImpl:UM}),vW={kernelName:wr,backendName:"webgl",kernelFunc:xW},wW=PO({opSnippet:"return x * x;"}),kW={kernelName:Fr,backendName:"webgl",kernelFunc:wW},IW="return (a - b) * (a - b);",SW=BO({opSnippet:IW,packedOpSnippet:IW}),NW={kernelName:Ar,backendName:"webgl",kernelFunc:SW},TW={kernelName:Kr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e;const{x:a}=t,s=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${n.alpha});\n  `,i=new sO(a.shape,s);return r.runWebGLProgram(i,[a],a.dtype)}},EW={kernelName:Rr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=yo.sliceInfo(a.shape,s,i,o,u,l,c,h,d);let w;if(m)w=qO({inputs:{x:a},backend:n,attrs:{shape:f}});else if(g||y){pa.assert(a.shape.length>=1,(()=>`Input must have rank at least 1, got: ${a.shape.length}`));const e=yo.computeOutShape(b,x,v),t=UL({inputs:{x:a},backend:n,attrs:{begin:b,size:e}});w=qO({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else if(n.shouldExecuteOnCPU([a])){const e=n.readSync(a.dataId),t=Ei(a.shape,a.dtype,e),r=GM(p,t,v,b);w=n.makeTensorInfo(f,a.dtype,r.values)}else{const e=new class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=MD(n.length),s=MD(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}(b,v,p);w=n.runWebGLProgram(e,[a],a.dtype)}const k=qO({inputs:{x:w},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(w),k}},CW={kernelName:Dr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:h}=t,d=n.readSync(c.dataId),p=n.readSync(h.dataId),[f,m]=HM(d,p,a,s,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}},_W={kernelName:Mr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(s.dataId),u=n.readSync(i.dataId)[0],[l,c,h]=jM(o,u,a),d=c.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},$W={kernelName:Or,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(s.dataId),o=qM(i,a);return n.makeTensorInfo(s.shape,"int32",o)}},AW=PO({opSnippet:"return tan(x);"}),FW={kernelName:zr,backendName:"webgl",kernelFunc:AW},RW=PO({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),DW={kernelName:Pr,backendName:"webgl",kernelFunc:RW};function MW(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;if("string"===a.dtype||a.shape.length>5){const e=n.readSync(a.dataId),t="string"===a.dtype?e.map((e=>pa.decodeString(e))):e,r=Ei(a.shape,a.dtype,t),i=XM(r,s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new class{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=MD(this.rank),a=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}(a.shape,s);return n.runWebGLProgram(i,[a],a.dtype)}var OW={kernelName:Br,backendName:"webgl",kernelFunc:MW},LW=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}};function zW(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function PW(e){let t=1;for(;t<e;)t*=2;return t}var BW,WW,VW,UW,GW,HW=[aL,iL,uL,cL,pL,fL,mL,gL,kL,IL,NL,EL,_L,AL,RL,OL,LL,zL,PL,BL,WL,HL,jL,qL,JL,tz,nz,FO,az,cz,fz,mz,gz,yz,bz,xz,wz,Iz,Sz,Cz,_z,$z,Rz,Dz,Mz,Oz,Lz,zz,Bz,Wz,Uz,Hz,qz,Xz,Jz,tP,aP,sP,uP,cP,hP,dP,pP,fP,gP,bP,vP,$O,wP,oz,IP,NP,EP,MO,_P,AP,FP,DP,OP,zP,BP,VP,UP,GP,jP,KP,XP,YP,ZP,JP,QP,eB,tB,rB,aB,iB,fB,jO,mB,yB,xB,wB,XL,kB,NB,TB,CB,$B,zO,AB,RB,ZL,uB,MB,LB,PB,KO,BB,WB,VB,UB,GB,HB,qB,XB,ZB,JB,eW,nW,aW,iW,uW,GL,pB,cW,hW,dW,pW,fW,mW,gW,yW,vW,kW,NW,TW,EW,CW,_W,$W,hB,eL,FW,DW,OW,{kernelName:Wr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r,o=Ue().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=Ue().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=a.shape,c=l[l.length-1];if(n.shouldExecuteOnCPU([a])||c<o||s>u){const e=n.readSync(a.dataId),[t,r]=YM(e,l,a.dtype,s,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===s)return l[l.length-1]=0,[n.makeTensorInfo(l,a.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(1===c)return[a,nP({attrs:{shape:l,dtype:"int32",value:0},backend:n})];const h=n.texData.get(a.dataId),d=null!==h&&h.isPacked,p=d?n.unpackTensor(a):a,f=pa.sizeFromShape(l)/c,m=qO({inputs:{x:p},attrs:{shape:[f,c]},backend:n});d&&zW(n,p);const g=PW(s),y=PW(c);let b=null;const x=()=>null===b?[m,m]:[m,b],v=(e,t,r)=>{const a=x(),s=new class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}(r),i=[[c],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=b;b=n.runWebGLProgram(s,a,"int32",i),zW(n,o)};for(let e=1;e<g;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)v(t,n,[f,y])}for(let e=y;e>g;e/=2){const t=x(),r=new LW([f,e/2]),a=[[c],[null===b?1:0],[g]],s=b;b=n.runWebGLProgram(r,t,"int32",a),zW(n,s);const i=g/2,o=2*i;for(let e=i;e>=1;e/=2)v(o,e,b.shape)}let w=b;b=UL({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,s]}}),zW(n,w);let k=mP({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});zW(n,m);const I=l.slice(0,-1);I.push(s),w=b,b=qO({inputs:{x:b},attrs:{shape:I},backend:n}),zW(n,w);const S=k;return k=qO({inputs:{x:k},attrs:{shape:I},backend:n}),zW(n,S),[k,b]}},{kernelName:Vr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=r,[c,h,d,p]=a.shape,[f,m]=null!=l?l:[h,d],g=[c,f,m,p],y=new class{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const i="nearest"===n?1:2;let o;switch(r){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}(h,d,i,o,u,g);return n.runWebGLProgram(y,[a,s],"float32")}},nL,{kernelName:Gr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;lD(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(s.dataId),{outputValues:o,outputShape:u,indices:l}=JM(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}},{kernelName:Hr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a,o=i.shape.length,u=a.shape[s],l=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==s&&(l[c++]=i.shape[e]);const h=[],d=new Array(o).fill(0),p=i.shape.slice();p[s]=1;const f=new Array(u);for(let e=0;e<f.length;e++){d[s]=e;const t=UL({inputs:{x:i},backend:n,attrs:{begin:d,size:p}}),r=qO({inputs:{x:t},backend:n,attrs:{shape:l}});f[e]=r,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}},{kernelName:jr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r,o=a.shape.length,u=[];let l=0;const c=Qp.getAxesPermutation([l],o);let h=a;null!=c&&(h=tL({inputs:{x:a},backend:n,attrs:{perm:c}}),u.push(h),l=Qp.getInnerMostAxes(1,o)[0]);const d=Qp.segment_util.computeOutShape(h.shape,l,i),p=pa.sizeFromShape([h.shape[l]]),f=qO({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});u.push(f);const m=us(a.dtype),g=(e,t,r,a,s)=>{const i=e.shape[0],o=e.shape[1],l=Qp.segment_util.segOpComputeOptimalWindowSize(o,s),c={windowSize:l,inSize:o,batchSize:i,numSegments:s},h=new class{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let h="";a%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}(c,t),d=n.compileAndRun(h,[e,r],a);if(u.push(d),d.shape[1]===s)return d;const p=FB({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),f=MW({inputs:{x:p},backend:n,attrs:{reps:[o/l]}});return u.push(p),u.push(f),g(d,t,f,a,s)},y=qO({inputs:{x:g(f,"unsortedSegmentSum",s,m,i)},backend:n,attrs:{shape:d}});let b=y;if(null!=c){u.push(y);const e=Qp.getUndoAxesPermutation(c);b=tL({inputs:{x:b},backend:n,attrs:{perm:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},SB];for(const e of HW)oa(e);(WW=BW||(BW={}))[WW.float32=0]="float32",WW[WW.int32=1]="int32",WW[WW.bool=2]="bool",WW[WW.string=3]="string",WW[WW.complex64=4]="complex64",(UW=VW||(VW={}))[UW.linear=0]="linear",UW[UW.relu=1]="relu",UW[UW.relu6=2]="relu6",UW[UW.prelu=3]="prelu",UW[UW.leakyrelu=4]="leakyrelu",UW[UW.sigmoid=5]="sigmoid",UW[UW.elu=6]="elu";var jW={kernelName:Zr,backendName:"wasm",setupFunc:function(e){GW=e.wasm.cwrap(Zr,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");const{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r,d=n.dataIdMap.get(a.dataId).id,p=n.dataIdMap.get(s.dataId).id;let f=0;if(null!=i){const e=n.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${e.shape.length}.`);f=e.id}const m=null==o?0:n.dataIdMap.get(o.dataId).id,g=VW[c];if(null==g)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);const y=u?a.shape[2]:a.shape[1],b=l?s.shape[1]:s.shape[2],x=Ji.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)),v=n.makeOutput([...x,y,b],a.dtype),w=n.dataIdMap.get(v.dataId).id,k=new Uint8Array(new Int32Array(a.shape).buffer),I=new Uint8Array(new Int32Array(s.shape).buffer);return GW(d,k,a.shape.length,p,I,s.shape.length,u,l,g,f,m,h||0,w),v}};function qW(e,t){let n;return{kernelName:e,backendName:"wasm",setupFunc:function(t){n=t.wasm.cwrap(e,null,["number","number","number"])},kernelFunc:function(e){const{backend:r,inputs:{x:a}}=e,s=r.dataIdMap.get(a.dataId).id,i=r.makeOutput(a.shape,t||a.dtype),o=r.dataIdMap.get(i.dataId).id;return 0===pa.sizeFromShape(i.shape)||n(s,BW[a.dtype],o),i}}}var KW=qW(Ke);function XW(e,t,n){let r;return{kernelName:e,backendName:"wasm",setupFunc:function(t){r=t.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:a}=e,{a:s,b:i}=a,o=t.dataIdMap.get(s.dataId).id,u=t.dataIdMap.get(i.dataId).id,l=null!=n?n:s.dtype,c=Qp.assertAndGetBroadcastShape(s.shape,i.shape),h=t.makeOutput(c,l);if(0===pa.sizeFromShape(c))return h;const d=new Uint8Array(new Int32Array(s.shape).buffer),p=new Uint8Array(new Int32Array(i.shape).buffer),f=t.dataIdMap.get(h.dataId).id;return r(o,d,s.shape.length,u,p,i.shape.length,BW[s.dtype],f),h}}}var YW,ZW=XW(Ze),JW={kernelName:Je,backendName:"wasm",setupFunc:function(e){YW=e.wasm.cwrap(Je,null,["array","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,r=n.makeOutput(t[0].shape,t[0].dtype);if(0===pa.sizeFromShape(r.shape))return r;const a=t.map((e=>n.dataIdMap.get(e.dataId).id)),s=new Uint8Array(new Int32Array(a).buffer),i=n.dataIdMap.get(r.dataId).id;return YW(s,a.length,BW[r.dtype],i),r}};function QW(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype),a=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(a),r}var eV,tV={kernelName:un,backendName:"wasm",kernelFunc:QW};function nV(e){const{inputs:t,backend:n,attrs:r}=e,[a,s]=function(e,t){const n=[],r=[];for(let a=0;a<e.length;++a)1!==e[a]&&n.push(e[a]),1!==e[t[a]]&&r.push(t[a]);for(let e=0;e<r.length;++e){let t=-1;for(let n=0;n<r.length;++n)r[n]>=e&&(-1===t||r[t]>r[n])&&(t=n);r[t]=e}return[n,r]}(t.x.shape,r.perm);let i=!0;for(let e=0;e<s.length;e++)s[e]!==e&&(i=!1);const o=function(e,t){const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];return n}(t.x.shape,r.perm),u={dataId:t.x.dataId,shape:a,dtype:t.x.dtype};if(i){const e=QW({inputs:t,backend:n});return e.shape=o,e}const l=n.makeOutput(o,u.dtype),c=n.dataIdMap.get(u.dataId).id,h=n.dataIdMap.get(l.dataId).id,d=new Uint8Array(new Int32Array(s).buffer),p=new Uint8Array(new Int32Array(u.shape).buffer);return eV(c,p,u.shape.length,BW[u.dtype],h,d,s.length),l}var rV,aV={kernelName:Ur,backendName:"wasm",kernelFunc:nV,setupFunc:function(e){eV=e.wasm.cwrap(Ur,null,["number","array","number","number","number","array","number"])}};function sV(e,t,n){const r=e.shape,a=e.shape.length,s=pa.parseAxisParam(t,r);let i=s;const o=Qp.getAxesPermutation(i,a);let u=null,l=!1;if(null!=o){const t=new Array(a);for(let e=0;e<t.length;e++)t[e]=r[o[e]];i=Qp.getInnerMostAxes(i.length,a),u=nV({inputs:{x:e},attrs:{perm:o},backend:n});const s=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(u.dataId).id!==s&&(l=!0)}return{transposed:u,originalAxes:s,axes:i,inputWasTransposed:l}}var iV,oV,uV,lV={kernelName:Qe,backendName:"wasm",setupFunc:function(e){rV=e.wasm.cwrap(Qe,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n;let o=t.dataIdMap.get(i.dataId).id,u=i;const{transposed:l,axes:c,originalAxes:h,inputWasTransposed:d}=sV(i,a,t);d&&(u=l,o=t.dataIdMap.get(l.dataId).id);const p=u.shape.length;Qp.assertAxesAreInnerMostDims("all",c,p);const[f,m]=Qp.computeOutAndReduceShapes(u.shape,c),g=pa.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==pa.sizeFromShape(u.shape)){const e=t.dataIdMap.get(y.dataId).id;rV(o,g,e)}if(d&&t.disposeData(l.dataId),s){const e=Qp.expandShapeToKeepDim(y.shape,h);y.shape=e}return y}},cV={kernelName:et,backendName:"wasm",setupFunc:function(e){iV=e.wasm.cwrap(et,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n;let o=t.dataIdMap.get(i.dataId).id,u=i;const{transposed:l,axes:c,originalAxes:h,inputWasTransposed:d}=sV(i,a,t);d&&(u=l,o=t.dataIdMap.get(l.dataId).id);const p=u.shape.length;Qp.assertAxesAreInnerMostDims("any",c,p);const[f,m]=Qp.computeOutAndReduceShapes(u.shape,c),g=pa.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==pa.sizeFromShape(u.shape)){const e=t.dataIdMap.get(y.dataId).id;iV(o,g,e)}if(d&&t.disposeData(l.dataId),s){const e=Qp.expandShapeToKeepDim(y.shape,h);y.shape=e}return y}},hV={kernelName:tt,backendName:"wasm",kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id;let o=i,u=s;const{transposed:l,axes:c,inputWasTransposed:h}=sV(s,a,t);if(h){const e=t.dataIdMap.get(l.dataId).id;e!==i&&(u=l,o=e)}const d=u.shape.slice(0,-1),p=t.makeOutput(d,"int32"),f=t.dataIdMap.get(p.dataId).id,m=pa.sizeFromShape(p.shape),g=u.shape[c[0]];return oV(o,BW[u.dtype],m,g,f),h&&t.disposeData(l.dataId),p},setupFunc:function(e){oV=e.wasm.cwrap(tt,null,["number","number","number","number","number"])}},dV={kernelName:ut,backendName:"wasm",setupFunc:function(e){uV=e.wasm.cwrap(ut,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=n,c=Qp.computePool2DInfo(a.shape,i,o,1,u,l),h=c.filterHeight,d=c.filterWidth,p=c.padInfo.top,f=c.padInfo.right,m=c.padInfo.bottom,g=c.padInfo.left,y=c.strideHeight,b=c.strideWidth,x=c.inChannels;if("channelsLast"!==c.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);if(1!==c.dilationWidth||1!==c.dilationHeight)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${c.dilationHeight}, ${c.dilationWidth}].`);const v=r.makeOutput(c.outShape,"float32"),w=r.dataIdMap.get(v.dataId).id;return uV(s,a.shape[0],a.shape[1],a.shape[2],h,d,p,f,m,g,y,b,x,w),v}};function pV(e){const{inputs:t,attrs:n}=e,{x:r}=t,{shape:a}=n,s=pa.sizeFromShape(r.shape),i=pa.inferFromImplicitShape(a,s);return pa.assert(s===pa.sizeFromShape(i),(()=>`new shape: ${i}, old shape: ${r.shape}. New shape and old shape must have the same number of elements.`)),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:i,dtype:r.dtype}}var fV,mV={kernelName:rr,backendName:"wasm",kernelFunc:pV},gV={kernelName:dt,backendName:"wasm",setupFunc:function(e){fV=e.wasm.cwrap(dt,null,["number","array","number","number","array","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");const u=a.shape.length,l=s.shape.length,c=i?a.shape[u-2]:a.shape[u-1],h=o?s.shape[l-1]:s.shape[l-2],d=i?a.shape[u-1]:a.shape[u-2],p=o?s.shape[l-2]:s.shape[l-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=pa.sizeFromShape(f),y=pa.sizeFromShape(m),b=Ji.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([d,p]);pa.assert(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));const x=o?[y,p,h]:[y,h,p],v=pV({inputs:{x:a},backend:n,attrs:{shape:i?[g,c,d]:[g,d,c]}}),w=pV({inputs:{x:s},backend:n,attrs:{shape:x}}),k=n.dataIdMap.get(v.dataId).id,I=n.dataIdMap.get(w.dataId).id,S=i?v.shape[2]:v.shape[1],N=o?w.shape[1]:w.shape[2],T=Math.max(g,y),E=n.makeOutput([T,S,N],v.dtype),C=n.dataIdMap.get(E.dataId).id,_=new Uint8Array(new Int32Array(v.shape).buffer),$=new Uint8Array(new Int32Array(w.shape).buffer);return fV(k,_,v.shape.length,I,$,w.shape.length,i,o,C),n.disposeData(v.dataId),n.disposeData(w.dataId),E.shape=b,E}};function yV(e){const{inputs:{x:t},attrs:{begin:n,size:r},backend:a}=e,[s,i]=yo.parseSliceParams(t,n,r),o=yo.isSliceContinous(t.shape,s,i),u=a.readSync(t.dataId),l=a.makeOutput(i,t.dtype),c=pa.computeStrides(t.shape),h=a.dataIdMap.get(l.dataId);if(o){const e=yo.computeFlatOffset(s,c);return"string"===t.dtype?h.stringBytes=u.slice(e,e+pa.sizeFromShape(i)):a.typedArrayFromHeap(l).set(u.subarray(e,e+pa.sizeFromShape(i))),l}if("string"===t.dtype){const e=RC(u,s,i,t.shape,t.dtype);return h.stringBytes=e,l}const d=a.typedArrayFromHeap(l),p=t.shape.length;if(2===p)!function(e,t,n,r,a){let s=0;const i=r[0],o=r[1],u=i+a[0];for(let r=i;r<u;r++){const i=r*t+o;n.set(e.subarray(i,i+a[1]),s),s+=a[1]}}(u,c[0],d,s,i);else if(3===p)!function(e,t,n,r,a,s){let i=0;const o=a[0],u=a[1],l=a[2],c=o+s[0],h=u+s[1];for(let a=o;a<c;a++)for(let o=u;o<h;o++){const u=a*t+o*n+l;r.set(e.subarray(u,u+s[2]),i),i+=s[2]}}(u,c[0],c[1],d,s,i);else if(4===p)!function(e,t,n,r,a,s,i){let o=0;const u=s[0],l=s[1],c=s[2],h=u+i[0],d=l+i[1],p=c+i[2],f=s[3];for(let s=u;s<h;s++)for(let u=l;u<d;u++)for(let l=c;l<p;l++){const c=s*t+u*n+l*r+f;a.set(e.subarray(c,c+i[3]),o),o+=i[3]}}(u,c[0],c[1],c[2],d,s,i);else{const e=RC(u,s,i,t.shape,t.dtype);d.set(e)}return l}var bV={kernelName:mr,backendName:"wasm",kernelFunc:yV},xV={kernelName:pt,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r,o=s.reduce(((e,t)=>e*t)),u=Qp.getReshaped(a.shape,s,o),l=Qp.getPermuted(u.length,s.length),c=Qp.getReshapedPermuted(a.shape,s,o),h=Qp.getSliceBeginCoords(i,s.length),d=Qp.getSliceSize(c,i,s.length),p=pV({inputs:{x:a},backend:n,attrs:{shape:u}}),f=nV({inputs:{x:p},backend:n,attrs:{perm:l}}),m=yV({inputs:{x:pV({inputs:{x:f},backend:n,attrs:{shape:c}})},backend:n,attrs:{begin:h,size:d}});return n.disposeData(p.dataId),n.disposeData(f.dataId),n.disposeData(p.dataId),m}};function vV(e){const{inputs:{x:t},attrs:{dtype:n},backend:r}=e,a=r.makeOutput(t.shape,n),s=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(a).set(s),a}var wV,kV={kernelName:yt,backendName:"wasm",kernelFunc:vV},IV=qW(bt),SV={kernelName:xt,backendName:"wasm",setupFunc:function(e){wV=e.wasm.cwrap(xt,null,["number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r,o=n.dataIdMap.get(a.dataId).id,u=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(u.dataId).id;return wV(o,s,i,l),u}};function NV(e){const{inputs:t,backend:n}=e,r=pa.parseAxisParam(e.attrs.axis,t[0].shape)[0];let a=Qp.computeOutShape(t.map((e=>e.shape)),r);const s=t.filter((e=>pa.sizeFromShape(e.shape)>0));if(1===s.length)return QW({inputs:{x:s[0]},backend:n});const i=n.makeOutput(a,t[0].dtype);if(0===pa.sizeFromShape(a))return i;const o=s.map((e=>e.shape));if(Qp.assertParamsConsistent(o,r),"string"===s[0].dtype){const e=s.map((e=>{const t=pa.sizeFromShape(e.shape.slice(r));return pV({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),o=e.map((e=>({vals:n.readSync(e.dataId),shape:e.shape})));a=Qp.computeOutShape(e.map((e=>e.shape)),1);const u=1===e[0].shape[0],l=CE(o,a,t[0].dtype,u),c=Qp.computeOutShape(s.map((e=>e.shape)),r);return i.shape=c,n.dataIdMap.get(i.dataId).stringBytes=Qp.fromStringArrayToUint8(l),e.forEach((e=>n.disposeData(e.dataId))),i}const u=pa.sizeFromShape(s[0].shape.slice(0,r));let l=0;const c=s.map((e=>{const t=pa.sizeFromShape(e.shape.slice(r));return l+=t,t})),h=s.map((e=>n.typedArrayFromHeap(e))),d=n.typedArrayFromHeap(i);for(let e=0;e<u;e++){let t=e*l;for(let n=0;n<h.length;n++){const r=c[n],a=e*r,s=h[n].subarray(a,a+r);d.set(s,t),t+=r}}return i}var TV,EV,CV,_V,$V,AV={kernelName:kt,backendName:"wasm",kernelFunc:NV},FV={kernelName:It,backendName:"wasm",setupFunc:function(e){TV=e.wasm.cwrap(It,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:u,dilations:l,pad:c,dimRoundingMode:h,dataFormat:d}=n,p=Qp.convertConv2DDataFormat(d),f=Qp.computeConv2DInfo(a.shape,s.shape,u,l,c,h,!1,p),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,b=f.padInfo.right,x=f.padInfo.bottom,v=f.padInfo.left,w=f.dilationHeight,k=f.dilationWidth,I=f.strideHeight,S=f.strideWidth,N=f.inChannels,T=f.outChannels,E="SAME"===f.padInfo.type?1:0;if("channelsLast"!==f.dataFormat)throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);const C=r.makeOutput(f.outShape,"float32"),_=r.dataIdMap.get(C.dataId).id;return TV(i,a.shape[0],a.shape[1],a.shape[2],o,m,g,y,b,x,v,E,w,k,I,S,N,T,_),C}},RV={kernelName:Nt,backendName:"wasm",setupFunc:function(e){EV=e.wasm.cwrap(Nt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{dy:a,filter:s}=n,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,inputShape:c}=r,h=Qp.convertConv2DDataFormat(u),d=Qp.computeConv2DInfo(c,s.shape,i,1,o,l,!1,h),{batchSize:p,filterHeight:f,filterWidth:m,inChannels:g,inHeight:y,inWidth:b,outChannels:x,outHeight:v,outWidth:w,strideHeight:k,strideWidth:I}=d,S=f-1-d.padInfo.top,N=m-1-d.padInfo.left,T="channelsLast"===d.dataFormat,E=pa.computeStrides(d.inShape),C=pa.computeStrides(a.shape),[_,$,A]=pa.computeStrides(s.shape),F=E[0],R=T?E[1]:E[2],D=T?E[2]:1,M=T?1:E[1],O=C[0],L=T?C[1]:C[2],z=T?C[2]:1,P=T?1:C[1],B=t.makeOutput(d.inShape,"float32"),W=t.dataIdMap.get(B.dataId).id,V=t.dataIdMap.get(a.dataId).id,U=t.dataIdMap.get(s.dataId).id;return EV(V,U,p,f,m,y,b,g,v,w,x,k,I,S,N,_,$,A,F,R,D,M,O,L,z,P,W),B}},DV=qW(_t),MV=qW($t);(_V=CV||(CV={}))[_V.bilinear=0]="bilinear",_V[_V.nearest=1]="nearest";var OV,LV,zV,PV={kernelName:Ft,backendName:"wasm",setupFunc:function(e){$V=e.wasm.cwrap(Ft,null,["number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{method:a,extrapolationValue:s,cropSize:i}=r,{image:o,boxes:u,boxInd:l}=n,c=u.shape[0],[h,d]=i,p=[c,h,d,o.shape[3]];let f,m=t.dataIdMap.get(o.dataId);"float32"!==o.dtype&&(f=vV({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(f.dataId));const g=m.id,y=t.dataIdMap.get(u.dataId).id,b=t.dataIdMap.get(l.dataId).id,x=t.makeOutput(p,"float32"),v=t.dataIdMap.get(x.dataId).id,w=new Uint8Array(new Int32Array(o.shape).buffer);return $V(g,y,b,c,w,h,d,CV[a],s,v),null!=f&&t.disposeData(f.dataId),x}},BV={kernelName:At,backendName:"wasm",setupFunc:function(e){OV=e.wasm.cwrap(At,null,["number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,u=a.shape.length;pa.assert("float32"===a.dtype||"int32"===a.dtype,(()=>`cumsum does not support ${a.dtype} tensors in the WASM backend`));const l=Qp.getAxesPermutation([s],u);let c=a;null!==l&&(c=nV({inputs:{x:a},attrs:{perm:l},backend:n}));const h=Qp.getInnerMostAxes(1,u)[0];Qp.assertAxesAreInnerMostDims("cumsum",[h],u);const d=n.makeOutput(c.shape,c.dtype),p=c.shape[h],f=n.dataIdMap.get(c.dataId).id,m=n.dataIdMap.get(d.dataId).id;OV(f,i?1:0,o?1:0,p,m,BW[a.dtype]);let g=d;return null!==l&&(g=nV({inputs:{x:d},attrs:{perm:Qp.getUndoAxesPermutation(l)},backend:n}),n.disposeData(c.dataId),n.disposeData(d.dataId)),g}},WV={kernelName:Dt,backendName:"wasm",setupFunc:function(e){LV=e.wasm.cwrap(Dt,null,["number","number","number","array","number","array","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{blockSize:s,dataFormat:i}=r,o=a.shape[0],u=("NHWC"===i?a.shape[1]:a.shape[2])*s,l=("NHWC"===i?a.shape[2]:a.shape[3])*s,c=("NHWC"===i?a.shape[3]:a.shape[1])/(s*s),h="NHWC"===i?[o,u,l,c]:[o,c,u,l],d=t.makeOutput(h,"float32"),p=t.dataIdMap.get(a.dataId).id,f=new Uint8Array(new Int32Array(pa.computeStrides(a.shape)).buffer),m=new Uint8Array(new Int32Array(h).buffer),g=new Uint8Array(new Int32Array(pa.computeStrides(h)).buffer),y=t.dataIdMap.get(d.dataId).id;return LV(p,s,"NHWC"===i?1:0,f,a.shape.length-1,m,g,h.length,y),d}},VV={kernelName:Mt,backendName:"wasm",setupFunc:function(e){zV=e.wasm.cwrap(Mt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:u,dilations:l,pad:c,dimRoundingMode:h}=n,d=null==l?[1,1]:l,p=Qp.computeConv2DInfo(a.shape,s.shape,u,d,c,h,!0),f=p.filterHeight,m=p.filterWidth,g=p.padInfo.top,y=p.padInfo.right,b=p.padInfo.bottom,x=p.padInfo.left,v=p.dilationHeight,w=p.dilationWidth,k=p.strideHeight,I=p.strideWidth,S=p.inChannels,N=p.outChannels,T="SAME"===p.padInfo.type?1:0;if("channelsLast"!==p.dataFormat)throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);const E=r.makeOutput(p.outShape,"float32"),C=r.dataIdMap.get(E.dataId).id;return zV(i,a.shape[0],a.shape[1],a.shape[2],o,f,m,g,y,b,x,T,v,w,k,I,S,N,C),E}},UV=qW(Gt),GV=XW(qt,0,"bool"),HV=qW(Kt,"float32");function jV(e){const{inputs:t,attrs:n,backend:r}=e,{input:a}=t,{dim:s}=n,i=a.shape.length,o=a.shape.slice();let u=s;return s<0&&(pa.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+s+1),o.splice(u,0,1),pV({inputs:{x:a},backend:r,attrs:{shape:o}})}var qV={kernelName:Xt,backendName:"wasm",kernelFunc:jV};function KV(e){const{attrs:{shape:t,value:n,dtype:r},backend:a}=e,s=a.makeOutput(t,r);return a.typedArrayFromHeap(s).fill(n),s}var XV,YV,ZV,JV,QV,eU,tU,nU,rU,aU,sU,iU,oU,uU,lU={kernelName:Jt,backendName:"wasm",kernelFunc:KV},cU={kernelName:Qt,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{image:r}=t,a=n.makeOutput(r.shape,r.dtype),s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,[o,u,l,c]=r.shape;return XV(s,o,u,l,c,i),a},setupFunc:function(e){XV=e.wasm.cwrap(Qt,null,["number","number","number","number","number","number"])}},hU=qW(en),dU=XW(tn),pU={kernelName:nn,backendName:"wasm",setupFunc:function(e){YV=e.wasm.cwrap(nn,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{varianceEpsilon:a}=r,{x:s,mean:i,variance:o,offset:u,scale:l}=n,c=t.dataIdMap.get(s.dataId).id,h=t.dataIdMap.get(i.dataId).id,d=t.dataIdMap.get(o.dataId).id,p=null!=u?t.dataIdMap.get(u.dataId).id:0,f=null!=l?t.dataIdMap.get(l.dataId).id:0,m=t.makeOutput(s.shape,s.dtype);if(0===pa.sizeFromShape(s.shape))return m;const g=t.dataIdMap.get(m.dataId).id;return YV(c,h,d,p,f,a,g),m}},fU={kernelName:Jr,backendName:"wasm",setupFunc:function(e){ZV=e.wasm.cwrap(Jr,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dataFormat:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=n,m=Qp.computeConv2DInfo(a.shape,s.shape,u,c,l,d),g=VW[p];if(null==g)throw new Error(`${p} activation not yet supported for FusedConv2D in the wasm backend.`);const y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=m.outChannels;let v=0;if(null!=i){const e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==x)throw new Error(`FusedConv2D bias shape (${e.shape}) does not match the number of output channels (${x})`);v=e.id}const w=m.filterHeight,k=m.filterWidth,I=m.padInfo.top,S=m.padInfo.right,N=m.padInfo.bottom,T=m.padInfo.left,E=m.dilationHeight,C=m.dilationWidth,_=m.strideHeight,$=m.strideWidth,A=m.inChannels,F="SAME"===m.padInfo.type?1:0,R=m.batchSize,D=m.inHeight,M=m.inWidth;if("NHWC"!==h)throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);const O=r.makeOutput(m.outShape,"float32"),L=r.dataIdMap.get(O.dataId).id,z=null==o?0:r.dataIdMap.get(o.dataId).id;return ZV(y,R,D,M,b,w,k,v,I,S,N,T,F,E,C,_,$,A,x,g,z,f||0,L),O}},mU={kernelName:Qr,backendName:"wasm",setupFunc:function(e){JV=e.wasm.cwrap(Qr,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dataFormat:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=n,m=Qp.computeConv2DInfo(a.shape,s.shape,u,c,l,d,!0),g=VW[p];if(null==g)throw new Error(`${p} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);const y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=m.outChannels;let v=0;if(null!=i){const e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==x)throw new Error(`FusedDepthwiseConv2D bias shape (${e.shape}) does not match the number of output channels (${x})`);v=e.id}const w=m.filterHeight,k=m.filterWidth,I=m.padInfo.top,S=m.padInfo.right,N=m.padInfo.bottom,T=m.padInfo.left,E=m.dilationHeight,C=m.dilationWidth,_=m.strideHeight,$=m.strideWidth,A=m.inChannels,F="SAME"===m.padInfo.type?1:0,R=m.batchSize,D=m.inHeight,M=m.inWidth;if("NHWC"!==h)throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);const O=r.makeOutput(m.outShape,"float32"),L=r.dataIdMap.get(O.dataId).id,z=null==o?0:r.dataIdMap.get(o.dataId).id;return JV(y,R,D,M,b,w,k,v,I,S,N,T,F,E,C,_,$,A,x,g,z,f||0,L),O}},gU={kernelName:an,backendName:"wasm",setupFunc:function(e){QV=e.wasm.cwrap(an,null,["number","number","number","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{params:r,indices:a}=n,[s,i,o,u]=co.prepareAndValidate(r,a),l=t.makeOutput(s,r.dtype);if(0===i)return l;const c=a.shape,h=c[c.length-1],d=t.dataIdMap.get(r.dataId).id,p=t.dataIdMap.get(a.dataId).id,f=new Uint8Array(new Int32Array(u).buffer),m=t.dataIdMap.get(l.dataId).id;return QV(d,BW[r.dtype],p,i,h,o,f,m),l}},yU={kernelName:rn,backendName:"wasm",setupFunc:function(e){eU=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:a,indices:s}=n,{axis:i,batchDims:o}=r,u=pa.parseAxisParam(i,a.shape)[0],l=t.readSync(s.dataId),c=a.shape[u];for(let e=0;e<l.length;++e){const t=l[e];pa.assert(t<=c-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`))}const h=Qp.segment_util.collectGatherOpShapeInfo(a,s,u,o),d=pV({inputs:{x:a},attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]},backend:t}),p=pa.sizeFromShape(s.shape),f=pV({inputs:{x:s},attrs:{shape:[h.batchSize,p/h.batchSize]},backend:t}),m=[h.batchSize,h.outerSize,p/h.batchSize,h.sliceSize],g=t.makeOutput(m,a.dtype);if(0===pa.sizeFromShape(a.shape))return g;const y=d.shape.length-1,b=t.dataIdMap.get(d.dataId).id,x=t.dataIdMap.get(f.dataId).id,v=t.dataIdMap.get(g.dataId).id,w=new Uint8Array(new Int32Array(pa.computeStrides(d.shape)).buffer),k=new Uint8Array(new Int32Array(pa.computeStrides(m)).buffer);return eU(b,BW[a.dtype],w,y,x,h.batchSize,k,v),t.disposeData(d.dataId),t.disposeData(f.dataId),g.shape=h.outputShape,g}},bU=XW(sn,0,"bool"),xU=XW(on,0,"bool"),vU={kernelName:fn,backendName:"wasm",setupFunc:function(e){tU=e.wasm.cwrap(fn,null,["number","number","number","number"])},kernelFunc:function(e){const{inputs:{x:t},attrs:{alpha:n},backend:r}=e,a=r.dataIdMap.get(t.dataId).id,s=r.makeOutput(t.shape,"float32");if(0!==pa.sizeFromShape(t.shape)){const e=r.dataIdMap.get(s.dataId).id;tU(a,BW[t.dtype],n,e)}return s}},wU=XW(mn,0,"bool"),kU=XW(gn,0,"bool"),IU=qW(bn),SU=XW(vn,0,"bool"),NU={kernelName:Tn,backendName:"wasm",setupFunc:function(e){nU=e.wasm.cwrap(Tn,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{reductionIndices:a,keepDims:s}=r,{x:i}=n;let o=t.dataIdMap.get(i.dataId).id,u=i;const{transposed:l,axes:c,originalAxes:h,inputWasTransposed:d}=sV(i,a,t);d&&(u=l,o=t.dataIdMap.get(l.dataId).id);const p=u.shape.length;Qp.assertAxesAreInnerMostDims("max",c,p);const[f,m]=Qp.computeOutAndReduceShapes(u.shape,c),g=pa.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==pa.sizeFromShape(u.shape)){const e=t.dataIdMap.get(y.dataId).id;nU(o,BW[i.dtype],g,e)}if(d&&t.disposeData(l.dataId),s){const e=Qp.expandShapeToKeepDim(y.shape,h);y.shape=e}return y}},TU=XW(En),EU={kernelName:Cn,backendName:"wasm",setupFunc:function(e){rU=e.wasm.cwrap(Cn,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id;pa.assert("float32"===a.dtype,(()=>`Error in MaxPool: only float32 input is supported. Got ${a.dtype}.`));const{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=n,c=Qp.computePool2DInfo(a.shape,i,o,1,u,l),h=c.filterHeight,d=c.filterWidth,p=c.padInfo.top,f=c.padInfo.right,m=c.padInfo.bottom,g=c.padInfo.left,y=c.dilationHeight,b=c.dilationWidth,x=c.strideHeight,v=c.strideWidth,w=c.inChannels,k=c.outChannels;if("channelsLast"!==c.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);const I=r.makeOutput(c.outShape,"float32"),S=r.dataIdMap.get(I.dataId).id;return rU(s,a.shape[0],a.shape[1],a.shape[2],h,d,p,f,m,g,y,b,x,v,w,k,S),I}},CU={kernelName:Rn,backendName:"wasm",setupFunc:function(e){aU=e.wasm.cwrap(Rn,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,l=i;const{transposed:c,axes:h,originalAxes:d,inputWasTransposed:p}=sV(i,a,t);let f=h;if(p){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(l=c,u=e,f=Qp.getInnerMostAxes(f.length,l.shape.length))}Qp.assertAxesAreInnerMostDims("mean",f,l.shape.length);const[m,g]=Qp.computeOutAndReduceShapes(l.shape,f),y=pa.sizeFromShape(g);let b=l;"float32"!==l.dtype&&(b=vV({backend:t,inputs:{x:l},attrs:{dtype:"float32"}}),u=t.dataIdMap.get(b.dataId).id);const x=t.makeOutput(m,"float32");if(0!==pa.sizeFromShape(l.shape)){const e=t.dataIdMap.get(x.dataId).id;aU(u,y,e)}if(p&&t.disposeData(c.dataId),s){const e=Qp.expandShapeToKeepDim(x.shape,d);x.shape=e}return"float32"!==l.dtype&&t.disposeData(b.dataId),x}},_U={kernelName:Dn,backendName:"wasm",setupFunc:function(e){sU=e.wasm.cwrap(Dn,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,l=i;const{transposed:c,axes:h,originalAxes:d,inputWasTransposed:p}=sV(i,a,t);if(p){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(l=c,u=e)}const f=l.shape.length;Qp.assertAxesAreInnerMostDims("min",h,f);const[m,g]=Qp.computeOutAndReduceShapes(l.shape,h),y=pa.sizeFromShape(g),b=t.makeOutput(m,l.dtype);if(0!==pa.sizeFromShape(l.shape)){const e=t.dataIdMap.get(b.dataId).id;sU(u,BW[i.dtype],y,e)}if(p&&t.disposeData(c.dataId),s){const e=Qp.expandShapeToKeepDim(b.shape,d);b.shape=e}return b}},$U=XW(Mn);(oU=iU||(iU={}))[oU.reflect=0]="reflect",oU[oU.symmetric=1]="symmetric";var AU,FU={kernelName:On,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:r,mode:a}}=e,s=r.map(((e,n)=>e[0]+t.shape[n]+e[1])),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),u=n.dataIdMap.get(o.dataId).id,l=new Uint8Array(new Int32Array(t.shape).buffer),c=r.map((e=>e[0])),h=r.map((e=>e[1])),d=new Uint8Array(new Int32Array(c).buffer),p=new Uint8Array(new Int32Array(h).buffer);return uU(i,l,t.shape.length,BW[t.dtype],d,p,iU[a],u),o},setupFunc:function(e){uU=e.wasm.cwrap(On,null,["number","array","number","number","array","array","number","number"])}},RU=XW(Pn),DU=qW(Bn);function MU(e,t){const n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=n[0],a=n[1],s=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:a,pSelectedScores:s,pValidOutputs:i}}var OU,LU,zU,PU,BU,WU,VU,UU,GU,HU,jU,qU,KU,XU,YU,ZU,JU={kernelName:Vn,backendName:"wasm",setupFunc:function(e){AU=e.wasm.cwrap(Vn,"number",["number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i}=r,{boxes:o,scores:u}=n,l=t.dataIdMap.get(o.dataId).id,c=t.dataIdMap.get(u.dataId).id,h=AU(l,c,s,a,i),{pSelectedIndices:d,selectedSize:p,pSelectedScores:f,pValidOutputs:m}=MU(t,h);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([p],"int32",d)}},QU={kernelName:Un,backendName:"wasm",setupFunc:function(e){OU=e.wasm.cwrap(Un,"number",["number","number","number","number","number","bool"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=r,{boxes:u,scores:l}=n,c=t.dataIdMap.get(u.dataId).id,h=t.dataIdMap.get(l.dataId).id,d=OU(c,h,s,a,i,o),{pSelectedIndices:p,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=MU(t,d);return t.wasm._free(m),[t.makeOutput([f],"int32",p),t.makeOutput([],"int32",g)]}},eG={kernelName:Gn,backendName:"wasm",setupFunc:function(e){LU=e.wasm.cwrap(Gn,"number",["number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=r,{boxes:u,scores:l}=n,c=t.dataIdMap.get(u.dataId).id,h=t.dataIdMap.get(l.dataId).id,d=LU(c,h,s,a,i,o),{pSelectedIndices:p,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=MU(t,d);return t.wasm._free(g),[t.makeOutput([f],"int32",p),t.makeOutput([f],"float32",m)]}},tG=XW(Wn,0,"bool"),nG={kernelName:jn,backendName:"wasm",setupFunc:function(e){zU=e.wasm.cwrap(jn,null,["number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r,u=n.makeOutput([...a.shape,s],"int32"),l=n.dataIdMap.get(u.dataId).id,c=n.dataIdMap.get(a.dataId).id;return zU(c,s,i,o,l),u}},rG={kernelName:Hn,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(1),r}},aG={kernelName:qn,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return jV({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,i=t[0].dtype;t.forEach((e=>{pa.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),pa.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=NV({inputs:t.map((e=>{const t=jV({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeData(e.dataId))),u}},sG={kernelName:Kn,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:r,constantValue:a}}=e,s=r.map(((e,n)=>e[0]+t.shape[n]+e[1]));if(0===pa.sizeFromShape(t.shape))return KV({backend:n,attrs:{shape:s,value:a,dtype:t.dtype}});const i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),u=n.dataIdMap.get(o.dataId).id,l=new Uint8Array(new Int32Array(t.shape).buffer),c=r.map((e=>e[0])),h=r.map((e=>e[1])),d=new Uint8Array(new Int32Array(c).buffer),p=new Uint8Array(new Int32Array(h).buffer);return PU(i,l,t.shape.length,BW[t.dtype],d,p,a,u),o},setupFunc:function(e){PU=e.wasm.cwrap(Kn,null,["number","array","number","number","array","array","number","number"])}},iG=XW(Yn),oG={kernelName:Zn,backendName:"wasm",setupFunc:function(e){BU=e.wasm.cwrap(Zn,null,["number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id;let o=s;const u=r;let l=u;"float32"!==u.dtype&&(l=vV({backend:n,inputs:{x:r},attrs:{dtype:"float32"}}),o=n.dataIdMap.get(l.dataId).id);const c=n.makeOutput(r.shape,"float32"),h=n.dataIdMap.get(c.dataId).id;return BU(o,i,h),"float32"!==u.dtype&&n.disposeData(l.dataId),c}},uG={kernelName:Jn,backendName:"wasm",setupFunc:function(e){WU=e.wasm.cwrap(Jn,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,l=i;const{transposed:c,axes:h,originalAxes:d,inputWasTransposed:p}=sV(i,a,t);let f=h;if(p){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(l=c,u=e,f=Qp.getInnerMostAxes(f.length,l.shape.length))}Qp.assertAxesAreInnerMostDims("prod",f,l.shape.length);const[m,g]=Qp.computeOutAndReduceShapes(l.shape,f),y=pa.sizeFromShape(g),b=t.makeOutput(m,l.dtype);if(0!==pa.sizeFromShape(l.shape)){const e=t.dataIdMap.get(b.dataId).id;WU(u,y,BW[b.dtype],e)}if(p&&t.disposeData(c.dataId),s){const e=Qp.expandShapeToKeepDim(b.shape,d);b.shape=e}return b}},lG={kernelName:Qn,backendName:"wasm",kernelFunc:e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=TC(r,a,s,i),u=t.makeOutput([o.length],i);return t.typedArrayFromHeap(u).set(o),u}},cG=XW(Vt),hG=qW(nr),dG=qW(ur),pG={kernelName:ir,backendName:"wasm",setupFunc:function(e){VU=e.wasm.cwrap(ir,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{images:a}=n,{alignCorners:s,halfPixelCenters:i,size:o}=r,[u,l]=o,[c,h,d,p]=a.shape,f=[c,u,l,p];let m,g=t.dataIdMap.get(a.dataId);"float32"!==g.dtype&&(m=vV({backend:t,inputs:{x:a},attrs:{dtype:"float32"}}),g=t.dataIdMap.get(m.dataId));const y=g.id,b=t.makeOutput(f,"float32");if(0===pa.sizeFromShape(a.shape))return b;const x=t.dataIdMap.get(b.dataId).id;return VU(y,c,h,d,p,u,l,s?1:0,i?1:0,x),null!=m&&t.disposeData(m.dataId),b}},fG={kernelName:lr,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=pa.parseAxisParam(s,a.shape);if(0===a.shape.length)return QW({inputs:{x:a},backend:n});const o=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(a.dataId).id,l=n.dataIdMap.get(o.dataId).id,c=new Uint8Array(new Int32Array(i).buffer),h=new Uint8Array(new Int32Array(a.shape).buffer);UU(u,c,i.length,h,a.shape.length,l);const d=pV({inputs:{x:o},attrs:{shape:a.shape},backend:n});return n.disposeData(o.dataId),d},setupFunc:function(e){UU=e.wasm.cwrap(lr,null,["number","array","number","array","number","number"])}},mG={kernelName:Yr,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{radians:s,fillValue:i,center:o}=r,u=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(a.dataId).id,c=n.dataIdMap.get(u.dataId).id,[h,d,p,f]=a.shape,[m,g]=Qp.getImageCenter(o,d,p),y="number"==typeof i?[i,i,i,0===i?0:255]:[...i,255],b=new Uint8Array(new Int32Array(y).buffer);return GU(l,h,d,p,f,s,m,g,b,y.length,c),u},setupFunc:function(e){GU=e.wasm.cwrap(Yr,null,["number","number","number","number","number","number","number","number","array","number","number"])}},gG=qW(cr),yG=qW(hr),bG={kernelName:dr,backendName:"wasm",setupFunc:function(e){HU=e.wasm.cwrap(dr,null,["number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{indices:a,updates:s}=n,{shape:i}=r,o=t.makeOutput(i,s.dtype);if(0===pa.sizeFromShape(i))return o;const{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:d}=po.calculateShapes(s,a,i),p=t.dataIdMap.get(a.dataId).id,f=t.dataIdMap.get(s.dataId).id,m=new Uint8Array(new Int32Array(h).buffer),g=t.dataIdMap.get(o.dataId).id;return HU(p,f,BW[s.dtype],u,l,c,m,d,g),o}},xG={kernelName:pr,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(a.dataId).id,u=n.dataIdMap.get(s.dataId).id,l=n.makeOutput(a.shape,a.dtype),c=n.dataIdMap.get(l.dataId).id,h=r.shape.length,d=a.shape.length,p=0===h||h>1||1===d?1:pa.sizeFromShape(a.shape.slice(1));return jU(i,o,u,p,c),l},setupFunc:function(e){jU=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}},vG={kernelName:"Sigmoid",backendName:"wasm",setupFunc:function(e){qU=e.wasm.cwrap(xr,null,["number","number"])},kernelFunc:function(e){const{backend:t,inputs:{x:n}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(a.dataId).id;return 0===pa.sizeFromShape(a.shape)||qU(r,s),a}},wG=qW(gr),kG={kernelName:Nr,backendName:"wasm",setupFunc:function(e){KU=e.wasm.cwrap(Nr,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:{logits:n},attrs:{dim:r}}=e,a=t.dataIdMap.get(n.dataId).id,s=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(s.dataId).id,o=n.shape[r],u=pa.sizeFromShape(n.shape)/o;return 0===pa.sizeFromShape(s.shape)||KU(a,i,o,u),s}},IG={kernelName:Ir,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r,o=pa.sizeFromShape(s),u=[[0,0]];u.push(...i);for(let e=1+s.length;e<a.shape.length;++e)u.push([0,0]);const l=sG.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),c=Qp.getReshaped(l.shape,s,o,!1),h=Qp.getPermuted(c.length,s.length,!1),d=Qp.getReshapedPermuted(l.shape,s,o,!1),p=pV({inputs:{x:l},backend:n,attrs:{shape:c}}),f=nV({inputs:{x:p},backend:n,attrs:{perm:h}}),m=pV({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeData(l.dataId),n.disposeData(p.dataId),n.disposeData(f.dataId),m}},SG={kernelName:Tr,backendName:"wasm",setupFunc:function(e){XU=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=n,o=r.shape[0],u=r.shape[1],l=t.readSync(s.dataId)[0],c=[o+l,u],h=t.dataIdMap.get(r.dataId).id,d=t.dataIdMap.get(a.dataId).id,p=t.dataIdMap.get(i.dataId).id,f=t.makeOutput(c,r.dtype),m=t.dataIdMap.get(f.dataId).id,g=t.makeOutput(c.slice(0,1),a.dtype),y=t.dataIdMap.get(g.dataId).id,b=t.makeOutput([l],"bool"),x=t.dataIdMap.get(b.dataId).id,v=t.makeOutput([o],r.dtype),w=t.dataIdMap.get(v.dataId).id,k=t.makeOutput([4],"int32"),I=t.dataIdMap.get(k.dataId).id,S=XU(h,d,BW[a.dtype],o,l,u,p,m,y,x,w,I),N=t.readSync(k.dataId);let T;switch(N[0]){case 1:T=Qp.getSparseFillEmptyRowsIndicesDenseShapeMismatch(N[1]);break;case 2:T=Qp.getSparseFillEmptyRowsNegativeIndexErrorMessage(N[1],N[2]);break;case 3:T=Qp.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(N[1],N[2],N[3]);break;default:T=""}if(t.disposeData(k.dataId),T)throw t.disposeData(f.dataId),t.disposeData(g.dataId),t.disposeData(b.dataId),t.disposeData(v.dataId),new Error(T);let E=f,C=g;return S!==c[0]&&(E=yV({inputs:{x:f},attrs:{begin:0,size:[S,u]},backend:t}),C=yV({inputs:{x:g},attrs:{begin:0,size:S},backend:t}),t.disposeData(f.dataId),t.disposeData(g.dataId)),[E,C,b,v]}},NG={kernelName:Er,backendName:"wasm",setupFunc:function(e){YU=e.wasm.cwrap(Er,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{inputIndices:r,inputShape:a,newShape:s}=n;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=t.dataIdMap.get(r.dataId).id,o=t.dataIdMap.get(a.dataId).id,u=t.dataIdMap.get(s.dataId).id,l=r.shape[0],c=pa.sizeFromShape(s.shape),h=t.makeOutput([l,c],r.dtype),d=t.dataIdMap.get(h.dataId).id,p=t.makeOutput([c],s.dtype),f=t.dataIdMap.get(p.dataId).id,m=t.makeOutput([3],"int32"),g=t.dataIdMap.get(m.dataId).id;YU(i,o,u,l,d,f,g);const y=t.readSync(m.dataId);let b;switch(y[0]){case 0:b=Qp.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(y[1],y[2]);break;case 1:b=Qp.getSparseReshapeNegativeOutputDimErrorMessage(y[1],y[2]);break;case 2:b=Qp.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{const e=Array.from(t.readSync(a.dataId)),n=Array.from(t.readSync(p.dataId));b=Qp.getSparseReshapeInputOutputMultipleErrorMessage(e,n);break}case 4:{const e=Array.from(t.readSync(a.dataId)),n=Array.from(t.readSync(p.dataId));b=Qp.getSparseReshapeInputOutputMismatchErrorMessage(e,n);break}default:b=""}if(t.disposeData(m.dataId),b)throw t.disposeData(h.dataId),t.disposeData(p.dataId),new Error(b);return[h,p]}};function TG(e){ZU=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function EG(e,t){const{backend:n,inputs:r}=e,{data:a,indices:s,segmentIds:i}=r,o=s.shape[0],u=n.readSync(i.dataId,o-1,o)[0],l=o>0?u+1:0;if(l<0)throw new Error(Qp.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const c=a.shape.slice();c[0]=l;const h=n.dataIdMap.get(a.dataId).id,d=n.dataIdMap.get(s.dataId).id,p=n.dataIdMap.get(i.dataId).id,f=n.makeOutput(c,a.dtype),m=n.dataIdMap.get(f.dataId).id,g=n.makeOutput([4],"int32"),y=n.dataIdMap.get(g.dataId).id;ZU(h,BW[a.dtype],a.shape[0],d,p,m,y,t,0);const b=n.readSync(g.dataId);let x;switch(b[0]){case 0:x=Qp.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break;case 1:x=Qp.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break;case 2:x=Qp.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(b[1],b[2]);break;case 3:x=Qp.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(b[1],b[2],b[3]);break;default:x=""}if(n.disposeData(g.dataId),x)throw n.disposeData(f.dataId),new Error(x);return f}var CG,_G,$G,AG,FG,RG,DG={kernelName:Cr,backendName:"wasm",setupFunc:TG,kernelFunc:function(e){return EG(e,!0)}},MG={kernelName:_r,backendName:"wasm",setupFunc:TG,kernelFunc:function(e){return EG(e,!1)}},OG={kernelName:Sr,backendName:"wasm",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=n,o=pa.parseAxisParam(i,a.shape)[0],u=Qp.prepareSplitSize(a,s,o),l=new Array(a.shape.length).fill(0),c=a.shape.slice();return u.map((e=>{const t=[...c];t[o]=e;const n=yV({inputs:{x:a},attrs:{begin:l,size:t},backend:r});return l[o]+=e,n}))}},LG=qW(wr),zG=qW(Fr),PG=XW(Ar),BG={kernelName:Kr,backendName:"wasm",setupFunc:function(e){CG=e.wasm.cwrap(Kr,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{alpha:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),u=t.dataIdMap.get(o.dataId).id;return CG(i,a,BW[s.dtype],u),o}},WG={kernelName:Rr,backendName:"wasm",setupFunc:function(e){_G=e.wasm.cwrap(Rr,null,["number","array","number","array","array","array","array","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{begin:s,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=yo.sliceInfo(a.shape,s,i,o,u,l,c,h,d);let w;if(m)w=pV({inputs:{x:a},backend:t,attrs:{shape:f}});else if(g||y){pa.assert(a.shape.length>=1,(()=>`Input must have rank at least 1, got: ${a.shape.length}`));const e=yo.computeOutShape(b,x,v),n=yV({inputs:{x:a},backend:t,attrs:{begin:b,size:e}});w=pV({inputs:{x:n},backend:t,attrs:{shape:f}}),t.disposeData(n.dataId)}else{const e=t.makeOutput(p,"float32"),n=t.dataIdMap.get(a.dataId).id,r=new Uint8Array(new Int32Array(pa.computeStrides(a.shape)).buffer),s=new Uint8Array(new Int32Array(b).buffer),i=new Uint8Array(new Int32Array(x).buffer),o=new Uint8Array(new Int32Array(v).buffer),u=new Uint8Array(new Int32Array(p).buffer),l=new Uint8Array(new Int32Array(pa.computeStrides(p)).buffer),c=t.dataIdMap.get(e.dataId).id;_G(n,r,a.shape.length,s,i,o,u,l,p.length,c),w=pV({inputs:{x:e},backend:t,attrs:{shape:f}}),t.disposeData(e.dataId)}return w}},VG=XW(Lr),UG={kernelName:kr,backendName:"wasm",setupFunc:function(e){$G=e.wasm.cwrap(kr,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,l=i;const{transposed:c,axes:h,originalAxes:d,inputWasTransposed:p}=sV(i,a,t);let f=h;if(p){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(l=c,u=e,f=Qp.getInnerMostAxes(f.length,l.shape.length))}Qp.assertAxesAreInnerMostDims("sum",f,l.shape.length);const[m,g]=Qp.computeOutAndReduceShapes(l.shape,f),y=pa.sizeFromShape(g),b=t.makeOutput(m,l.dtype);if(0!==pa.sizeFromShape(l.shape)){const e=t.dataIdMap.get(b.dataId).id;$G(u,y,BW[b.dtype],e)}if(p&&t.disposeData(c.dataId),s){const e=Qp.expandShapeToKeepDim(b.shape,d);b.shape=e}return b}},GG=qW(zr),HG=qW(Pr),jG=[jW,KW,ZW,JW,lV,cV,hV,dV,gV,xV,kV,IV,SV,AV,FV,RV,DV,MV,PV,BV,WV,VV,UV,GV,HV,qV,lU,cU,hU,dU,pU,fU,mU,gU,yU,bU,xU,tV,vU,wU,kU,IU,SU,NU,TU,EU,CU,_U,$U,FU,RU,DU,JU,QU,eG,tG,nG,rG,aG,sG,iG,oG,uG,lG,cG,hG,dG,mV,pG,fG,mG,gG,yG,bG,xG,vG,wG,bV,kG,IG,SG,NG,DG,MG,OG,LG,zG,PG,BG,WG,VG,UG,GG,HG,{kernelName:Br,backendName:"wasm",setupFunc:function(e){AG=e.wasm.cwrap(Br,null,["number","array","number","array","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,s=n.dataIdMap.get(a.dataId).id,{reps:i}=r,o=new Array(a.shape.length);for(let e=0;e<o.length;e++)o[e]=a.shape[e]*i[e];const u=new Uint8Array(new Int32Array(a.shape).buffer),l=new Uint8Array(new Int32Array(o).buffer),c=n.makeOutput(o,a.dtype),h=n.dataIdMap.get(c.dataId).id;return AG(s,u,a.shape.length,l,o.length,BW[c.dtype],h),c}},{kernelName:Wr,backendName:"wasm",setupFunc:function(e){FG=e.wasm.cwrap(Wr,null,["number","array","number","number","number","bool","number","number"])},kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e;const{x:a}=t,{k:s,sorted:i}=r,o=n.dataIdMap.get(a.dataId).id,u=new Uint8Array(new Int32Array(a.shape).buffer),l=a.shape.slice();l[l.length-1]=s;const c=n.makeOutput(l,a.dtype),h=n.dataIdMap.get(c.dataId).id,d=n.makeOutput(l,"int32"),p=n.dataIdMap.get(d.dataId).id;return FG(o,u,a.shape.length,BW[a.dtype],s,i,h,p),[c,d]}},{kernelName:Vr,backendName:"wasm",setupFunc:function(e){RG=e.wasm.cwrap(Vr,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{image:a,transforms:s}=n,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=r,[c,h,d,p]=a.shape,[f,m]=null!=l?l:[h,d],g=[c,f,m,p],y=new Uint8Array(new Int32Array(pa.computeStrides(a.shape)).buffer),b=t.makeOutput(g,a.dtype),x=t.dataIdMap.get(b.dataId).id,v=t.dataIdMap.get(a.dataId).id,w=t.dataIdMap.get(s.dataId).id,k="nearest"===i?1:2;let I;switch(o){case"constant":default:I=1;break;case"reflect":I=2;break;case"wrap":I=3;break;case"nearest":I=4}return RG(v,w,s.shape[0]>1,c,f,m,p,d,h,y,a.shape.length-1,k,I,u,x),b}},aV,{kernelName:Hr,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a.shape[s],o=a.shape.length,u=new Array(o-1);let l=0;for(let e=0;e<o;e++)e!==s&&(u[l++]=a.shape[e]);const c=new Array(i),h=new Array(o).fill(0),d=a.shape.slice();d[s]=1;for(let e=0;e<c.length;e++)h[s]=e,c[e]=yV({inputs:{x:a},attrs:{begin:h,size:d},backend:n});return c.map((e=>{let{dataId:t,dtype:n}=e;return{dataId:t,dtype:n,shape:u}}))}},{kernelName:qr,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(0),r}}];for(const e of jG)oa(e);var qG=Ue();qG.registerFlag("WASM_HAS_SIMD_SUPPORT",(async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])))),qG.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",(async()=>{if(qG.get("IS_NODE"))return!1;try{return(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}}));var KG=f(W()),XG=f(V()),YG=class extends G{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(iH),oH=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new U(this,ru())}write(e,t,n){const r={id:this.dataIdNextNumber++};return this.move(r,e,t,n,1),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){const t=pa.now();return e(),{kernelMs:pa.now()-t}}move(e,t,n,r,a){const s=this.dataIdNextNumber++;if("string"===r){const i=t;return void this.dataIdMap.set(e,{id:s,stringBytes:i,shape:n,dtype:r,memoryOffset:null,refCount:a})}const i=pa.sizeFromShape(n),o=i*pa.bytesPerElement(r),u=this.wasm._malloc(o);this.dataIdMap.set(e,{id:s,memoryOffset:u,shape:n,dtype:r,refCount:a}),this.wasm.tfjs.registerTensor(s,i,u),null!=t&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),u)}async read(e){return this.readSync(e)}readSync(e,t,n){const{memoryOffset:r,dtype:a,shape:s,stringBytes:i}=this.dataIdMap.get(e);if("string"===a)return null!=t&&0!==t||!(null==n||n>=i.length)?i.slice(t,n):i;t=t||0,n=n||pa.sizeFromShape(s);const o=pa.bytesPerElement(a);return function(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}(this.wasm.HEAPU8.slice(r+t*o,r+n*o).buffer,a)}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.dataIdMap.has(e)){const n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){const t=this.dataIdMap.get(e);null!=t&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let r;if(null==n)r=this.write(null,e,t);else{const a=this.dataIdNextNumber++;r={id:a},this.dataIdMap.set(r,{id:a,memoryOffset:n,shape:e,dtype:t,refCount:1});const s=pa.sizeFromShape(e);this.wasm.tfjs.registerTensor(a,s,n)}return{dataId:r,shape:e,dtype:t}}typedArrayFromHeap(e){let{shape:t,dtype:n,dataId:r}=e;const a=this.wasm.HEAPU8.buffer,{memoryOffset:s}=this.dataIdMap.get(r),i=pa.sizeFromShape(t);switch(n){case"float32":return new Float32Array(a,s,i);case"int32":return new Int32Array(a,s,i);case"bool":return new Uint8Array(a,s,i);default:throw new Error(`Unknown dtype ${n}`)}}};function ZG(e,t,n){if(null!=QG)return QG;let r="tfjs-backend-wasm.wasm";return e&&t?r="tfjs-backend-wasm-threaded-simd.wasm":e&&(r="tfjs-backend-wasm-simd.wasm"),null!=tH&&null!=tH[r]?tH[r]:n+r}var JG=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],QG=null,eH=null,tH={},nH=!1,rH=!1;function aH(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(tu("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),nH)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");QG=e,rH=t}function sH(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(nH)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if("string"==typeof e)eH=e;else{tH=e;const t=JG.filter((e=>null==tH[e]));if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}rH=t}var iH=-1,oH=-1;function uH(e){iH=e}function lH(){if(-1===oH)throw new Error("WASM backend not initialized.");return oH}var cH="3.13.0";gu("wasm",(async()=>{const{wasm:e}=await async function(){const[e,t]=await Promise.all([Ue().getAsync("WASM_HAS_SIMD_SUPPORT"),Ue().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise(((n,r)=>{const a={};var s;a.locateFile=(n,r)=>{if(n.endsWith(".worker.js")){const e=new Blob(['var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;this.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);Module["wasmModule"]=null;receiveInstance(instance);return instance.exports};function moduleLoaded(){}this.onmessage=function(e){try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance;moduleLoaded()})}else if(e.data.cmd==="objectTransfer"){Module["PThread"].receiveObjectTransfer(e.data)}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["_emscripten_tls_init"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].setThreadStatus(Module["_pthread_self"](),1);try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(!Module["getNoExitRuntime"]())Module["PThread"].threadExit(result)}catch(ex){if(ex==="Canceled!"){Module["PThread"].threadCancel()}else if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["getNoExitRuntime"]()){}else{Module["PThread"].threadExit(ex.status)}}else{Module["PThread"].threadExit(-2);throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["PThread"].threadCancel()}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require("worker_threads");global.Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var nodeFS=require("fs");var nodeRead=function(filename){return nodeFS.readFileSync(filename,"utf8")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance==="undefined"){performance={now:function(){return Date.now()}}}}'],{type:"application/javascript"});return URL.createObjectURL(e)}return n.endsWith(".wasm")?ZG(e,t,null!=eH?eH:r):r+n},rH&&(a.instantiateWasm=(s=ZG(e,t,null!=eH?eH:""),(e,t)=>(pa.fetch(s,{credentials:"same-origin"}).then((n=>{n.ok||e.env.a(`failed to load wasm binary file at '${s}'`),n.arrayBuffer().then((n=>{WebAssembly.instantiate(n,e).then((e=>{t(e.instance,e.module)}))}))})),{})));let i,o=!1;a.onAbort=()=>{o||nH||(nH=!0,r({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))},t&&e&&null==QG?(a.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+KG.default.toString()],{type:"text/javascript"}),i=(0,KG.default)(a)):i=(0,XG.default)(a),i.then((e=>{o=!0,nH=!1,e.tfjs={init:e.cwrap("init",null,[]),initWithThreadsCount:e.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:e.cwrap("get_threads_count","number",[]),registerTensor:e.cwrap("register_tensor",null,["number","number","number"]),disposeData:e.cwrap("dispose_data",null,["number"]),dispose:e.cwrap("dispose",null,[])},n({wasm:e})}))}))}();return new YG(e)}),2);var hH={tfjs:"3.13.0","tfjs-core":"3.13.0","tfjs-data":"3.13.0","tfjs-layers":"3.13.0","tfjs-converter":"3.13.0","tfjs-backend-cpu":"3.13.0","tfjs-backend-webgl":"3.13.0","tfjs-backend-wasm":"3.13.0"};function dH(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(e.beginPath(),t.slice(1).forEach(((n,r)=>{let{x:a,y:s}=n;const i=t[r];e.moveTo(i.x,i.y),e.lineTo(a,s)})),n){const n=t[t.length-1],r=t[0];if(!n||!r)return;e.moveTo(n.x,n.y),e.lineTo(r.x,r.y)}e.stroke()}a({},{AnchorPosition:()=>JH,DrawBox:()=>nj,DrawBoxOptions:()=>tj,DrawFaceLandmarks:()=>Uj,DrawFaceLandmarksOptions:()=>Vj,DrawTextField:()=>ej,DrawTextFieldOptions:()=>QH,drawContour:()=>dH,drawDetections:()=>rj,drawFaceExpressions:()=>Pj,drawFaceLandmarks:()=>Gj}),a({},{computeReshapedDimensions:()=>IH,getCenterPoint:()=>SH,isDimensions:()=>kH,isEven:()=>vH,isFloat:()=>xH,isTensor:()=>fH,isTensor1D:()=>mH,isTensor2D:()=>gH,isTensor3D:()=>yH,isTensor4D:()=>bH,isValidNumber:()=>TH,isValidProbablitiy:()=>EH,range:()=>NH,round:()=>wH});var pH=class{constructor(e,t){if(!TH(e)||!TH(t))throw new Error(`Dimensions.constructor - expected width and height to be valid numbers, instead have ${JSON.stringify({width:e,height:t})}`);this._width=e,this._height=t}get width(){return this._width}get height(){return this._height}reverse(){return new pH(1/this.width,1/this.height)}};function fH(e,t){return e instanceof ja&&e.shape.length===t}function mH(e){return fH(e,1)}function gH(e){return fH(e,2)}function yH(e){return fH(e,3)}function bH(e){return fH(e,4)}function xH(e){return e%1!=0}function vH(e){return e%2==0}function wH(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;const n=10**t;return Math.floor(e*n)/n}function kH(e){return e&&e.width&&e.height}function IH(e,t){let{width:n,height:r}=e;const a=t/Math.max(r,n);return new pH(Math.round(n*a),Math.round(r*a))}function SH(e){return e.reduce(((e,t)=>e.add(t)),new CH(0,0)).div(new CH(e.length,e.length))}function NH(e,t,n){return Array(e).fill(0).map(((e,r)=>t+r*n))}function TH(e){return!!e&&e!==1/0&&e!==-1/0&&!Number.isNaN(e)||0===e}function EH(e){return TH(e)&&e>=0&&e<=1}var CH=class{constructor(e,t){this._x=e,this._y=t}get x(){return this._x}get y(){return this._y}add(e){return new CH(this.x+e.x,this.y+e.y)}sub(e){return new CH(this.x-e.x,this.y-e.y)}mul(e){return new CH(this.x*e.x,this.y*e.y)}div(e){return new CH(this.x/e.x,this.y/e.y)}abs(){return new CH(Math.abs(this.x),Math.abs(this.y))}magnitude(){return Math.sqrt(this.x**2+this.y**2)}floor(){return new CH(Math.floor(this.x),Math.floor(this.y))}},_H=class{static isRect(e){return!!e&&[e.x,e.y,e.width,e.height].every(TH)}static assertIsValidBox(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(!_H.isRect(e))throw new Error(`${t} - invalid box: ${JSON.stringify(e)}, expected object with properties x, y, width, height`);if(!n&&(e.width<0||e.height<0))throw new Error(`${t} - width (${e.width}) and height (${e.height}) must be positive numbers`)}constructor(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=e||{},r=[n.left,n.top,n.right,n.bottom].every(TH),a=[n.x,n.y,n.width,n.height].every(TH);if(!a&&!r)throw new Error(`Box.constructor - expected box to be IBoundingBox | IRect, instead have ${JSON.stringify(n)}`);const[s,i,o,u]=a?[n.x,n.y,n.width,n.height]:[n.left,n.top,n.right-n.left,n.bottom-n.top];_H.assertIsValidBox({x:s,y:i,width:o,height:u},"Box.constructor",t),this._x=s,this._y=i,this._width=o,this._height=u}get x(){return this._x}get y(){return this._y}get width(){return this._width}get height(){return this._height}get left(){return this.x}get top(){return this.y}get right(){return this.x+this.width}get bottom(){return this.y+this.height}get area(){return this.width*this.height}get topLeft(){return new CH(this.left,this.top)}get topRight(){return new CH(this.right,this.top)}get bottomLeft(){return new CH(this.left,this.bottom)}get bottomRight(){return new CH(this.right,this.bottom)}round(){const[e,t,n,r]=[this.x,this.y,this.width,this.height].map((e=>Math.round(e)));return new _H({x:e,y:t,width:n,height:r})}floor(){const[e,t,n,r]=[this.x,this.y,this.width,this.height].map((e=>Math.floor(e)));return new _H({x:e,y:t,width:n,height:r})}toSquare(){let{x:e,y:t,width:n,height:r}=this;const a=Math.abs(n-r);return n<r&&(e-=a/2,n+=a),r<n&&(t-=a/2,r+=a),new _H({x:e,y:t,width:n,height:r})}rescale(e){const t=kH(e)?e.width:e,n=kH(e)?e.height:e;return new _H({x:this.x*t,y:this.y*n,width:this.width*t,height:this.height*n})}pad(e,t){const[n,r,a,s]=[this.x-e/2,this.y-t/2,this.width+e,this.height+t];return new _H({x:n,y:r,width:a,height:s})}clipAtImageBorders(e,t){const{x:n,y:r,right:a,bottom:s}=this,i=Math.max(n,0),o=Math.max(r,0),u=a-i,l=s-o,c=Math.min(u,e-i),h=Math.min(l,t-o);return new _H({x:i,y:o,width:c,height:h}).floor()}shift(e,t){const{width:n,height:r}=this,a=this.x+e,s=this.y+t;return new _H({x:a,y:s,width:n,height:r})}padAtBorders(e,t){const n=this.width+1,r=this.height+1;let a=n,s=r,i=this.left,o=this.top,u=this.right,l=this.bottom;return u>t&&(a=-u+t+n,u=t),l>e&&(s=-l+e+r,l=e),i<1&&(s=2-i,i=1),o<1&&(s=2-o,o=1),{dy:1,edy:s,dx:1,edx:a,y:o,ey:l,x:i,ex:u,w:n,h:r}}calibrate(e){return new _H({left:this.left+e.left*this.width,top:this.top+e.top*this.height,right:this.right+e.right*this.width,bottom:this.bottom+e.bottom*this.height}).toSquare().round()}},$H=class extends _H{constructor(e,t,n,r){super({left:e,top:t,right:n,bottom:r},arguments.length>4&&void 0!==arguments[4]&&arguments[4])}},AH=class{constructor(e,t,n,r,a){this._imageDims=new pH(a.width,a.height),this._score=e,this._classScore=t,this._className=n,this._box=new _H(r).rescale(this._imageDims)}get score(){return this._score}get classScore(){return this._classScore}get className(){return this._className}get box(){return this._box}get imageDims(){return this._imageDims}get imageWidth(){return this.imageDims.width}get imageHeight(){return this.imageDims.height}get relativeBox(){return new _H(this._box).rescale(this.imageDims.reverse())}forSize(e,t){return new AH(this.score,this.classScore,this.className,this.relativeBox,{width:e,height:t})}},FH=class extends AH{constructor(e,t,n){super(e,e,"",t,n)}forSize(e,t){const{score:n,relativeBox:r,imageDims:a}=super.forSize(e,t);return new FH(n,r,a)}};function RH(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const r=Math.max(0,Math.min(e.right,t.right)-Math.max(e.left,t.left)),a=Math.max(0,Math.min(e.bottom,t.bottom)-Math.max(e.top,t.top)),s=r*a;return n?s/(e.area+t.area-s):s/Math.min(e.area,t.area)}function DH(e,t){return iu((()=>{const[n,r,a]=t,s=Kl([...e.shape.slice(0,3),1],n,"float32"),i=Kl([...e.shape.slice(0,3),1],r,"float32"),o=Kl([...e.shape.slice(0,3),1],a,"float32"),u=tl([s,i,o],3);return wc(e,u)}))}function MH(e){return 1/(1+Math.exp(-e))}var OH,LH=class extends _H{constructor(e,t,n,r){super({x:e,y:t,width:n,height:r},arguments.length>4&&void 0!==arguments[4]&&arguments[4])}},zH=class{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new CH(0,0);const{width:r,height:a}=t;this._imgDims=new pH(r,a),this._shift=n,this._positions=e.map((e=>e.mul(new CH(r,a)).add(n)))}get shift(){return new CH(this._shift.x,this._shift.y)}get imageWidth(){return this._imgDims.width}get imageHeight(){return this._imgDims.height}get positions(){return this._positions}get relativePositions(){return this._positions.map((e=>e.sub(this._shift).div(new CH(this.imageWidth,this.imageHeight))))}forSize(e,t){return new this.constructor(this.relativePositions,{width:e,height:t})}shiftBy(e,t){return new this.constructor(this.relativePositions,this._imgDims,new CH(e,t))}shiftByPoint(e){return this.shiftBy(e.x,e.y)}align(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(e){const n=e instanceof FH?e.box.floor():new _H(e);return this.shiftBy(n.x,n.y).align(null,t)}const{useDlibAlignment:n,minBoxPadding:r}={useDlibAlignment:!1,minBoxPadding:.2,...t};return n?this.alignDlib():this.alignMinBbox(r)}alignDlib(){const e=this.getRefPointsForAlignment(),[t,n,r]=e,a=e=>r.sub(e).magnitude(),s=(a(t)+a(n))/2,i=Math.floor(s/.45),o=SH(e),u=Math.floor(Math.max(0,o.x-.5*i)),l=Math.floor(Math.max(0,o.y-.43*i));return new LH(u,l,Math.min(i,this.imageWidth+u),Math.min(i,this.imageHeight+l))}alignMinBbox(e){const t=function(e){const t=e.map((e=>e.x)),n=e.map((e=>e.y)),r=t.reduce(((e,t)=>t<e?t:e),1/0),a=n.reduce(((e,t)=>t<e?t:e),1/0),s=t.reduce(((e,t)=>e<t?t:e),0),i=n.reduce(((e,t)=>e<t?t:e),0);return new $H(r,a,s,i)}(this.positions);return t.pad(t.width*e,t.height*e)}getRefPointsForAlignment(){throw new Error("getRefPointsForAlignment not implemented by base class")}},PH=class extends zH{getJawOutline(){return this.positions.slice(0,17)}getLeftEyeBrow(){return this.positions.slice(17,22)}getRightEyeBrow(){return this.positions.slice(22,27)}getNose(){return this.positions.slice(27,36)}getLeftEye(){return this.positions.slice(36,42)}getRightEye(){return this.positions.slice(42,48)}getMouth(){return this.positions.slice(48,68)}getRefPointsForAlignment(){return[this.getLeftEye(),this.getRightEye(),this.getMouth()].map(SH)}};function BH(e){return e.detection instanceof FH}function WH(e,t){return{...e,detection:t}}function VH(){const e=window.fetch;if(!e)throw new Error("fetch - missing fetch implementation for browser environment");return{Canvas:HTMLCanvasElement,CanvasRenderingContext2D,Image:HTMLImageElement,ImageData,Video:HTMLVideoElement,createCanvasElement:()=>document.createElement("canvas"),createImageElement:()=>document.createElement("img"),createVideoElement:()=>document.createElement("video"),fetch:e,readFile:()=>{throw new Error("readFile - filesystem not available for browser environment")}}}function UH(){return"object"==typeof n.g&&"undefined"!=typeof process&&null!=process.versions&&null!=process.versions.node}function GH(e){let t="";if(!e&&UH())try{e=r("fs")}catch(e){t=e.toString()}return{readFile:e?t=>new Promise(((n,r)=>{e.readFile(t,((e,t)=>e?r(e):n(t)))})):()=>{throw new Error(`readFile - failed to require fs in nodejs environment with error: ${t}`)}}}function HH(){const e=n.g.Canvas||n.g.HTMLCanvasElement,t=n.g.Image||n.g.HTMLImageElement,r=n.g.Video||n.g.HTMLVideoElement,a=n.g.fetch,s=GH();return{Canvas:e||class{},CanvasRenderingContext2D:n.g.CanvasRenderingContext2D||class{},Image:t||class{},ImageData:n.g.ImageData||class{},Video:n.g.HTMLVideoElement||class{},createCanvasElement:()=>{if(e)return new e;throw new Error("createCanvasElement - missing Canvas implementation for nodejs environment")},createImageElement:()=>{if(t)return new t;throw new Error("createImageElement - missing Image implementation for nodejs environment")},createVideoElement:()=>{if(r)return new r;throw new Error("createVideoElement - missing Video implementation for nodejs environment")},fetch:a,...s}}function jH(){return"object"==typeof window&&"undefined"!=typeof document&&"undefined"!=typeof HTMLImageElement&&"undefined"!=typeof HTMLCanvasElement&&"undefined"!=typeof HTMLVideoElement&&"undefined"!=typeof ImageData&&"undefined"!=typeof CanvasRenderingContext2D}function qH(e){OH=e}function KH(){return jH()?qH(VH()):UH()?qH(HH()):null}var XH={getEnv:function(){if(!OH)throw new Error("getEnv - environment is not defined, check isNodejs() and isBrowser()");return OH},setEnv:qH,initialize:KH,createBrowserEnv:VH,createFileSystem:GH,createNodejsEnv:HH,monkeyPatch:function(e){if(OH||KH(),!OH)throw new Error("monkeyPatch - environment is not defined, check isNodejs() and isBrowser()");const{Canvas:t=OH.Canvas,Image:n=OH.Image}=e;OH.Canvas=t,OH.Image=n,OH.createCanvasElement=e.createCanvasElement||(()=>new t),OH.createImageElement=e.createImageElement||(()=>new n),OH.ImageData=e.ImageData||OH.ImageData,OH.Video=e.Video||OH.Video,OH.fetch=e.fetch||OH.fetch,OH.readFile=e.readFile||OH.readFile},isBrowser:jH,isNodejs:UH};function YH(e){return XH.isNodejs()||"string"!=typeof e?e:document.getElementById(e)}function ZH(e){const{Canvas:t,CanvasRenderingContext2D:n}=XH.getEnv();if(e instanceof n)return e;const r=YH(e);if(!(r instanceof t))throw new Error("resolveContext2d - expected canvas to be of instance of Canvas");const a=r.getContext("2d");if(!a)throw new Error("resolveContext2d - canvas 2d context is null");return a}KH();var JH=(e=>(e.TOP_LEFT="TOP_LEFT",e.TOP_RIGHT="TOP_RIGHT",e.BOTTOM_LEFT="BOTTOM_LEFT",e.BOTTOM_RIGHT="BOTTOM_RIGHT",e))(JH||{}),QH=class{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{anchorPosition:t,backgroundColor:n,fontColor:r,fontSize:a,fontStyle:s,padding:i}=e;this.anchorPosition=t||"TOP_LEFT",this.backgroundColor=n||"rgba(0, 0, 0, 0.5)",this.fontColor=r||"rgba(255, 255, 255, 1)",this.fontSize=a||14,this.fontStyle=s||"Georgia",this.padding=i||4}},ej=class{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};this.text="string"==typeof e?[e]:e instanceof ej?e.text:e,this.anchor=t,this.options=new QH(n)}measureWidth(e){const{padding:t}=this.options;return this.text.map((t=>e.measureText(t).width)).reduce(((e,t)=>e<t?t:e),0)+2*t}measureHeight(){const{fontSize:e,padding:t}=this.options;return this.text.length*e+2*t}getUpperLeft(e,t){const{anchorPosition:n}=this.options,r="BOTTOM_RIGHT"===n||"TOP_RIGHT"===n,a="BOTTOM_LEFT"===n||"BOTTOM_RIGHT"===n,s=this.measureWidth(e),i=this.measureHeight(),o=r?this.anchor.x-s:this.anchor.x,u=a?this.anchor.y-i:this.anchor.y;if(t){const{width:e,height:n}=t;return{x:Math.max(Math.min(o,e-s),0),y:Math.max(Math.min(u,n-i),0)}}return{x:o,y:u}}draw(e){const t=YH(e),n=ZH(t),{backgroundColor:r,fontColor:a,fontSize:s,fontStyle:i,padding:o}=this.options;n.font=`${s}px ${i}`;const u=this.measureWidth(n),l=this.measureHeight();n.fillStyle=r;const c=this.getUpperLeft(n,t);n.fillRect(c.x,c.y,u,l),n.fillStyle=a,this.text.forEach(((e,t)=>{const r=o+c.x,a=o+c.y+(t+1)*s;n.fillText(e,r,a)}))}},tj=class{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{boxColor:t,lineWidth:n,label:r,drawLabelOptions:a}=e;this.boxColor=t||"rgba(0, 0, 255, 1)",this.lineWidth=n||2,this.label=r;const s={anchorPosition:"BOTTOM_LEFT",backgroundColor:this.boxColor};this.drawLabelOptions=new QH({...s,...a})}},nj=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.box=new _H(e),this.options=new tj(t)}draw(e){const t=ZH(e),{boxColor:n,lineWidth:r}=this.options,{x:a,y:s,width:i,height:o}=this.box;t.strokeStyle=n,t.lineWidth=r,t.strokeRect(a,s,i,o);const{label:u}=this.options;u&&new ej([u],{x:a-r/2,y:s},this.options.drawLabelOptions).draw(e)}};function rj(e,t){(Array.isArray(t)?t:[t]).forEach((t=>{const n=t instanceof FH?t.score:BH(t)?t.detection.score:void 0,r=t instanceof FH?t.box:BH(t)?t.detection.box:new _H(t),a=n?`${wH(n)}`:void 0;new nj(r,{label:a}).draw(e)}))}function aj(e){const{Image:t,Video:n}=XH.getEnv();return e instanceof t&&e.complete||e instanceof n&&e.readyState>=3}function sj(e){const{Image:t,Video:n}=XH.getEnv();return e instanceof t?new pH(e.naturalWidth,e.naturalHeight):e instanceof n?new pH(e.videoWidth,e.videoHeight):new pH(e.width,e.height)}function ij(e){let{width:t,height:n}=e;const{createCanvasElement:r}=XH.getEnv(),a=r();return a.width=t,a.height=n,a}function oj(e,t){const{ImageData:n}=XH.getEnv();if(!(e instanceof n||aj(e)))throw new Error("createCanvasFromMedia - media has not finished loading yet");const{width:r,height:a}=t||sj(e),s=ij({width:r,height:a});return e instanceof n?ZH(s).putImageData(e,0,0):ZH(s).drawImage(e,0,0,r,a),s}function uj(e){const{Image:t,Canvas:n,Video:r}=XH.getEnv();return e instanceof t||e instanceof n||e instanceof r}var lj=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this._imageTensors=[],this._canvases=[],this._treatAsBatchInput=!1,this._inputDimensions=[],this._inputSize=0,!Array.isArray(e))throw new Error(`NetInput.constructor - expected inputs to be an Array of TResolvedNetInput or to be instanceof tf.Tensor4D, instead have ${e}`);this._treatAsBatchInput=t,this._batchSize=e.length,e.forEach(((e,t)=>{if(yH(e))return this._imageTensors[t]=e,void(this._inputDimensions[t]=e.shape);if(bH(e)){const n=e.shape[0];if(1!==n)throw new Error(`NetInput - tf.Tensor4D with batchSize ${n} passed, but not supported in input array`);return this._imageTensors[t]=e,void(this._inputDimensions[t]=e.shape.slice(1))}const n=e instanceof XH.getEnv().Canvas?e:oj(e);this._canvases[t]=n,this._inputDimensions[t]=[n.height,n.width,3]}))}get imageTensors(){return this._imageTensors}get canvases(){return this._canvases}get isBatchInput(){return this.batchSize>1||this._treatAsBatchInput}get batchSize(){return this._batchSize}get inputDimensions(){return this._inputDimensions}get inputSize(){return this._inputSize}get reshapedInputDimensions(){return NH(this.batchSize,0,1).map(((e,t)=>this.getReshapedInputDimensions(t)))}getInput(e){return this.canvases[e]||this.imageTensors[e]}getInputDimensions(e){return this._inputDimensions[e]}getInputHeight(e){return this._inputDimensions[e][0]}getInputWidth(e){return this._inputDimensions[e][1]}getReshapedInputDimensions(e){if("number"!=typeof this.inputSize)throw new Error("getReshapedInputDimensions - inputSize not set, toBatchTensor has not been called yet");return IH({width:this.getInputWidth(e),height:this.getInputHeight(e)},this.inputSize)}toBatchTensor(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];return this._inputSize=e,iu((()=>{const n=NH(this.batchSize,0,1).map((n=>{const r=this.getInput(n);if(r instanceof ja){let n=bH(r)?r:Gl(r);return n=function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return iu((()=>{const[n,r]=e.shape.slice(1);if(n===r)return e;const a=Math.abs(n-r),s=Math.round(a*(t?.5:1)),i=n>r?2:1,o=t=>{const n=e.shape.slice();return n[i]=t,Kl(n,0,"float32")},u=o(s),l=a-u.shape[i],c=[t&&l?o(l):null,e,u].filter((e=>!!e)).map((e=>Ci(e,"float32")));return tl(c,i)}))}(n,t),n.shape[1]===e&&n.shape[2]===e||(n=Op.resizeBilinear(n,[e,e],!1,!1)),n.as3D(e,e,3)}if(r instanceof XH.getEnv().Canvas)return ro.fromPixels(function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const{Image:r,Canvas:a}=XH.getEnv();if(!(e instanceof r||e instanceof a))throw new Error("imageToSquare - expected arg0 to be HTMLImageElement | HTMLCanvasElement");if(t<=0)return ij({width:1,height:1});const s=sj(e),i=t/Math.max(s.height,s.width),o=i*s.width,u=i*s.height,l=ij({width:t,height:t}),c=e instanceof a?e:oj(e),h=Math.abs(o-u)/2,d=n&&o<u?h:0,p=n&&u<o?h:0;return c.width>0&&c.height>0&&ZH(l).drawImage(c,d,p,o,u),l}(r,e,t));throw new Error(`toBatchTensor - at batchIdx ${n}, expected input to be instanceof tf.Tensor or instanceof HTMLCanvasElement, instead have ${r}`)}));return Jh(n.map((e=>Ci(e,"float32")))).as4D(this.batchSize,e,e,3)}))}};async function cj(e){if(e instanceof lj)return e;const t=Array.isArray(e)?e:[e];if(!t.length)throw new Error("toNetInput - empty array passed as input");const n=t=>Array.isArray(e)?` at input index ${t}:`:"",r=t.map(YH);return r.forEach(((e,r)=>{if(!uj(e)&&!yH(e)&&!bH(e)){if("string"==typeof t[r])throw new Error(`toNetInput -${n(r)} string passed, but could not resolve HTMLElement for element id ${t[r]}`);throw new Error(`toNetInput -${n(r)} expected media to be of type HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | tf.Tensor3D, or to be an element id`)}if(bH(e)){const t=e.shape[0];if(1!==t)throw new Error(`toNetInput -${n(r)} tf.Tensor4D with batchSize ${t} passed, but not supported in input array`)}})),await Promise.all(r.map((e=>{return uj(e)&&(t=e,new Promise(((e,n)=>{function r(e){e.currentTarget&&(e.currentTarget.removeEventListener("load",a),e.currentTarget.removeEventListener("error",r),n(e))}function a(t){t.currentTarget&&(t.currentTarget.removeEventListener("load",a),t.currentTarget.removeEventListener("error",r),e(t))}(t instanceof XH.getEnv().Canvas||aj(t))&&e(null),t.addEventListener("load",a),t.addEventListener("error",r)})));var t}))),new lj(r,Array.isArray(e))}async function hj(e,t){const{Canvas:n}=XH.getEnv();let r=e;if(!(e instanceof n)){const t=await cj(e);if(t.batchSize>1)throw new Error("extractFaces - batchSize > 1 not supported");const a=t.getInput(0);r=a instanceof n?a:await async function(e,t){const n=XH.getEnv().createCanvasElement(),[r,a,s]=e.shape.slice(bH(e)?1:0),i=iu((()=>e.as3D(r,a,s).toInt()));return await ro.toPixels(i,n),i.dispose(),n}(a)}const a=ZH(r);return t.map((e=>e instanceof FH?e.forSize(r.width,r.height).box.floor():e)).map((e=>e.clipAtImageBorders(r.width,r.height))).map((e=>{let{x:t,y:n,width:r,height:s}=e;const i=ij({width:r,height:s});return r>0&&s>0&&ZH(i).putImageData(a.getImageData(t,n,r,s),0,0),i}))}async function dj(e,t){if(!yH(e)&&!bH(e))throw new Error("extractFaceTensors - expected image tensor to be 3D or 4D");if(bH(e)&&e.shape[0]>1)throw new Error("extractFaceTensors - batchSize > 1 not supported");return iu((()=>{const[n,r,a]=e.shape.slice(bH(e)?1:0);return t.map((e=>e instanceof FH?e.forSize(r,n).box:e)).map((e=>e.clipAtImageBorders(r,n))).map((t=>{let{x:s,y:i,width:o,height:u}=t;return Wh(e.as3D(n,r,a),[i,s,0],[u,o,a])}))}))}function pj(e,t){const n=`${t}-weights_manifest.json`;if(!e)return{modelBaseUri:"",manifestUri:n};if("/"===e)return{modelBaseUri:"/",manifestUri:`/${n}`};const r=e.startsWith("http://")?"http://":e.startsWith("https://")?"https://":"",a=(e=e.replace(r,"")).split("/").filter((e=>e)),s=e.endsWith(".json")?a[a.length-1]:n;let i=r+(e.endsWith(".json")?a.slice(0,a.length-1):a).join("/");return i=e.startsWith("/")?`/${i}`:i,{modelBaseUri:i,manifestUri:"/"===i?`/${s}`:`${i}/${s}`}}async function fj(e,t){const{manifestUri:n,modelBaseUri:r}=pj(e,t),a=await async function(e){return(await async function(e,t){const{fetch:n}=XH.getEnv(),r=await n(e,t);if(!(r.status<400))throw new Error(`failed to fetch: (${r.status}) ${r.statusText}, from url: ${r.url}`);return r}(e)).json()}(n);return Ai.loadWeights(a,r)}var mj=class{constructor(e){this._params=void 0,this._paramMappings=[],this._name=e}get params(){return this._params}get paramMappings(){return this._paramMappings}get isLoaded(){return!!this.params}getParamFromPath(e){const{obj:t,objProp:n}=this.traversePropertyPath(e);return t[n]}reassignParamFromPath(e,t){const{obj:n,objProp:r}=this.traversePropertyPath(e);n[r].dispose(),n[r]=t}getParamList(){return this._paramMappings.map((e=>{let{paramPath:t}=e;return{path:t,tensor:this.getParamFromPath(t)}}))}getTrainableParams(){return this.getParamList().filter((e=>e.tensor instanceof Ka))}getFrozenParams(){return this.getParamList().filter((e=>!(e.tensor instanceof Ka)))}variable(){this.getFrozenParams().forEach((e=>{let{path:t,tensor:n}=e;this.reassignParamFromPath(t,n.variable())}))}freeze(){this.getTrainableParams().forEach((e=>{let{path:t,tensor:n}=e;const r=Ms(n.dataSync());n.dispose(),this.reassignParamFromPath(t,r)}))}dispose(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];this.getParamList().forEach((t=>{if(e&&t.tensor.isDisposed)throw new Error(`param tensor has already been disposed for path ${t.path}`);t.tensor.dispose()})),this._params=void 0}serializeParams(){return new Float32Array(this.getParamList().map((e=>{let{tensor:t}=e;return Array.from(t.dataSync())})).reduce(((e,t)=>e.concat(t))))}async load(e){e instanceof Float32Array?this.extractWeights(e):await this.loadFromUri(e)}async loadFromUri(e){if(e&&"string"!=typeof e)throw new Error(`${this._name}.loadFromUri - expected model uri`);const t=await fj(e,this.getDefaultModelName());this.loadFromWeightMap(t)}async loadFromDisk(e){if(e&&"string"!=typeof e)throw new Error(`${this._name}.loadFromDisk - expected model file path`);const{readFile:t}=XH.getEnv(),{manifestUri:n,modelBaseUri:r}=pj(e,this.getDefaultModelName()),a=Ai.weightsLoaderFactory((e=>Promise.all(e.map((e=>t(e).then((e=>e.buffer))))))),s=JSON.parse((await t(n)).toString()),i=await a(s,r);this.loadFromWeightMap(i)}loadFromWeightMap(e){const{paramMappings:t,params:n}=this.extractParamsFromWeightMap(e);this._paramMappings=t,this._params=n}extractWeights(e){const{paramMappings:t,params:n}=this.extractParams(e);this._paramMappings=t,this._params=n}traversePropertyPath(e){if(!this.params)throw new Error("traversePropertyPath - model has no loaded params");const t=e.split("/").reduce(((t,n)=>{if(!t.nextObj.hasOwnProperty(n))throw new Error(`traversePropertyPath - object does not have property ${n}, for path ${e}`);return{obj:t.nextObj,objProp:n,nextObj:t.nextObj[n]}}),{nextObj:this.params}),{obj:n,objProp:r}=t;if(!(n&&r&&n[r]instanceof ja))throw new Error(`traversePropertyPath - parameter is not a tensor, for path ${e}`);return{obj:n,objProp:r}}};function gj(e,t,n){return iu((()=>{let r=Dh(e,t.depthwise_filter,t.pointwise_filter,n,"same");return r=xu(r,t.bias),r}))}function yj(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return iu((()=>{const r=Ih(n?xu(vl(e,t.conv0.filters,[2,2],"same"),t.conv0.bias):gj(e,t.conv0,[2,2])),a=gj(r,t.conv1,[1,1]),s=gj(Ih(xu(r,a)),t.conv2,[1,1]);return Ih(xu(r,xu(a,s)))}))}function bj(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];return iu((()=>{const a=Ih(n?xu(vl(e,t.conv0.filters,r?[2,2]:[1,1],"same"),t.conv0.bias):gj(e,t.conv0,r?[2,2]:[1,1])),s=gj(a,t.conv1,[1,1]),i=gj(Ih(xu(a,s)),t.conv2,[1,1]),o=gj(Ih(xu(a,xu(s,i))),t.conv3,[1,1]);return Ih(xu(a,xu(s,xu(i,o))))}))}function xj(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"same",r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];return iu((()=>{const a=xu(vl(e,t.filters,[1,1],n),t.bias);return r?Ih(a):a}))}function vj(e,t){Object.keys(e).forEach((n=>{t.some((e=>e.originalPath===n))||e[n].dispose()}))}function wj(e,t){return(n,r,a,s)=>{const i=ad(e(n*r*a*a),[a,a,n,r]),o=nd(e(r));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/bias`}),{filters:i,bias:o}}}function kj(e,t){return(n,r,a)=>{const s=rd(e(n*r),[n,r]),i=nd(e(r));return t.push({paramPath:`${a}/weights`},{paramPath:`${a}/bias`}),{weights:s,bias:i}}}var Ij=class{constructor(e,t,n){this.depthwise_filter=e,this.pointwise_filter=t,this.bias=n}};function Sj(e,t){return(n,r,a)=>{const s=ad(e(9*n),[3,3,n,1]),i=ad(e(n*r),[1,1,n,r]),o=nd(e(r));return t.push({paramPath:`${a}/depthwise_filter`},{paramPath:`${a}/pointwise_filter`},{paramPath:`${a}/bias`}),new Ij(s,i,o)}}function Nj(e){return t=>{const n=e(`${t}/depthwise_filter`,4),r=e(`${t}/pointwise_filter`,4),a=e(`${t}/bias`,1);return new Ij(n,r,a)}}function Tj(e,t){return(n,r,a)=>{const s=e[n];if(!fH(s,r))throw new Error(`expected weightMap[${n}] to be a Tensor${r}D, instead have ${s}`);return t.push({originalPath:n,paramPath:a||n}),s}}function Ej(e){let t=e;return{extractWeights:function(e){const n=t.slice(0,e);return t=t.slice(e),n},getRemainingWeights:function(){return t}}}function Cj(e,t){const n=wj(e,t),r=Sj(e,t);function a(e,t,a){let s=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const i=s?n(e,t,3,`${a}/conv0`):r(e,t,`${a}/conv0`),o=r(t,t,`${a}/conv1`),u=r(t,t,`${a}/conv2`);return{conv0:i,conv1:o,conv2:u}}return{extractDenseBlock3Params:a,extractDenseBlock4Params:function(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const{conv0:i,conv1:o,conv2:u}=a(e,t,n,s),l=r(t,t,`${n}/conv3`);return{conv0:i,conv1:o,conv2:u,conv3:l}}}}function _j(e){return t=>({filters:e(`${t}/filters`,4),bias:e(`${t}/bias`,1)})}function $j(e,t){const n=Tj(e,t),r=_j(n),a=Nj(n);return{extractDenseBlock3Params:function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n=t?r(`${e}/conv0`):a(`${e}/conv0`),s=a(`${e}/conv1`),i=a(`${e}/conv2`);return{conv0:n,conv1:s,conv2:i}},extractDenseBlock4Params:function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n=t?r(`${e}/conv0`):a(`${e}/conv0`),s=a(`${e}/conv1`),i=a(`${e}/conv2`),o=a(`${e}/conv3`);return{conv0:n,conv1:s,conv2:i,conv3:o}}}}var Aj=class extends mj{constructor(){super("FaceFeatureExtractor")}forwardInput(e){const{params:t}=this;if(!t)throw new Error("FaceFeatureExtractor - load model before inference");return iu((()=>{let n=bj(DH(Ci(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div(255),t.dense0,!0);return n=bj(n,t.dense1),n=bj(n,t.dense2),n=bj(n,t.dense3),n=Qu(n,[7,7],[2,2],"valid"),n}))}async forward(e){return this.forwardInput(await cj(e))}getDefaultModelName(){return"face_feature_extractor_model"}extractParamsFromWeightMap(e){return function(e){const t=[],{extractDenseBlock4Params:n}=$j(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2"),dense3:n("dense3")};return vj(e,t),{params:r,paramMappings:t}}(e)}extractParams(e){return function(e){const t=[],{extractWeights:n,getRemainingWeights:r}=Ej(e),{extractDenseBlock4Params:a}=Cj(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2"),u=a(128,256,"dense3");if(0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o,dense3:u}}}(e)}};function Fj(e,t){return iu((()=>xu(Ki(e,t.weights),t.bias)))}function Rj(e){const t={},n={};return Object.keys(e).forEach((r=>{(r.startsWith("fc")?n:t)[r]=e[r]})),{featureExtractorMap:t,classifierMap:n}}var Dj=class extends mj{constructor(e,t){super(e),this._faceFeatureExtractor=t}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){const{params:t}=this;if(!t)throw new Error(`${this._name} - load model before inference`);return iu((()=>{const n=e instanceof lj?this.faceFeatureExtractor.forwardInput(e):e;return Fj(n.as2D(n.shape[0],-1),t.fc)}))}dispose(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){const{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return function(e,t,n){const r=[],{extractWeights:a,getRemainingWeights:s}=Ej(e),i=kj(a,r)(t,n,"fc");if(0!==s().length)throw new Error(`weights remaing after extract: ${s().length}`);return{paramMappings:r,params:{fc:i}}}(e,this.getClassifierChannelsIn(),this.getClassifierChannelsOut())}extractParamsFromWeightMap(e){const{featureExtractorMap:t,classifierMap:n}=Rj(e);return this.faceFeatureExtractor.loadFromWeightMap(t),function(e){const t=[],n=Tj(e,t),r={fc:("fc",{weights:n("fc/weights",2),bias:n("fc/bias",1)})};return vj(e,t),{params:r,paramMappings:t}}(n)}extractParams(e){const t=this.getClassifierChannelsIn(),n=this.getClassifierChannelsOut(),r=n*t+n,a=e.slice(0,e.length-r),s=e.slice(e.length-r);return this.faceFeatureExtractor.extractWeights(a),this.extractClassifierParams(s)}},Mj=["neutral","happy","sad","angry","fearful","disgusted","surprised"],Oj=class{constructor(e){if(this.neutral=0,this.happy=0,this.sad=0,this.angry=0,this.fearful=0,this.disgusted=0,this.surprised=0,7!==e.length)throw new Error(`FaceExpressions.constructor - expected probabilities.length to be 7, have: ${e.length}`);Mj.forEach(((t,n)=>{this[t]=e[n]}))}asSortedArray(){return Mj.map((e=>({expression:e,probability:this[e]}))).sort(((e,t)=>t.probability-e.probability))}};function Lj(e){return e.expressions instanceof Oj}function zj(e,t){return{...e,expressions:t}}function Pj(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.1,r=arguments.length>3?arguments[3]:void 0;const a=Array.isArray(t)?t:[t];a.forEach((t=>{const a=t instanceof Oj?t:Lj(t)?t.expressions:void 0;if(!a)throw new Error("drawFaceExpressions - expected faceExpressions to be FaceExpressions | WithFaceExpressions<{}> or array thereof");const s=a.asSortedArray().filter((e=>e.probability>n)),i=BH(t)?t.detection.box.bottomLeft:r||new CH(0,0);new ej(s.map((e=>`${e.expression} (${wH(e.probability)})`)),i).draw(e)}))}function Bj(e){return BH(e)&&e.landmarks instanceof zH&&e.unshiftedLandmarks instanceof zH&&e.alignedRect instanceof FH}function Wj(e,t){const{box:n}=e.detection,r=t.shiftBy(n.x,n.y),a=r.align(),{imageDims:s}=e.detection,i={landmarks:r,unshiftedLandmarks:t,alignedRect:new FH(e.detection.score,a.rescale(s.reverse()),s),angle:function(e){const t=(e,t,n,r)=>Math.atan2(r-t,n-e)%Math.PI,n={roll:void 0,pitch:void 0,yaw:void 0};if(!e||!e._positions||68!==e._positions.length)return n;const r=e._positions;n.roll=-t(r[36]._x,r[36]._y,r[45]._x,r[45]._y),n.pitch=t(0,Math.abs(r[0]._x-r[30]._x)/r[30]._x,Math.PI,Math.abs(r[16]._x-r[30]._x)/r[30]._x);const a=r.reduce(((e,t)=>e<t._y?e:t._y),1/0),s=r.reduce(((e,t)=>e>t._y?e:t._y),-1/0);return n.yaw=Math.PI*(e._imgDims._height/(s-a)/1.4-1),n}(t)};return{...e,...i}}var Vj=class{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{drawLines:t=!0,drawPoints:n=!0,lineWidth:r,lineColor:a,pointSize:s,pointColor:i}=e;this.drawLines=t,this.drawPoints=n,this.lineWidth=r||1,this.pointSize=s||2,this.lineColor=a||"rgba(0, 255, 255, 1)",this.pointColor=i||"rgba(255, 0, 255, 1)"}},Uj=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.faceLandmarks=e,this.options=new Vj(t)}draw(e){const t=ZH(e),{drawLines:n,drawPoints:r,lineWidth:a,lineColor:s,pointSize:i,pointColor:o}=this.options;if(n&&this.faceLandmarks instanceof PH&&(t.strokeStyle=s,t.lineWidth=a,dH(t,this.faceLandmarks.getJawOutline()),dH(t,this.faceLandmarks.getLeftEyeBrow()),dH(t,this.faceLandmarks.getRightEyeBrow()),dH(t,this.faceLandmarks.getNose()),dH(t,this.faceLandmarks.getLeftEye(),!0),dH(t,this.faceLandmarks.getRightEye(),!0),dH(t,this.faceLandmarks.getMouth(),!0)),r){t.strokeStyle=o,t.fillStyle=o;const e=e=>{t.beginPath(),t.arc(e.x,e.y,i,0,2*Math.PI),t.fill()};this.faceLandmarks.positions.forEach(e)}}};function Gj(e,t){(Array.isArray(t)?t:[t]).forEach((t=>{const n=t instanceof zH?t:Bj(t)?t.landmarks:void 0;if(!n)throw new Error("drawFaceLandmarks - expected faceExpressions to be FaceLandmarks | WithFaceLandmarks<WithFaceDetection<{}>> or array thereof");new Uj(n).draw(e)}))}function Hj(e,t,n){return xu(vl(e,t.filters,n,"same"),t.bias)}function jj(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],r=n?Ih(e):e;return r=gj(r,t.separable_conv0,[1,1]),r=gj(Ih(r),t.separable_conv1,[1,1]),r=Lc(r,[3,3],[2,2],"same"),r=xu(r,Hj(e,t.expansion_conv,[2,2])),r}var qj=class extends mj{constructor(e){super("TinyXception"),this._numMainBlocks=e}forwardInput(e){const{params:t}=this;if(!t)throw new Error("TinyXception - load model before inference");return iu((()=>{const n=DH(Ci(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div(255);let r=Ih(Hj(n,t.entry_flow.conv_in,[2,2]));return r=jj(r,t.entry_flow.reduction_block_0,!1),r=jj(r,t.entry_flow.reduction_block_1),NH(this._numMainBlocks,0,1).forEach((e=>{r=function(e,t){let n=gj(Ih(e),t.separable_conv0,[1,1]);return n=gj(Ih(n),t.separable_conv1,[1,1]),n=gj(Ih(n),t.separable_conv2,[1,1]),n=xu(n,e),n}(r,t.middle_flow[`main_block_${e}`])})),r=jj(r,t.exit_flow.reduction_block),r=Ih(gj(r,t.exit_flow.separable_conv,[1,1])),r}))}async forward(e){return this.forwardInput(await cj(e))}getDefaultModelName(){return"tiny_xception_model"}extractParamsFromWeightMap(e){return function(e,t){const n=[],{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:s,extractMainBlockParams:i}=function(e,t){const n=Tj(e,t),r=_j(n),a=Nj(n);return{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:function(e){return{separable_conv0:a(`${e}/separable_conv0`),separable_conv1:a(`${e}/separable_conv1`),expansion_conv:r(`${e}/expansion_conv`)}},extractMainBlockParams:function(e){return{separable_conv0:a(`${e}/separable_conv0`),separable_conv1:a(`${e}/separable_conv1`),separable_conv2:a(`${e}/separable_conv2`)}}}}(e,n),o={conv_in:r("entry_flow/conv_in"),reduction_block_0:s("entry_flow/reduction_block_0"),reduction_block_1:s("entry_flow/reduction_block_1")},u={};NH(t,0,1).forEach((e=>{u[`main_block_${e}`]=i(`middle_flow/main_block_${e}`)}));const l={reduction_block:s("exit_flow/reduction_block"),separable_conv:a("exit_flow/separable_conv")};return vj(e,n),{params:{entry_flow:o,middle_flow:u,exit_flow:l},paramMappings:n}}(e,this._numMainBlocks)}extractParams(e){return function(e,t){const n=[],{extractWeights:r,getRemainingWeights:a}=Ej(e),{extractConvParams:s,extractSeparableConvParams:i,extractReductionBlockParams:o,extractMainBlockParams:u}=function(e,t){const n=wj(e,t),r=Sj(e,t);return{extractConvParams:n,extractSeparableConvParams:r,extractReductionBlockParams:function(e,t,a){return{separable_conv0:r(e,t,`${a}/separable_conv0`),separable_conv1:r(t,t,`${a}/separable_conv1`),expansion_conv:n(e,t,1,`${a}/expansion_conv`)}},extractMainBlockParams:function(e,t){return{separable_conv0:r(e,e,`${t}/separable_conv0`),separable_conv1:r(e,e,`${t}/separable_conv1`),separable_conv2:r(e,e,`${t}/separable_conv2`)}}}}(r,n),l={conv_in:s(3,32,3,"entry_flow/conv_in"),reduction_block_0:o(32,64,"entry_flow/reduction_block_0"),reduction_block_1:o(64,128,"entry_flow/reduction_block_1")},c={};NH(t,0,1).forEach((e=>{c[`main_block_${e}`]=u(128,`middle_flow/main_block_${e}`)}));const h={reduction_block:o(128,256,"exit_flow/reduction_block"),separable_conv:i(256,512,"exit_flow/separable_conv")};if(0!==a().length)throw new Error(`weights remaing after extract: ${a().length}`);return{paramMappings:n,params:{entry_flow:l,middle_flow:c,exit_flow:h}}}(e,this._numMainBlocks)}},Kj=class extends Dj{postProcess(e,t,n){const r=n.map((e=>{let{width:n,height:r}=e;const a=t/Math.max(r,n);return{width:n*a,height:r*a}})),a=r.length;return iu((()=>{const n=(e,t)=>Jh([Kl([68],e,"float32"),Kl([68],t,"float32")],1).as2D(1,136).as1D(),s=(e,t)=>{const{width:n,height:a}=r[e];return t(n,a)?Math.abs(n-a)/2:0};return e.mul(Kl([a,136],t,"float32")).sub(Jh(Array.from(Array(a),((e,t)=>n((e=>s(e,((e,t)=>e<t)))(t),(e=>s(e,((e,t)=>t<e)))(t)))))).div(Jh(Array.from(Array(a),((e,t)=>n(r[t].width,r[t].height)))))}))}forwardInput(e){return iu((()=>{const t=this.runNet(e);return this.postProcess(t,e.inputSize,e.inputDimensions.map((e=>{let[t,n]=e;return{height:t,width:n}})))}))}async forward(e){return this.forwardInput(await cj(e))}async detectLandmarks(e){const t=await cj(e),n=iu((()=>hd(this.forwardInput(t)))),r=await Promise.all(n.map((async(e,n)=>{const r=Array.from(e.dataSync()),a=r.filter(((e,t)=>vH(t))),s=r.filter(((e,t)=>!vH(t)));return new PH(Array(68).fill(0).map(((e,t)=>new CH(a[t],s[t]))),{height:t.getInputHeight(n),width:t.getInputWidth(n)})})));return n.forEach((e=>e.dispose())),t.isBatchInput?r:r[0]}getClassifierChannelsOut(){return 136}},Xj=class extends mj{constructor(){super("TinyFaceFeatureExtractor")}forwardInput(e){const{params:t}=this;if(!t)throw new Error("TinyFaceFeatureExtractor - load model before inference");return iu((()=>{let n=yj(DH(Ci(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div(255),t.dense0,!0);return n=yj(n,t.dense1),n=yj(n,t.dense2),n=Qu(n,[14,14],[2,2],"valid"),n}))}async forward(e){return this.forwardInput(await cj(e))}getDefaultModelName(){return"face_feature_extractor_tiny_model"}extractParamsFromWeightMap(e){return function(e){const t=[],{extractDenseBlock3Params:n}=$j(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2")};return vj(e,t),{params:r,paramMappings:t}}(e)}extractParams(e){return function(e){const t=[],{extractWeights:n,getRemainingWeights:r}=Ej(e),{extractDenseBlock3Params:a}=Cj(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2");if(0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o}}}(e)}};function Yj(e,t){return xu(ku(e,t.weights),t.biases)}function Zj(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"same";const{filters:s,bias:i}=t.conv;let o=vl(e,s,n,a);return o=xu(o,i),o=Yj(o,t.scale),r?Ih(o):o}function Jj(e,t){return Zj(e,t,[1,1],!1)}function Qj(e,t){return Zj(e,t,[2,2],!0,"valid")}function eq(e,t){function n(n,r,a,s){const i=function(n,r,a,s){const i=function(t,n,r){const a=e(t),s=a.length/(n*r*r);if(xH(s))throw new Error(`depth has to be an integer: ${s}, weights.length: ${a.length}, numFilters: ${n}, filterSize: ${r}`);return iu((()=>Yi(ad(a,[n,s,r,r]),[2,3,1,0])))}(n,r,a),o=nd(e(r));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/bias`}),{filters:i,bias:o}}(n,r,a,`${s}/conv`),o=function(n,r){const a=nd(e(n)),s=nd(e(n));return t.push({paramPath:`${r}/weights`},{paramPath:`${r}/biases`}),{weights:a,biases:s}}(r,`${s}/scale`);return{conv:i,scale:o}}return{extractConvLayerParams:n,extractResidualLayerParams:function(e,t,r,a){let s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];const i=n((s?.5:1)*e,t,r,`${a}/conv1`),o=n(e,t,r,`${a}/conv2`);return{conv1:i,conv2:o}}}}function tq(e,t){let n=function(e,t){return Zj(e,t,[1,1],!0)}(e,t.conv1);return n=Jj(n,t.conv2),n=xu(n,e),n=Ih(n),n}function nq(e,t){let n=Qj(e,t.conv1);n=Jj(n,t.conv2);let r=Qu(e,2,2,"valid");const a=Vc(r.shape),s=r.shape[3]!==n.shape[3];if(r.shape[1]!==n.shape[1]||r.shape[2]!==n.shape[2]){const e=[...n.shape];e[1]=1;const t=Vc(e);n=tl([n,t],1);const r=[...n.shape];r[2]=1;const a=Vc(r);n=tl([n,a],2)}return r=s?tl([r,a],3):r,n=xu(r,n),n=Ih(n),n}function rq(e,t){return{...e,descriptor:t}}function aq(e,t){return{...e,age:t}}function sq(e,t,n){return{...e,gender:t,genderProbability:n}}function iq(e,t,n){return iu((()=>{let r=vl(e,t.filters,n,"same");return r=xu(r,t.batch_norm_offset),ml(r,0,6)}))}function oq(e,t,n){const r=e.arraySync(),a=Math.min(r[t][0],r[t][2]),s=Math.min(r[t][1],r[t][3]),i=Math.max(r[t][0],r[t][2]),o=Math.max(r[t][1],r[t][3]),u=Math.min(r[n][0],r[n][2]),l=Math.min(r[n][1],r[n][3]),c=Math.max(r[n][0],r[n][2]),h=Math.max(r[n][1],r[n][3]),d=(i-a)*(o-s),p=(c-u)*(h-l);if(d<=0||p<=0)return 0;const f=Math.max(a,u),m=Math.max(s,l),g=Math.min(i,c),y=Math.min(o,h),b=Math.max(g-f,0)*Math.max(y-m,0);return b/(d+p-b)}function uq(e,t){return iu((()=>{const n=e.shape[0];return{boxPredictionEncoding:Ju(xj(e,t.box_encoding_predictor),[n,-1,1,4]),classPrediction:Ju(xj(e,t.class_predictor),[n,-1,3])}}))}var lq=class{constructor(){let{minConfidence:e,maxResults:t}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(this._name="SsdMobilenetv1Options",this._minConfidence=e||.5,this._maxResults=t||100,"number"!=typeof this._minConfidence||this._minConfidence<=0||this._minConfidence>=1)throw new Error(`${this._name} - expected minConfidence to be a number between 0 and 1`);if("number"!=typeof this._maxResults)throw new Error(`${this._name} - expected maxResults to be a number`)}get minConfidence(){return this._minConfidence}get maxResults(){return this._maxResults}},cq=[new CH(.738768,.874946),new CH(2.42204,2.65704),new CH(4.30971,7.04493),new CH(10.246,4.59428),new CH(12.6868,11.8741)],hq=[new CH(1.603231,2.094468),new CH(6.041143,7.080126),new CH(2.882459,3.518061),new CH(4.266906,5.178857),new CH(9.041765,10.66308)],dq=[117.001,114.697,97.404],pq=e=>"number"==typeof e;function fq(e){return iu((()=>{const t=ku(e,Fh(.10000000149011612));return xu(Ih(wc(e,t)),t)}))}function mq(e,t){return iu((()=>{let n=nh(e,[[0,0],[1,1],[1,1],[0,0]]);return n=vl(n,t.conv.filters,[1,1],"valid"),n=wc(n,t.bn.sub),n=ku(n,t.bn.truediv),n=xu(n,t.conv.bias),fq(n)}))}function gq(e,t){return iu((()=>{let n=nh(e,[[0,0],[1,1],[1,1],[0,0]]);return n=Dh(n,t.depthwise_filter,t.pointwise_filter,[1,1],"valid"),n=xu(n,t.bias),fq(n)}))}var yq=class{constructor(){let{inputSize:e,scoreThreshold:t}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(this._name="TinyYolov2Options",this._inputSize=e||416,this._scoreThreshold=t||.5,"number"!=typeof this._inputSize||this._inputSize%32!=0)throw new Error(`${this._name} - expected inputSize to be a number divisible by 32`);if("number"!=typeof this._scoreThreshold||this._scoreThreshold<=0||this._scoreThreshold>=1)throw new Error(`${this._name} - expected scoreThreshold to be a number between 0 and 1`)}get inputSize(){return this._inputSize}get scoreThreshold(){return this._scoreThreshold}},bq=class extends mj{constructor(e){super("TinyYolov2"),function(e){if(!e)throw new Error(`invalid config: ${e}`);if("boolean"!=typeof e.withSeparableConvs)throw new Error(`config.withSeparableConvs has to be a boolean, have: ${e.withSeparableConvs}`);if(!pq(e.iouThreshold)||e.iouThreshold<0||e.iouThreshold>1)throw new Error(`config.iouThreshold has to be a number between [0, 1], have: ${e.iouThreshold}`);if(!Array.isArray(e.classes)||!e.classes.length||!e.classes.every((e=>"string"==typeof e)))throw new Error(`config.classes has to be an array class names: string[], have: ${JSON.stringify(e.classes)}`);if(!Array.isArray(e.anchors)||!e.anchors.length||!e.anchors.map((e=>e||{})).every((e=>pq(e.x)&&pq(e.y))))throw new Error(`config.anchors has to be an array of { x: number, y: number }, have: ${JSON.stringify(e.anchors)}`);if(e.meanRgb&&(!Array.isArray(e.meanRgb)||3!==e.meanRgb.length||!e.meanRgb.every(pq)))throw new Error(`config.meanRgb has to be an array of shape [number, number, number], have: ${JSON.stringify(e.meanRgb)}`)}(e),this._config=e}get config(){return this._config}get withClassScores(){return this.config.withClassScores||this.config.classes.length>1}get boxEncodingSize(){return 5+(this.withClassScores?this.config.classes.length:0)}runTinyYolov2(e,t){let n=mq(e,t.conv0);return n=Lc(n,[2,2],[2,2],"same"),n=mq(n,t.conv1),n=Lc(n,[2,2],[2,2],"same"),n=mq(n,t.conv2),n=Lc(n,[2,2],[2,2],"same"),n=mq(n,t.conv3),n=Lc(n,[2,2],[2,2],"same"),n=mq(n,t.conv4),n=Lc(n,[2,2],[2,2],"same"),n=mq(n,t.conv5),n=Lc(n,[2,2],[1,1],"same"),n=mq(n,t.conv6),n=mq(n,t.conv7),xj(n,t.conv8,"valid",!1)}runMobilenet(e,t){let n=this.config.isFirstLayerConv2d?fq(xj(e,t.conv0,"valid",!1)):gq(e,t.conv0);return n=Lc(n,[2,2],[2,2],"same"),n=gq(n,t.conv1),n=Lc(n,[2,2],[2,2],"same"),n=gq(n,t.conv2),n=Lc(n,[2,2],[2,2],"same"),n=gq(n,t.conv3),n=Lc(n,[2,2],[2,2],"same"),n=gq(n,t.conv4),n=Lc(n,[2,2],[2,2],"same"),n=gq(n,t.conv5),n=Lc(n,[2,2],[1,1],"same"),n=t.conv6?gq(n,t.conv6):n,n=t.conv7?gq(n,t.conv7):n,xj(n,t.conv8,"valid",!1)}forwardInput(e,t){const{params:n}=this;if(!n)throw new Error("TinyYolov2 - load model before inference");return iu((()=>{let r=Ci(e.toBatchTensor(t,!1),"float32");return r=this.config.meanRgb?DH(r,this.config.meanRgb):r,r=r.div(255),this.config.withSeparableConvs?this.runMobilenet(r,n):this.runTinyYolov2(r,n)}))}async forward(e,t){return this.forwardInput(await cj(e),t)}async detect(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{inputSize:n,scoreThreshold:r}=new yq(t),a=await cj(e),s=await this.forwardInput(a,n),i=iu((()=>hd(s)[0].expandDims())),o={width:a.getInputWidth(0),height:a.getInputHeight(0)},u=await this.extractBoxes(i,a.getReshapedInputDimensions(0),r);s.dispose(),i.dispose();const l=u.map((e=>e.box)),c=u.map((e=>e.score)),h=u.map((e=>e.classScore)),d=u.map((e=>this.config.classes[e.label])),p=function(e,t,n){let r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],a=t.map(((e,t)=>({score:e,boxIndex:t}))).sort(((e,t)=>e.score-t.score)).map((e=>e.boxIndex));const s=[];for(;a.length>0;){const t=a.pop();s.push(t);const i=a,o=[];for(let n=0;n<i.length;n++){const a=i[n],s=e[t],u=e[a];o.push(RH(s,u,r))}a=a.filter(((e,t)=>o[t]<=n))}return s}(l.map((e=>e.rescale(n))),c,this.config.iouThreshold,!0);return p.map((e=>new AH(c[e],h[e],d[e],l[e],o)))}getDefaultModelName(){return""}extractParamsFromWeightMap(e){return function(e,t){const n=[],{extractConvParams:r,extractConvWithBatchNormParams:a,extractSeparableConvParams:s}=function(e,t){const n=Tj(e,t);function r(e){return{filters:n(`${e}/filters`,4),bias:n(`${e}/bias`,1)}}return{extractConvParams:r,extractConvWithBatchNormParams:function(e){const t=r(`${e}/conv`),a=function(e){return{sub:n(`${e}/sub`,1),truediv:n(`${e}/truediv`,1)}}(`${e}/bn`);return{conv:t,bn:a}},extractSeparableConvParams:Nj(n)}}(e,n);let i;if(t.withSeparableConvs){const e=t.filterSizes&&t.filterSizes.length||9;i={conv0:t.isFirstLayerConv2d?r("conv0"):s("conv0"),conv1:s("conv1"),conv2:s("conv2"),conv3:s("conv3"),conv4:s("conv4"),conv5:s("conv5"),conv6:e>7?s("conv6"):void 0,conv7:e>8?s("conv7"):void 0,conv8:r("conv8")}}else i={conv0:a("conv0"),conv1:a("conv1"),conv2:a("conv2"),conv3:a("conv3"),conv4:a("conv4"),conv5:a("conv5"),conv6:a("conv6"),conv7:a("conv7"),conv8:r("conv8")};return vj(e,n),{params:i,paramMappings:n}}(e,this.config)}extractParams(e){const t=this.config.filterSizes||bq.DEFAULT_FILTER_SIZES,n=t?t.length:void 0;if(7!==n&&8!==n&&9!==n)throw new Error(`TinyYolov2 - expected 7 | 8 | 9 convolutional filters, but found ${n} filterSizes in config`);return function(e,t,n,r){const{extractWeights:a,getRemainingWeights:s}=Ej(e),i=[],{extractConvParams:o,extractConvWithBatchNormParams:u,extractSeparableConvParams:l}=function(e,t){const n=wj(e,t),r=Sj(e,t);return{extractConvParams:n,extractConvWithBatchNormParams:function(r,a,s){const i=n(r,a,3,`${s}/conv`),o=function(n,r){const a=nd(e(n)),s=nd(e(n));return t.push({paramPath:`${r}/sub`},{paramPath:`${r}/truediv`}),{sub:a,truediv:s}}(a,`${s}/bn`);return{conv:i,bn:o}},extractSeparableConvParams:r}}(a,i);let c;if(t.withSeparableConvs){const[e,a,s,i,u,h,d,p,f]=r;c={conv0:t.isFirstLayerConv2d?o(e,a,3,"conv0"):l(e,a,"conv0"),conv1:l(a,s,"conv1"),conv2:l(s,i,"conv2"),conv3:l(i,u,"conv3"),conv4:l(u,h,"conv4"),conv5:l(h,d,"conv5"),conv6:p?l(d,p,"conv6"):void 0,conv7:f?l(p,f,"conv7"):void 0,conv8:o(f||p||d,5*n,1,"conv8")}}else{const[e,t,a,s,i,l,h,d,p]=r;c={conv0:u(e,t,"conv0"),conv1:u(t,a,"conv1"),conv2:u(a,s,"conv2"),conv3:u(s,i,"conv3"),conv4:u(i,l,"conv4"),conv5:u(l,h,"conv5"),conv6:u(h,d,"conv6"),conv7:u(d,p,"conv7"),conv8:o(p,5*n,1,"conv8")}}if(0!==s().length)throw new Error(`weights remaing after extract: ${s().length}`);return{params:c,paramMappings:i}}(e,this.config,this.boxEncodingSize,t)}async extractBoxes(e,t,n){const{width:r,height:a}=t,s=Math.max(r,a),i=s/r,o=s/a,u=e.shape[1],l=this.config.anchors.length,[c,h,d]=iu((()=>{const t=e.reshape([u,u,l,this.boxEncodingSize]);return[t.slice([0,0,0,0],[u,u,l,4]),t.slice([0,0,0,4],[u,u,l,1]),this.withClassScores?Uh(t.slice([0,0,0,5],[u,u,l,this.config.classes.length]),3):Fh(0)]})),p=[],f=await h.array(),m=await c.array();for(let e=0;e<u;e++)for(let t=0;t<u;t++)for(let r=0;r<l;r++){const a=MH(f[e][t][r][0]);if(!n||a>n){const n=(t+MH(m[e][t][r][0]))/u*i,s=(e+MH(m[e][t][r][1]))/u*o,l=Math.exp(m[e][t][r][2])*this.config.anchors[r].x/u*i,c=Math.exp(m[e][t][r][3])*this.config.anchors[r].y/u*o,h=n-l/2,f=s-c/2,g={row:e,col:t,anchor:r},{classScore:y,label:b}=this.withClassScores?await this.extractPredictedClass(d,g):{classScore:1,label:0};p.push({box:new $H(h,f,h+l,f+c),score:a,classScore:a*y,label:b,...g})}}return c.dispose(),h.dispose(),d.dispose(),p}async extractPredictedClass(e,t){const{row:n,col:r,anchor:a}=t,s=await e.array();return Array(this.config.classes.length).fill(0).map(((e,t)=>s[n][r][a][t])).map(((e,t)=>({classScore:e,label:t}))).reduce(((e,t)=>e.classScore>t.classScore?e:t))}},xq=bq;xq.DEFAULT_FILTER_SIZES=[3,16,32,64,128,256,512,1024,1024];var vq=class extends yq{constructor(){super(...arguments),this._name="TinyFaceDetectorOptions"}},wq=class{async then(e){return e(await this.run())}async run(){throw new Error("ComposableTask - run is not implemented")}};async function kq(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:e=>{let{alignedRect:t}=e;return t};const s=e.map((e=>Bj(e)?a(e):e.detection)),i=r||(t instanceof ja?await dj(t,s):await hj(t,s)),o=await n(i);return i.forEach((e=>e instanceof ja&&e.dispose())),o}async function Iq(e,t,n,r,a){return kq([e],t,(async e=>n(e[0])),r,a)}var Sq=[new CH(1.603231,2.094468),new CH(6.041143,7.080126),new CH(2.882459,3.518061),new CH(4.266906,5.178857),new CH(9.041765,10.66308)],Nq=[117.001,114.697,97.404],Tq={ssdMobilenetv1:new class extends mj{constructor(){super("SsdMobilenetv1")}forwardInput(e){const{params:t}=this;if(!t)throw new Error("SsdMobilenetv1 - load model before inference");return iu((()=>{const n=Ci(e.toBatchTensor(512,!1),"float32"),r=function(e,t){return iu((()=>{let n,r=iq(e,t.conv_0,[2,2]);if([t.conv_1,t.conv_2,t.conv_3,t.conv_4,t.conv_5,t.conv_6,t.conv_7,t.conv_8,t.conv_9,t.conv_10,t.conv_11,t.conv_12,t.conv_13].forEach(((e,t)=>{const a=t+1,s=function(e){return[2,4,6,12].some((t=>t===e))?[2,2]:[1,1]}(a);r=function(e,t,n){return iu((()=>{let r=Fl(e,t.filters,n,"same");return r=ol(r,t.batch_norm_mean,t.batch_norm_variance,t.batch_norm_offset,t.batch_norm_scale,.0010000000474974513),ml(r,0,6)}))}(r,e.depthwise_conv,s),r=iq(r,e.pointwise_conv,[1,1]),11===a&&(n=r)})),null===n)throw new Error("mobileNetV1 - output of conv layer 11 is null");return{out:r,conv11:n}}))}(wc(wu(n,127.5),1),t.mobilenetv1),{boxPredictions:a,classPredictions:s}=function(e,t,n){return iu((()=>{const r=iq(e,n.conv_0,[1,1]),a=iq(r,n.conv_1,[2,2]),s=iq(a,n.conv_2,[1,1]),i=iq(s,n.conv_3,[2,2]),o=iq(i,n.conv_4,[1,1]),u=iq(o,n.conv_5,[2,2]),l=iq(u,n.conv_6,[1,1]),c=iq(l,n.conv_7,[2,2]),h=uq(t,n.box_predictor_0),d=uq(e,n.box_predictor_1),p=uq(a,n.box_predictor_2),f=uq(i,n.box_predictor_3),m=uq(u,n.box_predictor_4),g=uq(c,n.box_predictor_5);return{boxPredictions:tl([h.boxPredictionEncoding,d.boxPredictionEncoding,p.boxPredictionEncoding,f.boxPredictionEncoding,m.boxPredictionEncoding,g.boxPredictionEncoding],1),classPredictions:tl([h.classPrediction,d.classPrediction,p.classPrediction,f.classPrediction,m.classPrediction,g.classPrediction],1)}}))}(r.out,r.conv11,t.prediction_layer);return function(e,t,n){return iu((()=>{const r=e.shape[0];let a=function(e,t){const{sizes:n,centers:r}=function(e){const t=hd(Yi(e,[1,0])),n=[wc(t[2],t[0]),wc(t[3],t[1])];return{sizes:n,centers:[xu(t[0],wu(n[0],2)),xu(t[1],wu(n[1],2))]}}(e),a=hd(Yi(t,[1,0])),s=wu(ku(Ul(wu(a[2],5)),n[0]),2),i=xu(ku(wu(a[0],10),n[0]),r[0]),o=wu(ku(Ul(wu(a[3],5)),n[1]),2),u=xu(ku(wu(a[1],10),n[1]),r[1]);return Yi(Jh([wc(i,s),wc(u,o),xu(i,s),xu(u,o)]),[1,0])}(Ju(jl(n.extra_dim,[r,1,1]),[-1,4]),Ju(e,[-1,4]));a=Ju(a,[r,a.shape[0]/r,4]);const s=nl(rl(t,[0,0,1],[-1,-1,-1]));let i=rl(s,[0,0,0],[-1,-1,1]);return i=Ju(i,[r,i.shape[1]]),{boxes:hd(a),scores:hd(i)}}))}(a,s,t.output_layer)}))}async forward(e){return this.forwardInput(await cj(e))}async locateFaces(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{maxResults:n,minConfidence:r}=new lq(t),a=await cj(e),{boxes:s,scores:i}=this.forwardInput(a),o=s[0],u=i[0];for(let e=1;e<s.length;e++)s[e].dispose(),i[e].dispose();const l=Array.from(u.dataSync()),c=function(e,t,n,r,a){const s=e.shape[0],i=Math.min(n,s),o=t.map(((e,t)=>({score:e,boxIndex:t}))).filter((e=>e.score>a)).sort(((e,t)=>t.score-e.score)),u=[];return o.forEach((t=>{if(u.length>=i)return;const n=t.score;for(let n=u.length-1;n>=0;--n){const r=oq(e,t.boxIndex,u[n]);if(0!==r&&(t.score*=r<=.5?1:0,t.score<=a))break}n===t.score&&u.push(t.boxIndex)})),u}(o,l,n,0,r),h=a.getReshapedInputDimensions(0),d=a.inputSize,p=d/h.width,f=d/h.height,m=o.arraySync(),g=c.map((e=>{const[t,n]=[Math.max(0,m[e][0]),Math.min(1,m[e][2])].map((e=>e*f)),[r,s]=[Math.max(0,m[e][1]),Math.min(1,m[e][3])].map((e=>e*p));return new FH(l[e],new LH(r,t,s-r,n-t),{height:a.getInputHeight(0),width:a.getInputWidth(0)})}));return o.dispose(),u.dispose(),g}getDefaultModelName(){return"ssd_mobilenetv1_model"}extractParamsFromWeightMap(e){return function(e){const t=[],{extractMobilenetV1Params:n,extractPredictionLayerParams:r}=function(e,t){const n=Tj(e,t);function r(e,t,r){return{filters:n(`${e}/Conv2d_${t}_pointwise/weights`,4,`${r}/filters`),batch_norm_offset:n(`${e}/Conv2d_${t}_pointwise/convolution_bn_offset`,1,`${r}/batch_norm_offset`)}}function a(e){const t=`mobilenetv1/conv_${e}`,a=`MobilenetV1/Conv2d_${e}_depthwise`,s=`${t}/depthwise_conv`,i=`${t}/pointwise_conv`;return{depthwise_conv:{filters:n(`${a}/depthwise_weights`,4,`${s}/filters`),batch_norm_scale:n(`${a}/BatchNorm/gamma`,1,`${s}/batch_norm_scale`),batch_norm_offset:n(`${a}/BatchNorm/beta`,1,`${s}/batch_norm_offset`),batch_norm_mean:n(`${a}/BatchNorm/moving_mean`,1,`${s}/batch_norm_mean`),batch_norm_variance:n(`${a}/BatchNorm/moving_variance`,1,`${s}/batch_norm_variance`)},pointwise_conv:r("MobilenetV1",e,i)}}function s(e,t){return{filters:n(`${e}/weights`,4,`${t}/filters`),bias:n(`${e}/biases`,1,`${t}/bias`)}}function i(e){return{box_encoding_predictor:s(`Prediction/BoxPredictor_${e}/BoxEncodingPredictor`,`prediction_layer/box_predictor_${e}/box_encoding_predictor`),class_predictor:s(`Prediction/BoxPredictor_${e}/ClassPredictor`,`prediction_layer/box_predictor_${e}/class_predictor`)}}return{extractMobilenetV1Params:function(){return{conv_0:r("MobilenetV1",0,"mobilenetv1/conv_0"),conv_1:a(1),conv_2:a(2),conv_3:a(3),conv_4:a(4),conv_5:a(5),conv_6:a(6),conv_7:a(7),conv_8:a(8),conv_9:a(9),conv_10:a(10),conv_11:a(11),conv_12:a(12),conv_13:a(13)}},extractPredictionLayerParams:function(){return{conv_0:r("Prediction",0,"prediction_layer/conv_0"),conv_1:r("Prediction",1,"prediction_layer/conv_1"),conv_2:r("Prediction",2,"prediction_layer/conv_2"),conv_3:r("Prediction",3,"prediction_layer/conv_3"),conv_4:r("Prediction",4,"prediction_layer/conv_4"),conv_5:r("Prediction",5,"prediction_layer/conv_5"),conv_6:r("Prediction",6,"prediction_layer/conv_6"),conv_7:r("Prediction",7,"prediction_layer/conv_7"),box_predictor_0:i(0),box_predictor_1:i(1),box_predictor_2:i(2),box_predictor_3:i(3),box_predictor_4:i(4),box_predictor_5:i(5)}}}}(e,t),a=e["Output/extra_dim"];if(t.push({originalPath:"Output/extra_dim",paramPath:"output_layer/extra_dim"}),!yH(a))throw new Error(`expected weightMap['Output/extra_dim'] to be a Tensor3D, instead have ${a}`);const s={mobilenetv1:n(),prediction_layer:r(),output_layer:{extra_dim:a}};return vj(e,t),{params:s,paramMappings:t}}(e)}extractParams(e){return function(e){const t=[],{extractWeights:n,getRemainingWeights:r}=Ej(e),{extractMobilenetV1Params:a,extractPredictionLayerParams:s}=function(e,t){function n(n,r,a,s,i){const o=ad(e(n*r*a*a),[a,a,n,r]),u=nd(e(r));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/${i?"batch_norm_offset":"bias"}`}),{filters:o,bias:u}}function r(e,t,r,a){const{filters:s,bias:i}=n(e,t,r,a,!0);return{filters:s,batch_norm_offset:i}}function a(n,a,s){const i=function(n,r){const a=ad(e(9*n),[3,3,n,1]),s=nd(e(n)),i=nd(e(n)),o=nd(e(n)),u=nd(e(n));return t.push({paramPath:`${r}/filters`},{paramPath:`${r}/batch_norm_scale`},{paramPath:`${r}/batch_norm_offset`},{paramPath:`${r}/batch_norm_mean`},{paramPath:`${r}/batch_norm_variance`}),{filters:a,batch_norm_scale:s,batch_norm_offset:i,batch_norm_mean:o,batch_norm_variance:u}}(n,`${s}/depthwise_conv`);return{depthwise_conv:i,pointwise_conv:r(n,a,1,`${s}/pointwise_conv`)}}return{extractMobilenetV1Params:function(){return{conv_0:r(3,32,3,"mobilenetv1/conv_0"),conv_1:a(32,64,"mobilenetv1/conv_1"),conv_2:a(64,128,"mobilenetv1/conv_2"),conv_3:a(128,128,"mobilenetv1/conv_3"),conv_4:a(128,256,"mobilenetv1/conv_4"),conv_5:a(256,256,"mobilenetv1/conv_5"),conv_6:a(256,512,"mobilenetv1/conv_6"),conv_7:a(512,512,"mobilenetv1/conv_7"),conv_8:a(512,512,"mobilenetv1/conv_8"),conv_9:a(512,512,"mobilenetv1/conv_9"),conv_10:a(512,512,"mobilenetv1/conv_10"),conv_11:a(512,512,"mobilenetv1/conv_11"),conv_12:a(512,1024,"mobilenetv1/conv_12"),conv_13:a(1024,1024,"mobilenetv1/conv_13")}},extractPredictionLayerParams:function(){return{conv_0:r(1024,256,1,"prediction_layer/conv_0"),conv_1:r(256,512,3,"prediction_layer/conv_1"),conv_2:r(512,128,1,"prediction_layer/conv_2"),conv_3:r(128,256,3,"prediction_layer/conv_3"),conv_4:r(256,128,1,"prediction_layer/conv_4"),conv_5:r(128,256,3,"prediction_layer/conv_5"),conv_6:r(256,64,1,"prediction_layer/conv_6"),conv_7:r(64,128,3,"prediction_layer/conv_7"),box_predictor_0:{box_encoding_predictor:n(512,12,1,"prediction_layer/box_predictor_0/box_encoding_predictor"),class_predictor:n(512,9,1,"prediction_layer/box_predictor_0/class_predictor")},box_predictor_1:{box_encoding_predictor:n(1024,24,1,"prediction_layer/box_predictor_1/box_encoding_predictor"),class_predictor:n(1024,18,1,"prediction_layer/box_predictor_1/class_predictor")},box_predictor_2:{box_encoding_predictor:n(512,24,1,"prediction_layer/box_predictor_2/box_encoding_predictor"),class_predictor:n(512,18,1,"prediction_layer/box_predictor_2/class_predictor")},box_predictor_3:{box_encoding_predictor:n(256,24,1,"prediction_layer/box_predictor_3/box_encoding_predictor"),class_predictor:n(256,18,1,"prediction_layer/box_predictor_3/class_predictor")},box_predictor_4:{box_encoding_predictor:n(256,24,1,"prediction_layer/box_predictor_4/box_encoding_predictor"),class_predictor:n(256,18,1,"prediction_layer/box_predictor_4/class_predictor")},box_predictor_5:{box_encoding_predictor:n(128,24,1,"prediction_layer/box_predictor_5/box_encoding_predictor"),class_predictor:n(128,18,1,"prediction_layer/box_predictor_5/class_predictor")}}}}}(n,t),i=a(),o=s(),u={extra_dim:ao(n(20472),[1,5118,4])};if(t.push({paramPath:"output_layer/extra_dim"}),0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{params:{mobilenetv1:i,prediction_layer:o,output_layer:u},paramMappings:t}}(e)}},tinyFaceDetector:new class extends xq{constructor(){super({withSeparableConvs:!0,iouThreshold:.4,classes:["face"],anchors:Sq,meanRgb:Nq,isFirstLayerConv2d:!0,filterSizes:[3,16,32,64,128,256,512]})}get anchors(){return this.config.anchors}async locateFaces(e,t){return(await this.detect(e,t)).map((e=>new FH(e.score,e.relativeBox,{width:e.imageWidth,height:e.imageHeight})))}getDefaultModelName(){return"tiny_face_detector_model"}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}},tinyYolov2:new class extends xq{constructor(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];super({withSeparableConvs:e,iouThreshold:.4,classes:["face"],...e?{anchors:hq,meanRgb:dq}:{anchors:cq,withClassScores:!0}})}get withSeparableConvs(){return this.config.withSeparableConvs}get anchors(){return this.config.anchors}async locateFaces(e,t){return(await this.detect(e,t)).map((e=>new FH(e.score,e.relativeBox,{width:e.imageWidth,height:e.imageHeight})))}getDefaultModelName(){return this.withSeparableConvs?"tiny_yolov2_separable_conv_model":"tiny_yolov2_model"}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}},faceLandmark68Net:new class extends Kj{constructor(){super("FaceLandmark68Net",arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Aj)}getDefaultModelName(){return"face_landmark_68_model"}getClassifierChannelsIn(){return 256}},faceLandmark68TinyNet:new class extends Kj{constructor(){super("FaceLandmark68TinyNet",arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Xj)}getDefaultModelName(){return"face_landmark_68_tiny_model"}getClassifierChannelsIn(){return 128}},faceRecognitionNet:new class extends mj{constructor(){super("FaceRecognitionNet")}forwardInput(e){const{params:t}=this;if(!t)throw new Error("FaceRecognitionNet - load model before inference");return iu((()=>{let n=Qj(DH(Ci(e.toBatchTensor(150,!0),"float32"),[122.782,117.001,104.298]).div(255),t.conv32_down);n=Lc(n,3,2,"valid"),n=tq(n,t.conv32_1),n=tq(n,t.conv32_2),n=tq(n,t.conv32_3),n=nq(n,t.conv64_down),n=tq(n,t.conv64_1),n=tq(n,t.conv64_2),n=tq(n,t.conv64_3),n=nq(n,t.conv128_down),n=tq(n,t.conv128_1),n=tq(n,t.conv128_2),n=nq(n,t.conv256_down),n=tq(n,t.conv256_1),n=tq(n,t.conv256_2),n=nq(n,t.conv256_down_out);const r=n.mean([1,2]);return Ki(r,t.fc)}))}async forward(e){return this.forwardInput(await cj(e))}async computeFaceDescriptor(e){var t;if(null==(t=null==e?void 0:e.shape)?void 0:t.some((e=>e<=0)))return new Float32Array(128);const n=await cj(e),r=iu((()=>hd(this.forwardInput(n)))),a=await Promise.all(r.map((e=>e.data())));return r.forEach((e=>e.dispose())),n.isBatchInput?a:a[0]}getDefaultModelName(){return"face_recognition_model"}extractParamsFromWeightMap(e){return function(e){const t=[],{extractConvLayerParams:n,extractResidualLayerParams:r}=function(e,t){const n=Tj(e,t);function r(e){const t=n(`${e}/conv/filters`,4),r=n(`${e}/conv/bias`,1),a=function(e){return{weights:n(`${e}/scale/weights`,1),biases:n(`${e}/scale/biases`,1)}}(e);return{conv:{filters:t,bias:r},scale:a}}return{extractConvLayerParams:r,extractResidualLayerParams:function(e){return{conv1:r(`${e}/conv1`),conv2:r(`${e}/conv2`)}}}}(e,t),a=n("conv32_down"),s=r("conv32_1"),i=r("conv32_2"),o=r("conv32_3"),u=r("conv64_down"),l=r("conv64_1"),c=r("conv64_2"),h=r("conv64_3"),d=r("conv128_down"),p=r("conv128_1"),f=r("conv128_2"),m=r("conv256_down"),g=r("conv256_1"),y=r("conv256_2"),b=r("conv256_down_out"),{fc:x}=e;if(t.push({originalPath:"fc",paramPath:"fc"}),!gH(x))throw new Error(`expected weightMap[fc] to be a Tensor2D, instead have ${x}`);const v={conv32_down:a,conv32_1:s,conv32_2:i,conv32_3:o,conv64_down:u,conv64_1:l,conv64_2:c,conv64_3:h,conv128_down:d,conv128_1:p,conv128_2:f,conv256_down:m,conv256_1:g,conv256_2:y,conv256_down_out:b,fc:x};return vj(e,t),{params:v,paramMappings:t}}(e)}extractParams(e){return function(e){const{extractWeights:t,getRemainingWeights:n}=Ej(e),r=[],{extractConvLayerParams:a,extractResidualLayerParams:s}=eq(t,r),i=a(4704,32,7,"conv32_down"),o=s(9216,32,3,"conv32_1"),u=s(9216,32,3,"conv32_2"),l=s(9216,32,3,"conv32_3"),c=s(36864,64,3,"conv64_down",!0),h=s(36864,64,3,"conv64_1"),d=s(36864,64,3,"conv64_2"),p=s(36864,64,3,"conv64_3"),f=s(147456,128,3,"conv128_down",!0),m=s(147456,128,3,"conv128_1"),g=s(147456,128,3,"conv128_2"),y=s(589824,256,3,"conv256_down",!0),b=s(589824,256,3,"conv256_1"),x=s(589824,256,3,"conv256_2"),v=s(589824,256,3,"conv256_down_out"),w=iu((()=>Yi(rd(t(32768),[128,256]),[1,0])));if(r.push({paramPath:"fc"}),0!==n().length)throw new Error(`weights remaing after extract: ${n().length}`);return{params:{conv32_down:i,conv32_1:o,conv32_2:u,conv32_3:l,conv64_down:c,conv64_1:h,conv64_2:d,conv64_3:p,conv128_down:f,conv128_1:m,conv128_2:g,conv256_down:y,conv256_1:b,conv256_2:x,conv256_down_out:v,fc:w},paramMappings:r}}(e)}},faceExpressionNet:new class extends Dj{constructor(){super("FaceExpressionNet",arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Aj)}forwardInput(e){return iu((()=>Uh(this.runNet(e))))}async forward(e){return this.forwardInput(await cj(e))}async predictExpressions(e){const t=await cj(e),n=await this.forwardInput(t),r=await Promise.all(hd(n).map((async e=>{const t=e.dataSync();return e.dispose(),t})));n.dispose();const a=r.map((e=>new Oj(e)));return t.isBatchInput?a:a[0]}getDefaultModelName(){return"face_expression_model"}getClassifierChannelsIn(){return 256}getClassifierChannelsOut(){return 7}},ageGenderNet:new class extends mj{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new qj(2);super("AgeGenderNet"),this._faceFeatureExtractor=e}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){const{params:t}=this;if(!t)throw new Error(`${this._name} - load model before inference`);return iu((()=>{const n=e instanceof lj?this.faceFeatureExtractor.forwardInput(e):e,r=Qu(n,[7,7],[2,2],"valid").as2D(n.shape[0],-1);return{age:Fj(r,t.fc.age).as1D(),gender:Fj(r,t.fc.gender)}}))}forwardInput(e){return iu((()=>{const{age:t,gender:n}=this.runNet(e);return{age:t,gender:Uh(n)}}))}async forward(e){return this.forwardInput(await cj(e))}async predictAgeAndGender(e){const t=await cj(e),n=await this.forwardInput(t),r=hd(n.age),a=hd(n.gender),s=r.map(((e,t)=>({ageTensor:e,genderTensor:a[t]}))),i=await Promise.all(s.map((async e=>{let{ageTensor:t,genderTensor:n}=e;const r=t.dataSync()[0],a=n.dataSync()[0],s=a>.5,i=s?"male":"female",o=s?a:1-a;return t.dispose(),n.dispose(),{age:r,gender:i,genderProbability:o}})));return n.age.dispose(),n.gender.dispose(),t.isBatchInput?i:i[0]}getDefaultModelName(){return"age_gender_model"}dispose(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){const{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return function(e){const t=[],{extractWeights:n,getRemainingWeights:r}=Ej(e),a=kj(n,t),s=a(512,1,"fc/age"),i=a(512,2,"fc/gender");if(0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{fc:{age:s,gender:i}}}}(e)}extractParamsFromWeightMap(e){const{featureExtractorMap:t,classifierMap:n}=Rj(e);return this.faceFeatureExtractor.loadFromWeightMap(t),function(e){const t=[],n=Tj(e,t);function r(e){return{weights:n(`${e}/weights`,2),bias:n(`${e}/bias`,1)}}const a={fc:{age:r("fc/age"),gender:r("fc/gender")}};return vj(e,t),{params:a,paramMappings:t}}(n)}extractParams(e){const t=e.slice(0,e.length-1539),n=e.slice(e.length-1539);return this.faceFeatureExtractor.extractWeights(t),this.extractClassifierParams(n)}}},Eq=class extends wq{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},Cq=class extends Eq{async run(){const e=await this.parentTask,t=await kq(e,this.input,(async e=>Promise.all(e.map((e=>Tq.faceExpressionNet.predictExpressions(e))))),this.extractedFaces);return e.map(((e,n)=>zj(e,t[n])))}withAgeAndGender(){return new Rq(this,this.input)}},_q=class extends Eq{async run(){const e=await this.parentTask;if(e)return zj(e,await Iq(e,this.input,(e=>Tq.faceExpressionNet.predictExpressions(e)),this.extractedFaces))}withAgeAndGender(){return new Dq(this,this.input)}},$q=class extends Cq{withAgeAndGender(){return new Mq(this,this.input)}withFaceDescriptors(){return new zq(this,this.input)}},Aq=class extends _q{withAgeAndGender(){return new Oq(this,this.input)}withFaceDescriptor(){return new Pq(this,this.input)}},Fq=class extends wq{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},Rq=class extends Fq{async run(){const e=await this.parentTask,t=await kq(e,this.input,(async e=>Promise.all(e.map((e=>Tq.ageGenderNet.predictAgeAndGender(e))))),this.extractedFaces);return e.map(((e,n)=>{const{age:r,gender:a,genderProbability:s}=t[n];return aq(sq(e,a,s),r)}))}withFaceExpressions(){return new Cq(this,this.input)}},Dq=class extends Fq{async run(){const e=await this.parentTask;if(!e)return;const{age:t,gender:n,genderProbability:r}=await Iq(e,this.input,(e=>Tq.ageGenderNet.predictAgeAndGender(e)),this.extractedFaces);return aq(sq(e,n,r),t)}withFaceExpressions(){return new _q(this,this.input)}},Mq=class extends Rq{withFaceExpressions(){return new $q(this,this.input)}withFaceDescriptors(){return new zq(this,this.input)}},Oq=class extends Dq{withFaceExpressions(){return new Aq(this,this.input)}withFaceDescriptor(){return new Pq(this,this.input)}},Lq=class extends wq{constructor(e,t){super(),this.parentTask=e,this.input=t}},zq=class extends Lq{async run(){const e=await this.parentTask;return(await kq(e,this.input,(e=>Promise.all(e.map((e=>Tq.faceRecognitionNet.computeFaceDescriptor(e))))),null,(e=>e.landmarks.align(null,{useDlibAlignment:!0})))).map(((t,n)=>rq(e[n],t)))}withFaceExpressions(){return new $q(this,this.input)}withAgeAndGender(){return new Mq(this,this.input)}},Pq=class extends Lq{async run(){const e=await this.parentTask;if(e)return rq(e,await Iq(e,this.input,(e=>Tq.faceRecognitionNet.computeFaceDescriptor(e)),null,(e=>e.landmarks.align(null,{useDlibAlignment:!0}))))}withFaceExpressions(){return new Aq(this,this.input)}withAgeAndGender(){return new Oq(this,this.input)}},Bq=class extends wq{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.useTinyLandmarkNet=n}get landmarkNet(){return this.useTinyLandmarkNet?Tq.faceLandmark68TinyNet:Tq.faceLandmark68Net}},Wq=class extends Bq{async run(){const e=await this.parentTask,t=e.map((e=>e.detection)),n=this.input instanceof ja?await dj(this.input,t):await hj(this.input,t),r=await Promise.all(n.map((e=>this.landmarkNet.detectLandmarks(e))));return n.forEach((e=>e instanceof ja&&e.dispose())),e.map(((e,t)=>Wj(e,r[t])))}withFaceExpressions(){return new $q(this,this.input)}withAgeAndGender(){return new Mq(this,this.input)}withFaceDescriptors(){return new zq(this,this.input)}},Vq=class extends Bq{async run(){const e=await this.parentTask;if(!e)return;const{detection:t}=e,n=this.input instanceof ja?await dj(this.input,[t]):await hj(this.input,[t]),r=await this.landmarkNet.detectLandmarks(n[0]);return n.forEach((e=>e instanceof ja&&e.dispose())),Wj(e,r)}withFaceExpressions(){return new Aq(this,this.input)}withAgeAndGender(){return new Oq(this,this.input)}withFaceDescriptor(){return new Pq(this,this.input)}},Uq=class extends wq{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new lq;super(),this.input=e,this.options=t}},Gq=class extends Uq{async run(){const{input:e,options:t}=this;let n;if(t instanceof vq)n=Tq.tinyFaceDetector.locateFaces(e,t);else if(t instanceof lq)n=Tq.ssdMobilenetv1.locateFaces(e,t);else{if(!(t instanceof yq))throw new Error("detectFaces - expected options to be instance of TinyFaceDetectorOptions | SsdMobilenetv1Options | TinyYolov2Options");n=Tq.tinyYolov2.locateFaces(e,t)}return n}runAndExtendWithFaceDetections(){return new Promise(((e,t)=>{this.run().then((t=>e(t.map((e=>WH({},e)))))).catch((e=>t(e)))}))}withFaceLandmarks(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return new Wq(this.runAndExtendWithFaceDetections(),this.input,e)}withFaceExpressions(){return new Cq(this.runAndExtendWithFaceDetections(),this.input)}withAgeAndGender(){return new Rq(this.runAndExtendWithFaceDetections(),this.input)}},Hq=class extends Uq{async run(){const e=await new Gq(this.input,this.options);let t=e[0];return e.forEach((e=>{e.score>t.score&&(t=e)})),t}runAndExtendWithFaceDetection(){return new Promise((async e=>{const t=await this.run();e(t?WH({},t):void 0)}))}withFaceLandmarks(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return new Vq(this.runAndExtendWithFaceDetection(),this.input,e)}withFaceExpressions(){return new _q(this.runAndExtendWithFaceDetection(),this.input)}withAgeAndGender(){return new Dq(this.runAndExtendWithFaceDetection(),this.input)}};const jq="FACIAL_EXPRESSION_MESSAGE_TYPE";let qq,Kq,Xq=!1,Yq=!1,Zq=-1;const Jq={screen:{width:1280,height:720}};onmessage=async function(e){switch(e.data.type){case"INIT_WORKER":qq=e.data.url,e.data.windowScreenSize&&(Jq.screen=e.data.windowScreenSize);break;case"SET_TIMEOUT":{e.data.imageBitmap&&qq||self.postMessage({type:jq,value:null}),Xq||(await(t=qq,Tq.tinyFaceDetector.load(t)),await(e=>Tq.faceExpressionNet.load(e))(qq),Xq=!0),s.engine().startScope();const n=s.browser.fromPixels(e.data.imageBitmap),r=await function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new lq;return new Hq(e,t)}(n,new vq).withFaceExpressions();if(!Yq){const e=s.getBackend();e&&("webgl"===e?Zq=1e3:"cpu"===e&&(Zq=6e3),self.postMessage({type:"INTERVAL_MESSAGE_TYPE",value:Zq}),Yq=!0)}let a;s.engine().endScope(),r&&(a=r.expressions.asSortedArray()[0].expression),Kq=setTimeout((()=>{self.postMessage({type:jq,value:a})}),Zq);break}case"CLEAR_TIMEOUT":Kq&&(clearTimeout(Kq),Kq=null)}var t}})()})();
//# sourceMappingURL=facial-expressions-worker.min.js.map